<android.telephony.SignalStrength: boolean isGsm()>
<android.telephony.PhoneNumberUtils: byte[] numberToCalledPartyBCD(String)>
<android.net.Proxy: String getDefaultHost()>
<android.graphics.ImageDecoder: boolean getAsAlphaMask()>
<android.renderscript.Mesh.Builder: Builder addIndexSetType(Primitive)>
<android.webkit.CacheManager: void saveCacheFile(String,CacheResult)>
<android.content.ContextWrapper: int getWallpaperDesiredMinimumWidth()>
<android.location.LocationManager: void setLocationControllerExtraPackage(String)>
<android.renderscript.RSSurfaceView: void setRenderScriptGL(RenderScriptGL)>
<android.telecom.RemoteConference: void setAudioState(AudioState)>
<android.os.storage.StorageManager: long benchmark(String)>
<android.net.NetworkPolicyManager: boolean isUidValidForPolicy(Context,int)>
<android.graphics.RenderNode: RecordingCanvas start(int,int)>
<android.telecom.StatusHints: Drawable getIcon(Context)>
<android.hardware.radio.RadioManager.ProgramInfo: int getSubChannel()>
<android.content.pm.ShortcutQueryWrapper: void __metadata()>
<android.content.pm.PackageManager: void <init>()>
<android.app.AppOpsManager: int noteProxyOpNoThrow(String,String)>
<android.webkit.WebView: boolean overlayVerticalScrollbar()>
<android.util.proto.ProtoOutputStream: void endRepeatedObject(long)>
<android.widget.ImageView: void setAlpha(int)>
<android.speech.tts.TextToSpeech: int synthesizeToFile(String,HashMap<String, String>,String)>
<android.view.View: void setOnSystemUiVisibilityChangeListener(OnSystemUiVisibilityChangeListener)>
<android.app.Activity: void setProgress(int)>
<android.os.StatFs: int getBlockCount()>
<android.util.proto.ProtoOutputStream: void writeRepeatedUInt64(long,long)>
<android.renderscript.Mesh.AllocationBuilder: AllocationBuilder addIndexSetType(Primitive)>
<android.util.proto.ProtoOutputStream: void writeInt64(long,long)>
<android.text.method.DigitsKeyListener: void <init>(boolean,boolean)>
<android.content.pm.PackageItemInfo: CharSequence loadSafeLabel(PackageManager)>
<android.net.wifi.nl80211.WifiNl80211Manager: boolean startScan(String,int,Set<Integer>,List<byte[]>)>
<android.os.Environment: File getUserConfigDirectory(int)>
<android.text.style.ImageSpan: void <init>(Bitmap)>
<android.net.NetworkPolicyManager: Iterator<Pair<ZonedDateTime, ZonedDateTime>> cycleIterator(NetworkPolicy)>
<android.test.TouchUtils: void drag(ActivityInstrumentationTestCase,float,float,float,float,int)>
<android.widget.PopupWindow: boolean isLayoutInScreenEnabled()>
<android.view.View: void setDrawingCacheBackgroundColor(int)>
<android.telephony.SignalStrength: int getCdmaEcio()>
<android.app.AppOpsManager: int startOp(String,int,String)>
<android.location.LocationRequest: float getSmallestDisplacement()>
<android.media.MediaCodec: ByteBuffer[] getInputBuffers()>
<android.content.pm.verify.domain.DomainVerificationInfo: void __metadata()>
<android.hardware.fingerprint.FingerprintManager: boolean hasEnrolledFingerprints()>
<android.location.LocationRequest: long getFastestInterval()>
<android.app.usage.StorageStatsManager: long getTotalBytes(String)>
<android.database.sqlite.SQLiteQueryBuilder: boolean isProjectionAggregationAllowed()>
<com.android.ims.internal.uce.common.CapInfo: boolean isRcsIpVideoOnlyCallSupported()>
<android.net.NetworkStats: NetworkStats combineValues(String,int,int,long,long,long,long,long)>
<android.widget.PopupWindow: void setClipToScreenEnabled(boolean)>
<android.graphics.Canvas: boolean quickReject(RectF,EdgeType)>
<android.content.pm.parsing.ParsingPackageRead: List<String> getRequestedPermissions()>
<android.app.backup.BackupManager: String getDataManagementLabel(String)>
<android.graphics.Outline: void setConvexPath(Path)>
<android.content.pm.PackageManager: int installExistingPackageAsUser(String,int)>
<android.content.pm.PackageParser: Pair<String, String> parsePackageSplitNames(XmlPullParser,AttributeSet)>
<android.webkit.UrlInterceptHandler: PluginData getPluginData(String,Map<String, String>)>
<android.service.search.SearchUiService: void onCreateSearchSession(SearchContext,SearchSessionId)>
<android.telephony.SubscriptionManager: void addOnSubscriptionsChangedListener(OnSubscriptionsChangedListener)>
<android.preference.PreferenceActivity: boolean onPreferenceTreeClick(PreferenceScreen,Preference)>
<android.location.GnssCapabilities: boolean hasMeasurementCorrectionsReflectingPane()>
<android.app.Notification.Action.WearableExtender: CharSequence getConfirmLabel()>
<android.app.Notification.Action.WearableExtender: WearableExtender setCancelLabel(CharSequence)>
<com.android.settingslib.wifi.AccessPoint: String getConfigName()>
<android.os.Debug: int getGlobalGcInvocationCount()>
<android.accounts.AccountManager: AccountManagerFuture<Boolean> removeAccount(Account,AccountManagerCallback<Boolean>,Handler)>
<android.content.Context: File getSharedPrefsFile(String)>
<android.os.PowerWhitelistManager: void removeFromWhitelist(String)>
<android.graphics.drawable.BitmapDrawable: void <init>(Resources)>
<com.android.systemui.media.NotificationPlayer: void play(Context,Uri,boolean,int)>
<android.text.DynamicLayout: void <init>(CharSequence,CharSequence,TextPaint,int,Alignment,TextDirectionHeuristic,float,float,boolean,int,int,int,TruncateAt,int)>
<android.location.LocationRequest: boolean getHideFromAppOps()>
<android.telephony.TelephonyManager: void call(String,String)>
<android.renderscript.Mesh.AllocationBuilder: void <init>(RenderScript)>
<android.telephony.SignalStrength: int getWcdmaRscp()>
<android.content.IContentProvider: int bulkInsert(String,Uri,ContentValues[])>
<android.widget.TextView: void setTextAppearance(Context,int)>
<android.renderscript.Mesh: Allocation getVertexAllocation(int)>
<android.os.RecoverySystem: void rebootAndApply(Context,String,String)>
<android.telephony.CellLocation: void requestLocationUpdate()>
<android.content.ClipboardManager: CharSequence getText()>
<android.webkit.Plugin: void <init>(String,String,String,String)>
<android.app.Fragment: void onAttach(Activity)>
<android.telephony.euicc.DownloadableSubscription: void setConfirmationCode(String)>
<android.content.Intent: IBinder getIBinderExtra(String)>
<android.util.TrustedTime: long currentTimeMillis()>
<android.renderscript.RSSurfaceView: RenderScriptGL createRenderScriptGL(SurfaceConfig)>
<android.content.res.Resources: void <init>(AssetManager,DisplayMetrics,Configuration)>
<android.util.proto.ProtoOutputStream: void writePackedSFixed32(long,int[])>
<android.app.slice.SliceManager: Slice bindSlice(Intent,List<SliceSpec>)>
<android.app.FragmentController: List<Fragment> retainNonConfig()>
<android.webkit.WebChromeClient: void onExceededDatabaseQuota(String,String,long,long,long,QuotaUpdater)>
<android.content.res.Resources: void updateConfiguration(Configuration,DisplayMetrics)>
<android.webkit.WebSettings: void setUseDoubleTree(boolean)>
<android.app.AppOpsManager: void startWatchingActive(int[],OnOpActiveChangedListener)>
<android.service.euicc.EuiccService: int onEraseSubscriptions(int)>
<android.provider.Settings.System: void setShowGTalkServiceStatus(ContentResolver,boolean)>
<android.app.Service: void setForeground(boolean)>
<android.telephony.euicc.DownloadableSubscription: void setAccessRules(List<UiccAccessRule>)>
<android.text.StaticLayout: void <init>(CharSequence,int,int,TextPaint,int,Alignment,float,float,boolean,TruncateAt,int)>
<android.app.Activity: void onMultiWindowModeChanged(boolean)>
<android.net.NetworkStatsHistory: void removeBucketsBefore(long)>
<android.renderscript.RenderScriptGL: void setSurfaceTexture(SurfaceTexture,int,int)>
<android.view.View: void dispatchSystemUiVisibilityChanged(int)>
<android.hardware.location.ContextHubManager: NanoAppInstanceInfo getNanoAppInstanceInfo(int)>
<android.view.ViewConfiguration: int getMinimumFlingVelocity()>
<com.android.codegentest.SampleWithNestedDataClasses.NestedDataClass: void __metadata()>
<android.telephony.ims.ImsCallSessionListener: void callSessionMayHandover(int,int)>
<android.location.Location: void removeAltitude()>
<android.app.Notification.Action.WearableExtender: CharSequence getInProgressLabel()>
<android.util.proto.ProtoOutputStream: void writeRepeatedSInt32(long,int)>
<com.android.ims.internal.uce.common.CapInfo: boolean isChatbotSupported()>
<android.graphics.Canvas: boolean quickReject(float,float,float,float,EdgeType)>
<android.content.res.AssetManager: int addAssetPath(String)>
<android.graphics.ImageDecoder: ImageDecoder setMutable(boolean)>
<com.android.systemui.shared.system.RemoteTransitionCompat: void __metadata()>
<android.location.GnssMeasurement: void setCarrierPhase(double)>
<android.telephony.TelephonyManager: int[] supplyPukReportResult(String,String)>
<android.location.LocationRequest: LocationRequest setProvider(String)>
<android.telephony.PhoneStateListener: void onRadioPowerStateChanged(int)>
<android.webkit.WebSettings: boolean enableSmoothTransition()>
<android.app.Notification.BubbleMetadata.Builder: void <init>()>
<android.telephony.SignalStrength: int getLteSignalStrength()>
<android.content.pm.PackageManager: int installExistingPackage(String,int)>
<android.graphics.Canvas: boolean quickReject(Path,EdgeType)>
<android.view.textclassifier.TextClassification: Intent getIntent()>
<com.android.ims.internal.uce.common.CapInfo: boolean isIsSupported()>
<com.android.internal.widget.PagerAdapter: void setPrimaryItem(View,int,Object)>
<com.android.ims.internal.uce.common.CapInfo: boolean isSmSupported()>
<android.app.Notification.WearableExtender: int getGravity()>
<android.telephony.PhoneStateListener: void onSrvccStateChanged(int)>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumLength(ComponentName,int)>
<com.android.ims.internal.uce.common.CapInfo: void setCallComposerSupported(boolean)>
<android.app.backup.BackupManager: void updateTransportAttributes(ComponentName,String,Intent,String,Intent,String)>
<android.media.AudioManager: void registerRemoteControlClient(RemoteControlClient)>
<android.graphics.drawable.BitmapDrawable: void <init>()>
<android.content.pm.PackageManager: List<IntentFilterVerificationInfo> getIntentFilterVerifications(String)>
<android.app.AppOpsManager: int startOpNoThrow(String,int,String)>
<android.graphics.BitmapRegionDecoder: BitmapRegionDecoder newInstance(FileDescriptor,boolean)>
<android.content.pm.verify.domain.DomainVerificationRequest: void __metadata()>
<android.text.style.SuggestionSpan: void notifySelection(Context,String,int)>
<android.renderscript.ProgramRaster: ProgramRaster CULL_BACK(RenderScript)>
<android.content.Context: void removeStickyBroadcastAsUser(Intent,UserHandle)>
<android.telecom.Connection: AudioState getAudioState()>
<android.content.pm.PackageManager: Resources getResourcesForApplicationAsUser(String,int)>
<android.app.Notification.Action.WearableExtender: WearableExtender setInProgressLabel(CharSequence)>
<android.view.ViewGroup: boolean isAlwaysDrawnWithCacheEnabled()>
<android.hardware.biometrics.BiometricPrompt.Builder: Builder setDeviceCredentialAllowed(boolean)>
<android.telephony.TelephonyManager: String getNetworkCountryIsoForPhone(int)>
<android.media.CamcorderProfile: CamcorderProfile get(int,int)>
<com.android.internal.view.InlineSuggestionsRequestInfo: void __metadata()>
<android.app.AppOpsManager: int startOp(int,int,String)>
<android.view.inputmethod.InputMethodSubtype: void <init>(int,int,String,String,String,boolean,boolean,int)>
<android.app.FragmentManagerImpl: void dispatchMultiWindowModeChanged(boolean)>
<android.media.MediaPlayer: void setAudioStreamType(int)>
<android.app.Notification.Builder: Builder setSound(Uri,AudioAttributes)>
<android.renderscript.Mesh.TriangleMeshBuilder: TriangleMeshBuilder addVertex(float,float,float)>
<android.telephony.ims.stub.ImsSmsImplBase: void onSendSmsResult(int,int,int,int)>
<android.content.Context: int getWallpaperDesiredMinimumWidth()>
<android.telephony.SignalStrength: int getWcdmaDbm()>
<android.renderscript.ProgramRaster: ProgramRaster CULL_NONE(RenderScript)>
<android.content.ContentResolver: SyncInfo getCurrentSync()>
<android.media.MediaScanner: void setLocale(String)>
<android.service.notification.ConditionProviderService: void notifyCondition(Condition)>
<android.telephony.NeighboringCellInfo: void <init>(int,int)>
<com.android.server.locksettings.recoverablekeystore.RecoverableKeyStoreManager: byte[] startRecoverySession(String,byte[],byte[],byte[],List<KeyChainProtectionParams>)>
<android.app.AppOpsManager.OpEntry: int getProxyUid()>
<android.webkit.CacheManager: boolean endCacheTransaction()>
<android.service.voice.VoiceInteractionSession: void onHandleAssistSecondary(Bundle,AssistStructure,AssistContent,int,int)>
<android.app.AppOpsManager: int noteOpNoThrow(String,int,String)>
<com.android.ims.internal.uce.common.CapInfo: boolean isFullSnFGroupChatSupported()>
<com.android.uiautomator.core.QueryController: String getCurrentActivityName()>
<javax.microedition.khronos.egl.EGL10: EGLSurface eglCreatePixmapSurface(EGLDisplay,EGLConfig,Object,int[])>
<android.view.ViewDebug: void startRecyclerTracing(String,View)>
<android.renderscript.ProgramVertex: int getInputCount()>
<android.view.Display: void getRectSize(Rect)>
<android.text.method.DigitsKeyListener: void <init>()>
<android.telephony.TelephonyManager: boolean isTtyModeSupported()>
<android.content.Context: String getFeatureId()>
<android.telephony.PhoneStateListener: void onDataActivity(int)>
<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInParent(Rect)>
<android.webkit.WebView: int findAll(String)>
<android.media.tv.TvInputInfo: Intent createSettingsIntent()>
<android.hardware.camera2.CameraDevice: void createReprocessableCaptureSessionByConfigurations(InputConfiguration,List<OutputConfiguration>,StateCallback,Handler)>
<android.app.Notification.Builder: Builder setPriority(int)>
<android.telephony.ims.ImsCallSessionListener: void callSessionInitiatedFailed(ImsReasonInfo)>
<android.app.UiAutomation: boolean revokeRuntimePermission(String,String,UserHandle)>
<com.android.server.pm.parsing.pkg.PkgAppInfo: int getTargetSandboxVersion()>
<android.os.StatFs: int getAvailableBlocks()>
<android.database.sqlite.SQLiteProgram: int getUniqueId()>
<android.os.UserManager: void setUserRestriction(String,boolean,UserHandle)>
<android.provider.Contacts.Settings: String getSetting(ContentResolver,String,String)>
<android.renderscript.ProgramFragmentFixedFunction.Builder: void <init>(RenderScript)>
<com.android.internal.security.VerityUtils.SetupResult: SetupResult skipped()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onStartedWakingUp()>
<android.provider.Contacts.People: void <init>()>
<android.renderscript.ProgramFragmentFixedFunction.InternalBuilder: ProgramFragmentFixedFunction create()>
<android.renderscript.Font: Font createFromResource(RenderScript,Resources,int,float)>
<android.renderscript.Mesh: Primitive getPrimitive(int)>
<com.android.ims.internal.uce.common.CapInfo: boolean isCallComposerSupported()>
<android.view.inputmethod.InputMethodManager: InputMethodManager peekInstance()>
<android.graphics.EmbossMaskFilter: void <init>(float[],float,float,float)>
<android.content.pm.ShortcutInfo.Builder: Builder setTextResId(int)>
<android.provider.Contacts.Settings: void setSetting(ContentResolver,String,String,String)>
<android.telephony.data.DataProfile: int getMtu()>
<android.accounts.AccountManager: Intent newChooseAccountIntent(Account,ArrayList<Account>,String[],boolean,String,String,String[],Bundle)>
<android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(int,String,String)>
<android.view.inputmethod.InputMethodManager: void windowDismissed(IBinder)>
<android.media.MediaScanner: void prescan(String,boolean)>
<android.location.LocationManager: void removeGpsStatusListener(Listener)>
<android.telephony.SignalStrength: int getCdmaAsuLevel()>
<com.android.server.pm.PackageInstallerService: String allocateExternalStageCidLegacy()>
<android.provider.Contacts.People: void setPhotoData(ContentResolver,Uri,byte[])>
<android.hardware.soundtrigger.KeyphraseMetadata: void __metadata()>
<android.app.slice.SliceManager: void pinSlice(Uri,List<SliceSpec>)>
<com.android.ims.internal.uce.common.CapInfo: boolean isRcsIpVoiceCallSupported()>
<android.app.ActionBar: int getSelectedNavigationIndex()>
<android.test.TouchUtils: void dragViewToBottom(ActivityInstrumentationTestCase,View,int)>
<android.view.View: int getDrawingCacheQuality()>
<com.android.systemui.plugins.Plugin: int getVersion()>
<android.net.TrafficStats: long getUidTcpRxBytes(int)>
<android.webkit.WebSettings: void setAllowFileAccessFromFileURLs(boolean)>
<android.app.Notification.WearableExtender: int getContentIconGravity()>
<android.content.pm.parsing.ParsingPackageRead: int getTargetSandboxVersion()>
<android.webkit.WebSettings: boolean getSaveFormData()>
<android.app.ActionBar: void addTab(Tab,int,boolean)>
<android.webkit.WebChromeClient: void onShowCustomView(View,int,CustomViewCallback)>
<android.bluetooth.BluetoothGatt: void abortReliableWrite(BluetoothDevice)>
<android.os.VintfObject: int verify(String[])>
<android.telephony.ims.feature.MmTelFeature.MmTelCapabilities: void <init>(Capabilities)>
<android.media.MediaFile: void addFileType(String,int,String)>
<android.preference.PreferenceActivity: PreferenceScreen getPreferenceScreen()>
<android.content.pm.ShortcutInfo: CharSequence getText()>
<android.view.View: void onWindowSystemUiVisibilityChanged(int)>
<com.android.internal.util.AnnotationValidations: void validate(Class<? extends Annotation>,Annotation,int,Object)>
<android.location.LocationRequest: String getProvider()>
<android.os.storage.StorageManager: boolean isUsbMassStorageEnabled()>
<android.os.Environment.UserEnvironment: File getExternalStoragePublicDirectory(String)>
<android.telephony.PhoneStateListener: void onCellLocationChanged(CellLocation)>
<android.telephony.PhoneStateListener: void onCallDisconnectCauseChanged(int,int)>
<com.android.ims.ImsConfig: int getProvisionedValue(int)>
<android.app.AppOpsManager.OpEntry: long getRejectTime()>
<android.text.StaticLayout: void <init>(CharSequence,TextPaint,int,Alignment,float,float,boolean)>
<android.widget.espresso.FloatingToolbarEspressoUtils: void assertFloatingToolbarIsNotDisplayed()>
<android.graphics.Canvas: boolean clipRect(float,float,float,float,Op)>
<android.security.keystore.KeyGenParameterSpec.Builder: Builder setUid(int)>
<android.view.translation.TranslationRequest.Builder: Builder addViewTranslationRequest(ViewTranslationRequest)>
<android.webkit.URLUtil: boolean isCookielessProxyUrl(String)>
<android.service.carrier.CarrierMessagingService: void onSendTextSms(String,int,String,ResultCallback<SendSmsResult>)>
<android.content.res.Resources: int getColor(int)>
<android.app.backup.RestoreSession: int restoreSome(long,RestoreObserver,String[])>
<android.telephony.TelephonyManager: int getNetworkType()>
<android.service.persistentdata.PersistentDataBlockManager: void setOemUnlockEnabled(boolean)>
<android.telephony.TelephonyManager: boolean setPreferredNetworkTypeBitmask(long)>
<android.appwidget.AppWidgetHostView: void updateAppWidgetSize(Bundle,int,int,int,int)>
<android.telecom.Connection.VideoProvider: void changeCallDataUsage(long)>
<android.renderscript.RSTextureView: void <init>(Context,AttributeSet)>
<android.text.StaticLayout: void <init>(CharSequence,int,int,TextPaint,int,Alignment,TextDirectionHeuristic,float,float,boolean,TruncateAt,int,int)>
<android.test.TouchUtils: int dragViewToY(ActivityInstrumentationTestCase,View,int,int)>
<android.nfc.NfcAdapter: NfcAdapter getDefaultAdapter()>
<android.webkit.WebSettings: boolean getLightTouchEnabled()>
<android.view.KeyEvent: String getCharacters()>
<android.os.Debug: int getGlobalExternalFreedCount()>
<android.content.pm.Checksum: void __metadata()>
<android.util.proto.ProtoOutputStream: void writeRepeatedDouble(long,double)>
<android.telephony.SignalStrength: int getLteRssnr()>
<android.telecom.TelecomManager: boolean setDefaultDialer(String)>
<android.webkit.WebViewDatabase: boolean hasUsernamePassword()>
<android.webkit.WebViewDatabase: void clearUsernamePassword()>
<android.renderscript.ProgramFragmentFixedFunction.Builder: ProgramFragmentFixedFunction create()>
<android.util.AtomicFile: void truncate()>
<android.telephony.ims.ImsCallSessionListener: void callSessionHandover(int,int,ImsReasonInfo)>
<android.widget.CalendarView: void setSelectedWeekBackgroundColor(int)>
<android.view.View: boolean willNotCacheDrawing()>
<android.view.MotionEvent: MotionEvent obtain(long,long,int,int,int[],PointerCoords[],int,float,float,int,int,int,int)>
<android.renderscript.ProgramVertexFixedFunction.Constants: void setTexture(Matrix4f)>
<android.view.inputmethod.InputMethodManager: void notifyUserAction()>
<android.speech.tts.TextToSpeech: int setOnUtteranceCompletedListener(OnUtteranceCompletedListener)>
<android.text.SpannableStringBuilder: int getTextRunCursor(int,int,int,int,int,Paint)>
<android.webkit.WebSettings: void setPluginsPath(String)>
<android.app.AppOpsManager: void finishOp(int,int,String)>
<android.app.slice.Slice.Builder: void <init>(Uri)>
<android.media.MediaScanner: boolean isNoMediaPath(String)>
<com.android.server.pm.pkg.PackageStateUnserialized: void __metadata()>
<android.location.LocationRequest: LocationRequest setExpireIn(long)>
<android.telephony.TelephonyManager: boolean iccCloseLogicalChannelBySlot(int,int)>
<android.text.method.DigitsKeyListener: DigitsKeyListener getInstance()>
<android.app.NotificationManager: boolean areBubblesAllowed()>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLowerCase(ComponentName)>
<android.content.pm.PackageManager: int getIntentVerificationStatusAsUser(String,int)>
<android.webkit.WebView: void onGlobalFocusChanged(View,View)>
<android.accessibilityservice.AccessibilityServiceInfo: String getDescription()>
<android.speech.tts.TextToSpeech: boolean areDefaultsEnforced()>
<android.view.ViewConfiguration: int getDoubleTapSlop()>
<android.widget.CursorAdapter: void <init>(Context,Cursor)>
<android.widget.Toast: View getView()>
<android.widget.CalendarView: int getSelectedWeekBackgroundColor()>
<android.database.CursorWrapper: boolean requery()>
<android.view.View: Bitmap getDrawingCache()>
<android.graphics.RenderNode: boolean setLayerPaint(Paint)>
<android.webkit.WebSettings: void setAppCacheMaxSize(long)>
<android.view.Display: float[] getSupportedRefreshRates()>
<android.nfc.NfcAdapter: void setNdefPushMessageCallback(CreateNdefMessageCallback,Activity,Activity)>
<android.view.translation.TranslationRequest.BaseBuilder: Builder addTranslationRequestValue(TranslationRequestValue)>
<android.os.UserManager: boolean canSwitchUsers()>
<android.speech.tts.UtteranceProgressListener: void onUtteranceRangeStart(String,int,int)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void setOccluded(boolean,boolean)>
<android.renderscript.RenderScriptGL.SurfaceConfig: void setSamples(int,int,float)>
<android.view.Display: void getMetrics(DisplayMetrics)>
<android.hardware.fingerprint.FingerprintManager: void authenticate(CryptoObject,CancellationSignal,int,AuthenticationCallback,Handler)>
<android.view.translation.ViewTranslationRequest: void __metadata()>
<android.location.LocationManager: boolean addGpsStatusListener(Listener)>
<android.telephony.TelephonyManager: int[] supplyPinReportResult(String)>
<android.view.View: int getWindowSystemUiVisibility()>
<android.telephony.TelephonyManager: void setPolicyDataEnabled(boolean)>
<android.content.Intent: Object getExtra(String)>
<android.widget.RemoteViews: boolean onLoadClass(Class)>
<android.hardware.SensorManager: int getSensors()>
<android.util.proto.ProtoOutputStream: void writePackedInt32(long,int[])>
<android.renderscript.ProgramFragment.Builder: ProgramFragment create()>
<android.telephony.PhoneNumberUtils: void formatJapaneseNumber(Editable)>
<android.graphics.drawable.BitmapDrawable: void <init>(String)>
<com.android.codegentest.SampleDataClass: void __metadata()>
<android.hardware.location.ContextHubManager: int[] getContextHubHandles()>
<android.app.admin.DevicePolicyManager: void setCertInstallerPackage(ComponentName,String)>
<android.content.Context: File[] getExternalMediaDirs()>
<android.content.pm.PackageInstaller: void addSessionCallback(SessionCallback,Handler)>
<android.util.RecurrenceRule: RecurrenceRule buildNever()>
<android.graphics.drawable.Drawable: void setDither(boolean)>
<android.net.NetworkStack: void checkNetworkStackPermissionOr(Context,String)>
<android.app.Notification.Builder: Builder setDefaults(int)>
<android.util.proto.ProtoOutputStream: void writeFixed32(long,int)>
<android.webkit.WebView: void freeMemory()>
<android.telephony.TelephonyManager: CellLocation getCellLocation()>
<android.content.pm.PackageManager: void removePackageFromPreferred(String)>
<android.telephony.TelephonyManager: byte[] iccExchangeSimIO(int,int,int,int,int,String)>
<android.renderscript.RenderScriptGL: void resume()>
<android.util.proto.ProtoOutputStream: void writeFloat(long,float)>
<android.telephony.TelephonyManager: List<CarrierIdentifier> getAllowedCarriers(int)>
<android.test.InstrumentationTestCase: void injectInsrumentation(Instrumentation)>
<android.media.ThumbnailUtils: Bitmap transform(Matrix,Bitmap,int,int,int)>
<android.hardware.radio.RadioTuner: int tune(int,int)>
<android.media.AudioTrack: int setStereoVolume(float,float)>
<android.graphics.Canvas: boolean clipRect(RectF,Op)>
<android.view.textservice.SpellCheckerSubtype: String getLocale()>
<android.app.AppOpsManager.OpEntry: String getProxyPackageName(int,int)>
<android.view.translation.Translator: void translate(TranslationRequest,Executor,Consumer<TranslationResponse>)>
<android.util.RecurrenceRule: RecurrenceRule buildRecurringMonthly(int,ZoneId)>
<android.text.DynamicLayout: void <init>(CharSequence,CharSequence,TextPaint,int,Alignment,float,float,boolean,TruncateAt,int)>
<android.hardware.radio.RadioManager.ProgramInfo: int getChannel()>
<com.android.ims.internal.uce.common.CapInfo: void setGeoPullFtSupported(boolean)>
<com.android.server.pm.verify.domain.models.DomainVerificationInternalUserState: void __metadata()>
<android.media.ThumbnailUtils: ParcelFileDescriptor makeInputStream(Uri,ContentResolver)>
<android.media.ThumbnailUtils: int computeInitialSampleSize(Options,int,int)>
<android.webkit.WebView: void refreshPlugins(boolean)>
<android.util.jar.StrictJarFile: Certificate[] getCertificates(ZipEntry)>
<android.telephony.data.DataCallResponse: int getMtu()>
<android.provider.Contacts.Organizations: CharSequence getDisplayLabel(Context,int,CharSequence)>
<android.content.Context: Drawable getWallpaper()>
<android.webkit.WebView: boolean canZoomIn()>
<android.widget.PopupWindow: void setLayoutInScreenEnabled(boolean)>
<android.view.ViewConfiguration: long getGlobalActionKeyTimeout()>
<android.webkit.WebView: boolean canZoomOut()>
<android.location.GnssMeasurement: void resetCarrierCycles()>
<android.webkit.WebSettings: void setLightTouchEnabled(boolean)>
<android.app.AppOpsManager: int noteOp(int)>
<android.hardware.hdmi.HdmiControlManager: boolean isRemoteDeviceConnected(HdmiDeviceInfo)>
<android.app.DownloadManager.Request: void allowScanningByMediaScanner()>
<android.app.AppOpsManager.OpEntry: int getProxyUid(int,int)>
<android.content.pm.ApkChecksum: void __metadata()>
<android.database.CursorWindow: boolean isString(int,int)>
<android.widget.CalendarView: void setShownWeekCount(int)>
<android.os.PowerManager: void userActivity(long,boolean)>
<android.view.WindowInsets: Insets getSystemGestureInsets()>
<android.app.Activity: void onPrepareDialog(int,Dialog,Bundle)>
<android.content.om.OverlayIdentifier: void __metadata()>
<android.os.PowerWhitelistManager: String reasonCodeToString(int)>
<android.app.Notification.Builder: Builder setSound(Uri,int)>
<android.content.ContentProviderClient: void releaseQuietly(ContentProviderClient)>
<android.telephony.SignalStrength: int getEvdoDbm()>
<android.content.pm.PackageInstaller: SessionInfo getActiveStagedSession()>
<android.renderscript.ProgramRaster: CullMode getCullMode()>
<android.bluetooth.BluetoothHealthCallback: void onHealthAppConfigurationStatusChange(BluetoothHealthAppConfiguration,int)>
<android.preference.PreferenceActivity: Preference findPreference(CharSequence)>
<android.app.Fragment: void performMultiWindowModeChanged(boolean)>
<android.app.Notification.Action: void <init>(int,CharSequence,PendingIntent)>
<android.os.Debug: int getGlobalFreedCount()>
<android.content.Context: void setWallpaper(Bitmap)>
<com.android.server.pm.PackageManagerService: boolean updateIntentVerificationStatus(String,int,int)>
<android.os.PowerManager: void wakeUp(long,String)>
<android.app.prediction.AppTarget.Builder: Builder setTarget(ShortcutInfo)>
<android.service.autofill.InlinePresentation: void __metadata()>
<android.widget.CalendarView: void setSelectedDateVerticalBar(int)>
<android.renderscript.RenderScriptGL.SurfaceConfig: void <init>()>
<android.app.usage.StorageStatsManager: StorageStats queryStatsForPackage(String,String,UserHandle)>
<android.net.Proxy: int getPort(Context)>
<android.app.Notification.BigPictureStyle: void <init>(Builder)>
<android.hardware.radio.RadioTuner: int getProgramInformation(ProgramInfo[])>
<android.graphics.Canvas: int saveLayer(RectF,Paint,int)>
<android.webkit.CookieManager: void removeSessionCookie()>
<android.security.keystore.recovery.WrappedApplicationKey: void <init>(String,byte[])>
<android.view.View: void dispatchWindowSystemUiVisiblityChanged(int)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void connect(boolean)>
<android.view.ViewGroup: boolean isChildrenDrawnWithCacheEnabled()>
<android.view.translation.UiTranslationSpec: void __metadata()>
<android.telephony.SignalStrength: int getWcdmaLevel()>
<android.widget.SimpleCursorAdapter: void <init>(Context,int,Cursor,String[],int[])>
<android.widget.FrameLayout: boolean getConsiderGoneChildrenWhenMeasuring()>
<android.app.Notification.WearableExtender: int getCustomSizePreset()>
<android.widget.CalendarView: int getWeekSeparatorLineColor()>
<android.view.Window: void setTitleColor(int)>
<android.util.IndentingPrintWriter: IndentingPrintWriter setIndent(int)>
<android.test.TouchUtils: int dragViewBy(InstrumentationTestCase,View,int,int,int)>
<android.widget.DatePicker: void setSpinnersShown(boolean)>
<com.android.internal.app.SimpleIconFactory: Bitmap createAppBadgedIconBitmap(Drawable,Bitmap)>
<android.webkit.UrlInterceptRegistry: CacheResult getSurrogate(String,Map<String, String>)>
<android.app.ActivityManager: void clearGrantedUriPermissions(String)>
<android.view.View: void invalidate(int,int,int,int)>
<android.content.res.Resources: ColorStateList getColorStateList(int)>
<android.app.AppOpsManager: void setNotedAppOpsCollector(AppOpsCollector)>
<android.app.Activity: void startIntentSenderFromChild(Activity,IntentSender,int,Intent,int,int,int,Bundle)>
<android.provider.Settings.System: boolean getShowGTalkServiceStatus(ContentResolver)>
<android.graphics.drawable.Drawable: int getOpacity()>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLetters(ComponentName)>
<android.app.ContextImpl: int getWallpaperDesiredMinimumHeight()>
<android.telephony.PhoneNumberUtils: String formatNumber(String,int)>
<android.telephony.SignalStrength: int getCdmaDbm()>
<android.view.Surface: void unlockCanvas(Canvas)>
<com.android.server.pm.PackageManagerService: int getIntentVerificationStatus(String,int)>
<android.app.backup.BackupManager: int requestRestore(RestoreObserver)>
<android.opengl.EGL14: EGLSurface eglCreatePixmapSurface(EGLDisplay,EGLConfig,int,int[],int)>
<android.hardware.usb.UsbRequest: boolean queue(ByteBuffer,int)>
<android.webkit.WebChromeClient: void onReachedMaxAppCacheSize(long,long,QuotaUpdater)>
<com.android.ims.internal.uce.common.CapInfo: boolean isGeoSmsSupported()>
<android.accounts.AccountManager: AccountManagerFuture<Boolean> removeAccountAsUser(Account,AccountManagerCallback<Boolean>,Handler,UserHandle)>
<android.view.WindowInsets: int getSystemWindowInsetLeft()>
<android.app.ActionBar: Tab getTabAt(int)>
<android.view.GestureDetector: void <init>(OnGestureListener)>
<com.android.server.notification.NotificationRecord: int getUserId()>
<android.view.textservice.SpellCheckerSubtype: void <init>(int,String,String)>
<android.app.Notification.Builder: Builder setVibrate(long[])>
<android.app.ActivityManagerNative: void noteWakeupAlarm(PendingIntent,int,String,String)>
<android.app.Notification.BubbleMetadata.Builder: Builder createIntentBubble(PendingIntent,Icon)>
<android.telephony.data.DataCallResponse: int getSuggestedRetryTime()>
<android.location.LocationManager: void requestLocationUpdates(long,float,Criteria,Executor,LocationListener)>
<android.telephony.TelephonyManager: List<NeighboringCellInfo> getNeighboringCellInfo()>
<android.net.http.SslCertificate: void <init>(String,String,Date,Date)>
<android.hardware.fingerprint.FingerprintManager: boolean isHardwareDetected()>
<android.os.Debug: void resetGlobalExternalFreedCount()>
<android.webkit.WebView: void savePassword(String,String,String)>
<android.graphics.Canvas: int saveLayer(float,float,float,float,Paint,int)>
<android.telecom.Connection: void onAudioStateChanged(AudioState)>
<android.media.MediaDrm: void release()>
<android.telephony.SignalStrength: void setFromNotifierBundle(Bundle)>
<android.app.Notification.MessagingStyle.Message: CharSequence getSender()>
<android.view.View: void setSystemUiVisibility(int)>
<android.telephony.data.ApnSetting.Builder: Builder setProxyAddress(InetAddress)>
<android.renderscript.Mesh.Builder: Builder addVertexType(Element,int)>
<android.bluetooth.BluetoothAdapter: BluetoothActivityEnergyInfo getControllerActivityEnergyInfo(int)>
<android.os.UserManager: List<UserInfo> getUsers(boolean)>
<android.os.PowerWhitelistManager: void whitelistAppTemporarily(String,long)>
<android.app.ContextImpl: int getWallpaperDesiredMinimumWidth()>
<android.database.sqlite.SQLiteQueryBuilder: String buildQuery(String[],String,String[],String,String,String,String)>
<android.renderscript.Mesh.TriangleMeshBuilder: Mesh create(boolean)>
<android.app.Activity: void enterPictureInPictureMode()>
<android.content.pm.LauncherApps: int getShortcutIconResId(String,String,UserHandle)>
<android.view.inputmethod.InputMethodManager: boolean switchToLastInputMethod(IBinder)>
<android.os.Bundle: void putIBinder(String,IBinder)>
<com.android.ims.internal.uce.common.CapInfo: boolean isSpSupported()>
<android.app.ActivityManagerNative: void noteAlarmFinish(PendingIntent,int,String)>
<android.os.Debug: void resetThreadExternalAllocSize()>
<android.provider.Settings: boolean isCallingPackageAllowedToPerformAppOpsProtectedOperation(Context,int,String,boolean,int,String[],boolean)>
<android.content.Intent: Intent putExtra(String,IBinder)>
<com.android.server.net.IpConfigStore: void writeIpAndProxyConfigurationsToFile(String,SparseArray<IpConfiguration>)>
<android.location.LocationManager: int getGnssBatchSize()>
<android.provider.ContactsContract.CommonDataKinds.Phone: CharSequence getDisplayLabel(Context,int,CharSequence,CharSequence[])>
<android.hardware.location.ContextHubManager: int loadNanoApp(int,NanoApp)>
<android.text.style.ImageSpan: void <init>(Bitmap,int)>
<android.app.Notification.Builder: Notification getNotification()>
<android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(int,String)>
<com.android.settingslib.NetworkPolicyEditor: int getPolicyCycleDay(NetworkTemplate)>
<android.location.LocationManager: void requestSingleUpdate(Criteria,LocationListener,Looper)>
<android.drm.DrmStore.RightsStatus: void <init>()>
<android.renderscript.RSTextureView: void onSurfaceTextureSizeChanged(SurfaceTexture,int,int)>
<android.graphics.ImageDecoder: void setConserveMemory(boolean)>
<android.database.sqlite.SQLiteDatabase: Map<String, String> getSyncedTables()>
<android.location.GnssCapabilities: boolean hasSatelliteBlacklist()>
<android.os.UserManager: UserInfo createProfileForUser(String,int,int)>
<com.android.server.backup.UserBackupManagerService: String selectBackupTransport(String)>
<android.content.pm.ShortcutInfo.Builder: Builder setDisabledMessageResId(int)>
<android.content.pm.parsing.ApkLite: void __metadata()>
<android.view.ViewConfiguration: float getAmbiguousGestureMultiplier()>
<android.app.admin.DevicePolicyManager: void setOrganizationColor(ComponentName,int)>
<android.renderscript.RSTextureView: RenderScriptGL createRenderScriptGL(SurfaceConfig)>
<com.android.server.pm.PackageManagerService: void verifyIntentFilter(int,int,List<String>)>
<android.media.AudioRecord: int native_setup(Object,Object,int[],int,int,int,int,int[],String,long)>
<android.app.DownloadManager.Request: Request setVisibleInDownloadsUi(boolean)>
<android.renderscript.RSSurfaceView: void <init>(Context,AttributeSet)>
<android.telephony.PhoneStateListener: void onRegistrationFailed(CellIdentity,String,int,int,int)>
<android.telephony.SignalStrength: int getAsuLevel()>
<android.telephony.data.ApnSetting.Builder: Builder setMmsProxyAddress(InetAddress)>
<com.android.ims.ImsConfig: int setProvisionedValue(int,int)>
<android.app.ContextImpl: void removeStickyBroadcast(Intent)>
<android.renderscript.FileA3D: int getIndexEntryCount()>
<android.telephony.TelephonyManager: boolean iccCloseLogicalChannel(int)>
<android.content.pm.LauncherApps.Callback: void onPackagesSuspended(String[],UserHandle,Bundle)>
<android.webkit.WebView: void onChildViewRemoved(View,View)>
<android.provider.UserDictionary.Words: void addWord(Context,String,int,int)>
<android.hardware.radio.RadioTuner: boolean isAnalogForced()>
<android.provider.Contacts.People: Bitmap loadContactPhoto(Context,Uri,int,Options)>
<android.location.LocationRequest: int getNumUpdates()>
<android.telephony.PhoneNumberUtils: boolean isLocalEmergencyNumber(Context,String)>
<com.android.server.backup.TransportManager: String selectTransport(String)>
<android.webkit.WebSettings: void setUseWebViewBackgroundForOverscrollBackground(boolean)>
<android.provider.ContactsContract.StreamItems: void <init>()>
<android.app.backup.RestoreSession: int restoreSome(long,RestoreObserver,BackupManagerMonitor,String[])>
<android.webkit.WebView: Picture capturePicture()>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumNumeric(ComponentName,int)>
<android.app.ActivityManager: List<RecentTaskInfo> getRecentTasks(int,int)>
<android.renderscript.RSSurfaceView: void surfaceDestroyed(SurfaceHolder)>
<android.media.RingtoneManager: void setIncludeDrm(boolean)>
<com.android.internal.security.VerityUtils.SetupResult: SetupResult ok(FileDescriptor,int)>
<android.telephony.TelephonyManager: void silenceRinger()>
<android.os.storage.StorageManager: File maybeTranslateEmulatedPathToInternal(File)>
<android.view.View: void requestFitSystemWindows()>
<com.android.server.pm.permission.UidPermissionState: boolean hasPermissionState(String)>
<android.hardware.SensorManager: boolean registerListener(SensorListener,int,int)>
<android.telephony.TelephonyManager: void setCarrierDataEnabled(boolean)>
<android.os.Vibrator: void vibrate(long,AudioAttributes)>
<android.nfc.NfcAdapter: void setBeamPushUris(Uri[],Activity)>
<android.content.pm.ShortcutInfo: CharSequence getTitle()>
<android.view.KeyEvent: boolean dispatch(Callback)>
<android.hardware.SensorDirectChannel: boolean isValid()>
<android.util.NtpTrustedTime: long currentTimeMillis()>
<android.media.AudioManager: void unregisterRemoteController(RemoteController)>
<android.renderscript.Mesh.Builder: int getCurrentVertexTypeIndex()>
<android.renderscript.RenderScriptGL: void setSurface(SurfaceHolder,int,int)>
<android.content.pm.ShortcutInfo: int getTitleResId()>
<android.telecom.RemoteConnection: void setAudioState(AudioState)>
<android.location.LocationManager: boolean setProviderEnabledForUser(String,boolean,UserHandle)>
<android.app.KeyguardManager: Intent createConfirmDeviceCredentialIntent(CharSequence,CharSequence)>
<android.view.inputmethod.InputMethodManager: void toggleSoftInputFromWindow(IBinder,int,int)>
<android.app.prediction.AppTarget: void <init>(AppTargetId,String,String,UserHandle)>
<android.renderscript.ProgramVertexFixedFunction.InternalBuilder: void <init>(RenderScript)>
<com.android.internal.widget.PagerAdapter: void finishUpdate(View)>
<android.util.proto.ProtoOutputStream: void writeSInt64(long,long)>
<android.text.DynamicLayout: void <init>(CharSequence,CharSequence,TextPaint,int,Alignment,float,float,boolean)>
<android.app.Notification: long getTimeout()>
<android.app.AppOpsManager.OpEntry: String getProxyPackageName()>
<android.text.method.DigitsKeyListener: DigitsKeyListener getInstance(boolean,boolean)>
<com.android.ims.internal.uce.common.CapInfo: void setPostCallSupported(boolean)>
<android.telecom.StatusHints: int getIconResId()>
<android.view.View: void setDrawingCacheEnabled(boolean)>
<android.app.Activity: void onStateNotSaved()>
<android.telecom.Conference: void setConnectTimeMillis(long)>
<android.animation.LayoutTransition: void showChild(ViewGroup,View)>
<android.service.autofill.SavedDatasetsInfo: void __metadata()>
<android.service.carrier.CarrierMessagingService: void onFilterSms(MessagePdu,String,int,int,ResultCallback<Boolean>)>
<android.location.LocationRequest: boolean isLowPowerMode()>
<android.app.admin.DevicePolicyManager: void setPasswordQuality(ComponentName,int)>
<com.android.internal.content.PackageHelper: long calculateInstalledSize(PackageLite,boolean,Handle,String)>
<android.app.DownloadManager: long addCompletedDownload(String,String,boolean,String,String,long,boolean,boolean,Uri,Uri)>
<android.view.ViewConfiguration: int getEdgeSlop()>
<android.view.WindowInsets.Builder: Builder setSystemGestureInsets(Insets)>
<android.nfc.NfcAdapter: void enableForegroundNdefPush(Activity,NdefMessage)>
<android.view.ViewGroup: ViewParent invalidateChildInParent(int[],Rect)>
<android.content.pm.PermissionInfo: void <init>(PermissionInfo)>
<android.view.WindowInsets: Insets getTappableElementInsets()>
<com.android.ims.internal.uce.common.CapInfo: void setRcsIpVideoOnlyCallSupported(boolean)>
<android.view.inputmethod.InlineSuggestion: void __metadata()>
<android.os.Debug: void resetThreadAllocCount()>
<android.view.inputmethod.InputMethodManager: void viewClicked(View)>
<android.telephony.PhoneStateListener: void onMessageWaitingIndicatorChanged(boolean)>
<android.webkit.WebChromeClient: boolean onJsTimeout()>
<android.webkit.WebView: boolean savePicture(Bundle,File)>
<android.widget.ResourceCursorAdapter: void <init>(Context,int,Cursor)>
<android.provider.Contacts.People: long tryGetMyContactsGroupId(ContentResolver)>
<android.os.BatterySaverPolicyConfig: boolean getDisableSoundTrigger()>
<com.android.ims.internal.uce.common.CapInfo: boolean isFtSupported()>
<com.android.server.pm.permission.UidPermissionState: boolean hasPermissionState(ArraySet<String>)>
<android.view.translation.TranslationManager: void addOnDeviceTranslationCapabilityUpdateListener(int,int,PendingIntent)>
<android.telephony.TelephonyManager: long getPreferredNetworkTypeBitmask()>
<android.webkit.WebView: float getScale()>
<android.location.LocationManager: boolean registerGnssMeasurementsCallback(GnssRequest,Executor,Callback)>
<android.speech.tts.TextToSpeech: int setEngineByPackageName(String)>
<android.app.Activity: boolean requestVisibleBehind(boolean)>
<android.renderscript.RenderScriptGL: void bindProgramVertex(ProgramVertex)>
<android.net.TrafficStats: long getUidUdpTxPackets(int)>
<android.service.notification.ConditionProviderService: void notifyConditions(Condition)>
<android.app.Activity: Dialog onCreateDialog(int,Bundle)>
<android.content.Context: int getWallpaperDesiredMinimumHeight()>
<android.media.tv.TvInputInfo: TvInputInfo createTvInputInfo(Context,ResolveInfo,TvInputHardwareInfo,int,Icon)>
<android.content.pm.ShortcutInfo: boolean isManifestShortcut()>
<android.util.NtpTrustedTime: long getCacheAge()>
<android.content.Context: void sendStickyBroadcastAsUser(Intent,UserHandle)>
<android.telephony.TelephonyManager: boolean getDataEnabled(int)>
<android.location.LocationManager: boolean addNmeaListener(NmeaListener)>
<android.content.pm.ProcessInfo: void __metadata()>
<android.widget.CalendarView: void setFocusedMonthDateColor(int)>
<android.telephony.PhoneStateListener: void onImsCallDisconnectCauseChanged(ImsReasonInfo)>
<android.view.KeyEvent: void <init>(KeyEvent,long,int)>
<android.net.NetworkStack: void checkNetworkStackPermission(Context)>
<android.view.animation.Animation: void setDetachWallpaper(boolean)>
<android.media.MediaScanner.MyMediaScannerClient: void setMimeType(String)>
<android.app.TaskStackListener: void onTaskDescriptionChanged(int,TaskDescription)>
<android.text.TextUtils: CharSequence commaEllipsize(CharSequence,TextPaint,float,String,String,TextDirectionHeuristic)>
<com.android.codegentest.StaleDataclassDetectorFalsePositivesTest: void __metadata()>
<android.app.TaskStackListener: void onTaskMovedToFront(int)>
<android.content.res.Resources: Movie getMovie(int)>
<android.telephony.ims.stub.DelegateConnectionStateCallback: void onImsConfigurationChanged(SipDelegateImsConfiguration)>
<android.webkit.WebViewClient: void onReceivedError(WebView,int,String,String)>
<android.nfc.NfcAdapter: boolean isNdefPushEnabled()>
<android.location.LocationManager: List<String> getProviderPackages(String)>
<android.graphics.RenderNode: boolean setLayerType(int)>
<android.os.FileUtils: void closeQuietly(FileDescriptor)>
<android.security.KeyStoreParameter.Builder: Builder setEncryptionRequired(boolean)>
<android.database.AbstractCursor: boolean isFieldUpdated(int)>
<com.android.internal.widget.LockPatternUtils: int getKeyguardStoredPasswordQuality(int)>
<android.app.admin.DeviceAdminReceiver: void onPasswordChanged(Context,Intent)>
<android.app.ActivityManager: List<RunningTaskInfo> getRunningTasks(int)>
<android.location.Location: void removeBearing()>
<android.companion.AssociationRequest: void __metadata()>
<android.hardware.Camera.Parameters: void setPreviewFrameRate(int)>
<android.security.keystore2.AndroidKeyStoreSignatureSpiBase: Object engineGetParameter(String)>
<android.app.AppOpsManager: int startOpNoThrow(int,int,String)>
<android.bluetooth.BluetoothAdapter: void stopLeScan(LeScanCallback)>
<android.app.Activity: boolean onCreateThumbnail(Bitmap,Canvas)>
<android.app.InstantAppResolverService: void onGetInstantAppIntentFilter(Intent,int[],String,InstantAppResolutionCallback)>
<android.test.TouchUtils: void scrollToBottom(ActivityInstrumentationTestCase,ViewGroup)>
<android.security.KeyStore: boolean unlock(String)>
<android.media.AudioTrack: void <init>(int,int,int,int,int,int,int)>
<android.telecom.Call: void removeListener(Listener)>
<android.view.View: int getDrawingCacheBackgroundColor()>
<android.app.FragmentManagerImpl: void dispatchPictureInPictureModeChanged(boolean)>
<android.renderscript.RenderScriptGL.SurfaceConfig: void setDepth(int,int)>
<android.telephony.TelephonyManager: void enableVideoCalling(boolean)>
<android.graphics.BaseCanvas: void drawBitmap(int[],int,int,float,float,int,int,boolean,Paint)>
<com.android.server.pm.PackageManagerService: void querySyncProviders(List<String>,List<ProviderInfo>)>
<android.media.RingtoneManager: boolean getIncludeDrm()>
<android.inputmethodservice.InputMethodService: void onViewClicked(boolean)>
<android.graphics.drawable.NinePatchDrawable: void <init>(NinePatch)>
<android.view.View: boolean startDrag(ClipData,DragShadowBuilder,Object,int)>
<android.media.ThumbnailUtils: Bitmap createAudioThumbnail(String,int)>
<android.view.ViewDebug: void stopHierarchyTracing()>
<android.net.NetworkTemplate: NetworkTemplate buildTemplateWifi()>
<com.android.ims.internal.uce.common.CapInfo: boolean isGeoPullSupported()>
<android.app.Notification.WearableExtender: WearableExtender setHintHideIcon(boolean)>
<android.util.proto.ProtoOutputStream: void writePackedFixed32(long,int[])>
<android.database.sqlite.SQLiteOpenHelper: void setIdleConnectionTimeout(long)>
<android.nfc.NfcAdapter: void disableForegroundNdefPush(Activity)>
<android.webkit.PluginList: void removePlugin(Plugin)>
<android.view.ViewDebug: AutoCloseable startRenderingCommandsCapture(View,Executor,Function<Picture, Boolean>)>
<android.view.WindowInsets.Builder: Builder setSystemWindowInsets(Insets)>
<android.webkit.PluginData: long getContentLength()>
<com.android.server.connectivity.Vpn: void interfaceStatusChanged(String,boolean)>
<android.app.Activity: Cursor managedQuery(Uri,String[],String,String)>
<android.telephony.PhoneNumberUtils: boolean compare(Context,String,String)>
<android.service.autofill.AutofillFieldClassificationService: float[][] onGetScores(String,Bundle,List<AutofillValue>,List<String>)>
<android.app.Notification: void <init>(int,CharSequence,long)>
<android.hardware.camera2.CameraDevice: void createReprocessableCaptureSession(InputConfiguration,List<Surface>,StateCallback,Handler)>
<android.service.translation.TranslationService: void onTranslationRequest(TranslationRequest,int,CancellationSignal,OnTranslationResultCallback)>
<android.view.ViewParent: ViewParent invalidateChildInParent(int[],Rect)>
<android.view.ViewGroup: void setAlwaysDrawnWithCacheEnabled(boolean)>
<android.view.inputmethod.InlineSuggestionsRequest: void __metadata()>
<android.bluetooth.le.ScanResult: void <init>(BluetoothDevice,ScanRecord,int,long)>
<android.telephony.NeighboringCellInfo: void setCid(int)>
<android.location.LocationRequest: long getInterval()>
<android.location.LocationRequest: LocationRequest setQuality(int)>
<android.webkit.WebView: void enablePlatformNotifications()>
<android.hardware.Camera.Parameters: int getPreviewFrameRate()>
<android.media.AudioManager: int abandonAudioFocus(OnAudioFocusChangeListener,AudioAttributes)>
<android.app.admin.DevicePolicyManager: boolean getStorageEncryption(ComponentName)>
<com.android.ims.internal.uce.common.CapInfo: void setChatbotSupported(boolean)>
<android.telephony.UiccSlotInfo: void <init>(boolean,boolean,String,int,int,boolean)>
<android.renderscript.Font: Font createFromAsset(RenderScript,Resources,String,float)>
<android.webkit.CookieManager: void removeExpiredCookie()>
<com.android.internal.content.PackageHelper: String resolveInstallVolume(Context,String,int,long,TestableInterface)>
<android.os.Debug: int getThreadExternalAllocCount()>
<android.hardware.radio.RadioManager.ProgramInfo: boolean isDigital()>
<android.telephony.data.DataCallResponse.Builder: Builder setMtu(int)>
<android.telephony.SignalStrength: int getTdScdmaLevel()>
<android.net.NetworkStatsHistory: void recordData(long,long,long,long)>
<com.android.ims.internal.uce.common.CapInfo: boolean isIpVideoSupported()>
<android.webkit.WebView: boolean shouldDelayChildPressedState()>
<android.location.LocationManager: void requestLocationUpdates(LocationRequest,Executor,LocationListener)>
<android.test.mock.MockCursor: void deactivate()>
<android.app.Notification.WearableExtender: boolean getHintShowBackgroundOnly()>
<android.util.proto.ProtoOutputStream: void writeRepeatedSFixed32(long,int)>
<android.os.UserManager: void setUserRestrictions(Bundle)>
<android.webkit.WebSettings: boolean getPluginsEnabled()>
<android.util.proto.ProtoOutputStream: void writePackedDouble(long,double[])>
<android.app.AppOpsManager.OpEntry: long getDuration()>
<android.provider.Contacts.People: Uri addToGroup(ContentResolver,long,String)>
<android.location.GnssMeasurement: void setCarrierPhaseUncertainty(double)>
<android.webkit.WebSettings: void setAppCachePath(String)>
<android.renderscript.RenderScriptGL.SurfaceConfig: void <init>(SurfaceConfig)>
<android.view.inputmethod.InputMethodManager: void toggleSoftInput(int,int)>
<com.android.ims.internal.uce.common.CapInfo: boolean isFtHttpSupported()>
<android.view.ViewGroup: boolean isAnimationCacheEnabled()>
<android.content.ContextWrapper: void sendStickyBroadcastAsUser(Intent,UserHandle,Bundle)>
<android.app.Activity: LoaderManager getLoaderManager()>
<android.renderscript.Mesh.Builder: Builder addIndexSetType(Element,int,Primitive)>
<android.provider.Settings.System: boolean getShowGTalkServiceStatusForUser(ContentResolver,int)>
<android.service.notification.NotificationListenerService: void cancelNotification(String,String,int)>
<android.telephony.TelephonyManager: void setCarrierTestOverride(String,String,String,String,String,String,String)>
<android.webkit.WebSettings: PluginState getPluginState()>
<android.provider.Contacts.People: Cursor queryGroups(ContentResolver,long)>
<android.telephony.SignalStrength: int getTdScdmaDbm()>
<android.service.autofill.FillContext: void __metadata()>
<android.text.Html: Spanned fromHtml(String,ImageGetter,TagHandler)>
<android.app.slice.Slice.Builder: Builder addTimestamp(long,String,List<String>)>
<android.telephony.SignalStrength: int getLteDbm()>
<android.content.ContextWrapper: void sendStickyOrderedBroadcastAsUser(Intent,UserHandle,BroadcastReceiver,Handler,int,String,Bundle)>
<android.webkit.UrlInterceptRegistry: boolean unregisterHandler(UrlInterceptHandler)>
<android.content.pm.parsing.ParsingPackageRead: boolean isGame()>
<android.view.ActionProvider: View onCreateActionView()>
<android.graphics.BaseCanvas: void drawPosText(char[],int,int,float[],Paint)>
<android.telephony.CellIdentityLte: int getMnc()>
<com.android.ims.internal.uce.common.CapInfo: void setFtSnFSupported(boolean)>
<android.telephony.PhoneNumberUtils: String formatNumber(String)>
<android.view.textclassifier.TextClassification: Drawable getIcon()>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumLetters(ComponentName,int)>
<android.media.ThumbnailUtils: void createThumbnailFromEXIF(String,int,int,SizedThumbnailBitmap)>
<android.webkit.Plugin.PreferencesClickHandler: void handleClickEvent(Context)>
<android.media.tv.TvInputInfo: TvInputInfo createTvInputInfo(Context,ResolveInfo,TvInputHardwareInfo,String,Uri)>
<android.os.Debug: int getThreadGcInvocationCount()>
<android.app.ContextImpl: void sendStickyOrderedBroadcastAsUser(Intent,UserHandle,BroadcastReceiver,Handler,int,String,Bundle)>
<android.location.LocationManager: void requestLocationUpdates(long,float,Criteria,LocationListener,Looper)>
<android.app.Activity: void setSecondaryProgress(int)>
<android.service.voice.VoiceInteractionSession.AbortVoiceRequest: CharSequence getMessage()>
<android.app.SearchManager: void onCancel(DialogInterface)>
<android.renderscript.Mesh.AllocationBuilder: Mesh create()>
<android.util.proto.ProtoOutputStream: void writeRepeatedString(long,String)>
<android.location.GnssMeasurement: double getCarrierPhaseUncertainty()>
<com.android.server.am.ActivityManagerService: String getProviderMimeType(Uri,int)>
<android.app.Notification.WearableExtender: boolean getHintHideIcon()>
<android.view.inputmethod.InputMethodSubtype: String getLocale()>
<android.view.View: void setDrawingCacheQuality(int)>
<android.os.UserManager: UserInfo createUser(String,int)>
<android.view.WindowInsets: int getSystemWindowInsetTop()>
<android.telephony.PreciseDataConnectionState: String getDataConnectionApn()>
<android.telephony.euicc.DownloadableSubscription: void setCarrierName(String)>
<android.test.TouchUtils: void dragViewToTop(ActivityInstrumentationTestCase,View)>
<android.location.LocationManager: GpsStatus getGpsStatus(GpsStatus)>
<com.android.codegentest.SampleDataClass: void forEachField(PerObjectFieldAction<SampleDataClass>)>
<android.hardware.camera2.CameraDevice: void createCaptureSession(List<Surface>,StateCallback,Handler)>
<android.widget.CalendarView: boolean getShowWeekNumber()>
<android.hardware.radio.RadioTuner: int setConfiguration(BandConfig)>
<android.app.Notification.WearableExtender: WearableExtender setDisplayIntent(PendingIntent)>
<android.app.ContextImpl: void sendStickyBroadcastAsUser(Intent,UserHandle)>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumUpperCase(ComponentName)>
<android.os.FileUtils: void copyToFileOrThrow(InputStream,File)>
<android.net.http.SslError: void <init>(int,SslCertificate)>
<android.view.Display: int getWidth()>
<android.transition.ChangeBounds: void setReparent(boolean)>
<android.app.Notification.WearableExtender: WearableExtender setContentIconGravity(int)>
<android.app.AppOpsManager: int checkOp(String,int,String)>
<android.location.LocationManager: void clearTestProviderLocation(String)>
<android.app.Activity: boolean navigateUpToFromChild(Activity,Intent)>
<android.provider.Contacts.ContactMethods: void addPostalLocation(Context,long,double,double)>
<android.view.View: boolean fitSystemWindows(Rect)>
<android.database.sqlite.SQLiteQueryBuilder: String buildUnionSubQuery(String,String[],Set<String>,int,String,String,String[],String,String)>
<android.window.TransitionRequestInfo: void __metadata()>
<android.test.TouchUtils: void scrollToTop(ActivityInstrumentationTestCase,ViewGroup)>
<android.media.AudioManager: void setStreamMute(int,boolean)>
<android.provider.Settings.Secure: boolean isLocationProviderEnabled(ContentResolver,String)>
<android.os.PowerWhitelistManager: void whitelistAppTemporarily(String,long,int,String)>
<android.util.TrustedTime: boolean hasCache()>
<android.renderscript.RSSurfaceView: void surfaceChanged(SurfaceHolder,int,int,int)>
<android.app.ActivityManager: ParceledListSlice<GrantedUriPermission> getGrantedUriPermissions(String)>
<android.renderscript.Mesh.TriangleMeshBuilder: TriangleMeshBuilder addVertex(float,float)>
<android.app.AppOpsManager: int startOp(int,int,String,boolean)>
<android.app.Activity: void onBackgroundVisibleBehindChanged(boolean)>
<android.hardware.radio.RadioTuner: int getConfiguration(BandConfig[])>
<android.renderscript.RSTextureView: void onSurfaceTextureUpdated(SurfaceTexture)>
<android.os.Debug: int getGlobalExternalFreedSize()>
<android.view.ViewConfiguration: int getScrollBarSize()>
<android.telephony.TelephonyManager: IccOpenLogicalChannelResponse iccOpenLogicalChannel(String,int)>
<android.app.Notification.WearableExtender: WearableExtender setCustomContentHeight(int)>
<android.view.WindowInsets: int getStableInsetRight()>
<android.database.sqlite.SQLiteDatabase: void setLockingEnabled(boolean)>
<android.graphics.ImageDecoder: ImageDecoder setResize(int,int)>
<android.os.Environment: File getExternalStorageDirectory()>
<android.content.pm.PackageParser.Package: void setApplicationInfoBaseResourcePath(String)>
<android.os.storage.StorageManager: String[] getVolumePaths()>
<android.app.ContextImpl: void sendStickyBroadcast(Intent,Bundle)>
<android.text.method.DateKeyListener: DateKeyListener getInstance()>
<android.graphics.Canvas: int saveLayerAlpha(RectF,int,int)>
<android.media.MediaScanner.MyMediaScannerClient: Uri doScanFile(String,String,long,long,boolean,boolean,boolean)>
<android.telephony.SignalStrength: int getGsmLevel()>
<android.os.storage.StorageManager: StorageManager from(Context)>
<android.service.autofill.ImageTransformation.Builder: Builder addOption(Pattern,int)>
<android.hardware.lights.LightsRequest.Builder: Builder setLight(Light,LightState)>
<android.view.ViewConfiguration: int getTouchSlop()>
<android.os.StatFs: int getFreeBlocks()>
<android.app.AppOpsManager: int checkOpNoThrow(String,int,String)>
<android.telephony.NetworkScan: void stop()>
<android.service.carrier.CarrierMessagingService: void onSendMultipartTextSms(List<String>,int,String,ResultCallback<SendMultipartSmsResult>)>
<android.test.TouchUtils: void dragQuarterScreenDown(ActivityInstrumentationTestCase)>
<android.os.UserManager: void setUserRestriction(String,boolean)>
<android.os.Debug: int getGlobalExternalAllocCount()>
<android.content.pm.PermissionGroupInfo: void <init>(PermissionGroupInfo)>
<android.security.identity.IdentityCredentialStore: byte[] deleteCredentialByName(String)>
<android.webkit.WebSettings: void setGeolocationDatabasePath(String)>
<android.provider.Contacts.Intents.UI: void <init>()>
<android.text.method.DateTimeKeyListener: DateTimeKeyListener getInstance()>
<android.view.translation.TranslationManager: Set<TranslationCapability> getTranslationCapabilities(int,int)>
<android.webkit.WebSettings: void setSaveFormData(boolean)>
<android.util.TrustedTime: long getCacheAge()>
<android.app.search.Query: long getTimestamp()>
<android.telephony.SignalStrength: int getTdScdmaAsuLevel()>
<android.telephony.PhoneStateListener: void onCarrierNetworkChange(boolean)>
<android.webkit.Plugin: void dispatchClickEvent(Context)>
<android.media.ThumbnailUtils: Bitmap createVideoThumbnail(String,int)>
<android.app.ActivityManager: boolean isInLockTaskMode()>
<android.media.MediaFile: MediaFileType getFileType(String)>
<android.view.inputmethod.InputMethodManager: void showSoftInputFromInputMethod(IBinder,int)>
<android.app.admin.DevicePolicyManager: boolean getAutoTimeRequired()>
<android.inputmethodservice.InputMethodService: void onUpdateCursor(Rect)>
<android.app.ActivityManager: int getMaxRecentTasksStatic()>
<android.telephony.SignalStrength: int getGsmAsuLevel()>
<android.app.AutomaticZenRule: void <init>(String,ComponentName,Uri,int,boolean)>
<android.util.proto.ProtoOutputStream: void endObject(long)>
<com.android.ims.internal.uce.common.CapInfo: void setMmtelCallComposerSupported(boolean)>
<android.test.mock.MockContentProvider: void attachInfoForTesting(ContentProvider,Context,ProviderInfo)>
<android.app.Notification.Builder: Builder setTimeout(long)>
<com.android.internal.logging.MetricsLogger: void action(Context,int,boolean)>
<com.android.internal.util.FileRotator: void combineActive(Reader,Writer,long)>
<android.telephony.CellIdentityWcdma: int getMcc()>
<android.telephony.PhoneNumberUtils: boolean compare(String,String)>
<com.android.location.provider.LocationProviderBase: void onDisable()>
<android.util.NtpTrustedTime: long getCachedNtpTime()>
<android.app.DownloadManager: long addCompletedDownload(String,String,boolean,String,String,long,boolean,boolean)>
<android.location.LocationManager: void setTestProviderStatus(String,int,Bundle,long)>
<android.util.proto.ProtoOutputStream: void writePackedSInt64(long,long[])>
<com.android.internal.app.SimpleIconFactory: void recycle()>
<android.location.GnssCapabilities: boolean hasNavMessages()>
<android.util.proto.ProtoOutputStream: void writeDouble(long,double)>
<android.app.prediction.AppTarget.Builder: Builder setTarget(String,UserHandle)>
<android.app.AppOpsManager: void finishOp(int)>
<android.renderscript.FileA3D: IndexEntry getIndexEntry(int)>
<android.location.LocationManager: void requestSingleUpdate(String,LocationListener,Looper)>
<android.webkit.UrlInterceptRegistry: PluginData getPluginData(String,Map<String, String>)>
<android.database.sqlite.SQLiteDatabase: void markTableSyncable(String,String,String)>
<android.telephony.PhoneNumberUtils: boolean isPotentialEmergencyNumber(int,String)>
<android.hardware.location.ContextHubManager: int unloadNanoApp(int)>
<android.view.WindowInsets: int getSystemWindowInsetRight()>
<android.view.translation.TranslationResponse.Builder: Builder setTranslationStatus(int)>
<android.provider.Contacts.Phones: CharSequence getDisplayLabel(Context,int,CharSequence)>
<android.graphics.Typeface: Typeface createFromFamiliesWithDefault(FontFamily[],int,int)>
<android.webkit.WebViewDelegate: boolean canInvokeDrawGlFunctor(View)>
<android.app.Notification.MediaStyle: void <init>(Builder)>
<com.android.internal.content.PackageHelper: int resolveInstallLocation(Context,String,int,long,int)>
<android.service.voice.VoiceInteractionSession.CompleteVoiceRequest: CharSequence getMessage()>
<android.location.LocationRequest: LocationRequest setSmallestDisplacement(float)>
<android.telecom.Call: void addListener(Listener)>
<android.telecom.InCallService: void onAudioStateChanged(AudioState)>
<android.app.Fragment: LoaderManager getLoaderManager()>
<android.content.pm.PackageManager: void getPackageSizeInfo(String,IPackageStatsObserver)>
<android.content.pm.PackageInstaller.SessionInfo: boolean getAllowDowngrade()>
<android.graphics.ImageDecoder: boolean getMutable()>
<android.app.Activity: void setPersistent(boolean)>
<android.content.Context: void sendStickyBroadcastAsUser(Intent,UserHandle,Bundle)>
<android.telephony.TelephonyManager: IccOpenLogicalChannelResponse iccOpenLogicalChannel(String)>
<android.telephony.TelephonyManager: String iccTransmitApduLogicalChannel(int,int,int,int,int,int,String)>
<android.graphics.BaseCanvas: void drawPosText(String,float[],Paint)>
<android.database.Cursor: boolean requery()>
<com.android.internal.widget.RecyclerView.LayoutManager: boolean onRequestChildFocus(RecyclerView,View,View)>
<android.widget.DatePicker: boolean getCalendarViewShown()>
<android.hardware.biometrics.PromptInfo: boolean isDeviceCredentialAllowed()>
<android.view.ViewGroup: void setAnimationCacheEnabled(boolean)>
<android.hardware.SensorManager: void unregisterListener(SensorListener)>
<android.app.search.SearchTarget.Builder: Builder setShouldHide(boolean)>
<android.media.MediaCodecList: int getCodecCount()>
<com.android.internal.security.VerityUtils.SetupResult: SetupResult failed()>
<android.content.pm.verify.domain.DomainSet: void __metadata()>
<android.telephony.SignalStrength: int getCdmaLevel()>
<android.opengl.Matrix: void <init>()>
<android.graphics.Canvas: void drawBitmap(int[],int,int,int,int,int,int,boolean,Paint)>
<android.renderscript.ProgramVertexFixedFunction.Constants: void setProjection(Matrix4f)>
<android.hardware.biometrics.BiometricManager: int canAuthenticate()>
<android.util.NtpTrustedTime: boolean hasCache()>
<android.app.Activity: void setTitleColor(int)>
<android.provider.Contacts.People: Uri addToGroup(ContentResolver,long,long)>
<android.widget.AutoCompleteTextView: OnItemSelectedListener getItemSelectedListener()>
<android.telephony.NeighboringCellInfo: void setRssi(int)>
<android.telephony.PhoneNumberUtils: int getFormatTypeForLocale(Locale)>
<android.provider.Contacts.People.Extensions: void <init>()>
<android.app.Notification.BigTextStyle: void <init>(Builder)>
<android.app.Notification.WearableExtender: int getCustomContentHeight()>
<android.bluetooth.BluetoothHealth: boolean connectChannelToSource(BluetoothDevice,BluetoothHealthAppConfiguration)>
<android.location.LocationManager: void removeNmeaListener(NmeaListener)>
<android.app.Activity: void startIntentSenderFromChild(Activity,IntentSender,int,Intent,int,int,int)>
<android.renderscript.Mesh.TriangleMeshBuilder: TriangleMeshBuilder addTriangle(int,int,int)>
<android.app.UiAutomation: boolean grantRuntimePermission(String,String,UserHandle)>
<android.content.pm.PackageManager: int installExistingPackage(String)>
<android.renderscript.Allocation: void resize(int)>
<android.content.pm.PackageInstaller.Session: void setChecksums(String,List<Checksum>,byte[])>
<android.renderscript.RSSurfaceView: void <init>(Context)>
<android.app.Activity: void startActivityFromFragment(Fragment,Intent,int)>
<android.view.translation.TranslationManager: void removeOnDeviceTranslationCapabilityUpdateListener(int,int,PendingIntent)>
<android.content.Intent: String toURI()>
<android.telephony.SmsManager: SmsManager getDefault()>
<android.app.ActionBar: int getNavigationMode()>
<android.view.MotionEvent: MotionEvent obtain(long,long,int,int,float,float,float,float,int,float,float,int,int)>
<android.webkit.WebViewDelegate: void invokeDrawGlFunctor(View,long,boolean)>
<android.test.AndroidTestRunner: void setInstrumentaiton(Instrumentation)>
<android.content.pm.PackageInstaller.SessionParams: void setAllowDowngrade(boolean)>
<android.app.Activity: void setProgressBarVisibility(boolean)>
<android.telephony.NeighboringCellInfo: void <init>()>
<android.util.proto.ProtoOutputStream: void writePackedUInt32(long,int[])>
<android.view.textclassifier.TextClassifier.EntityConfig: EntityConfig create(Collection<String>,Collection<String>,Collection<String>)>
<android.graphics.drawable.BitmapDrawable: void <init>(InputStream)>
<android.app.Notification.MessagingStyle: MessagingStyle addMessage(CharSequence,long,CharSequence)>
<android.nfc.NdefRecord: byte[] toByteArray()>
<android.util.proto.ProtoOutputStream: void writeRepeatedInt32(long,int)>
<com.android.server.pm.verify.domain.models.DomainVerificationPkgState: void __metadata()>
<android.app.ActionBar: int getTabCount()>
<android.graphics.Canvas: boolean clipRegion(Region)>
<android.database.CursorWindow: boolean isBlob(int,int)>
<android.view.textclassifier.TextClassifier.EntityConfig: EntityConfig createWithHints(Collection<String>)>
<android.provider.ContactsContract.CommonDataKinds.Phone: CharSequence getDisplayLabel(Context,int,CharSequence)>
<android.app.usage.StorageStatsManager: StorageStats queryStatsForUid(String,int)>
<android.media.AudioTrack: int getNativeFrameCount()>
<android.view.ViewDebug: void trace(View,HierarchyTraceType)>
<android.content.Context: void clearWallpaper()>
<android.telephony.PhoneStateListener: void onSignalStrengthsChanged(SignalStrength)>
<com.android.location.provider.LocationProviderBase: boolean isEnabled()>
<android.telephony.SignalStrength: int getEvdoAsuLevel()>
<android.telephony.PreciseDataConnectionState: int getDataConnectionState()>
<com.android.server.pm.parsing.pkg.PkgAppInfo: boolean isGame()>
<android.content.ClipboardManager: void setText(CharSequence)>
<android.net.TrafficStats: long getUidUdpRxPackets(int)>
<android.renderscript.ProgramVertex.Builder: void <init>(RenderScript)>
<android.telephony.TelephonyManager: boolean isRinging()>
<android.permission.PermissionControllerService: void onRestoreDelayedRuntimePermissionsBackup(String,UserHandle,Consumer<Boolean>)>
<android.util.proto.ProtoOutputStream: void writeRepeatedUInt32(long,int)>
<com.android.internal.security.VerityUtils: byte[] generateApkVerityRootHash(String)>
<android.media.DrmInitData: SchemeInitData get(UUID)>
<android.graphics.Paint: Rasterizer setRasterizer(Rasterizer)>
<android.util.proto.ProtoOutputStream: void writeSFixed32(long,int)>
<com.android.location.provider.LocationProviderBase: long onGetStatusUpdateTime()>
<android.hardware.Camera.Parameters: void dump()>
<android.view.translation.UiTranslationStateCallback: void onStarted(String,String)>
<android.hardware.camera2.CameraDevice: void createConstrainedHighSpeedCaptureSession(List<Surface>,StateCallback,Handler)>
<android.app.Notification.BubbleMetadata: Icon getBubbleIcon()>
<android.renderscript.ProgramVertexFixedFunction: void bindConstants(Constants)>
<com.android.settingslib.utils.StringUtil: CharSequence formatRelativeTime(Context,double,boolean)>
<android.app.ActivityManagerNative: void broadcastStickyIntent(Intent,String,int,int)>
<android.telephony.data.DataCallResponse.Builder: Builder setSuggestedRetryTime(int)>
<android.location.LocationRequest: LocationRequest setNumUpdates(int)>
<android.speech.tts.TextToSpeech: int playEarcon(String,int,HashMap<String, String>)>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumSymbols(ComponentName,int)>
<android.accessibilityservice.AccessibilityServiceInfo: boolean getCanRetrieveWindowContent()>
<android.os.PowerWhitelistManager: int getReasonCodeFromProcState(int)>
<android.content.res.AssetManager: int addAssetPathAsSharedLibrary(String)>
<com.android.ims.ImsConfig: int setProvisionedStringValue(int,String)>
<android.webkit.WebSettings: void setDefaultZoom(ZoomDensity)>
<android.telephony.PhoneStateListener: void onOutgoingEmergencyCall(EmergencyNumber)>
<android.app.admin.DevicePolicyManager: boolean resetPassword(String,int)>
<com.android.ims.internal.uce.common.CapInfo: void setSpSupported(boolean)>
<android.app.admin.DevicePolicyManager: boolean isCallerApplicationRestrictionsManagingPackage()>
<android.service.autofill.FillRequest: void __metadata()>
<android.widget.CalendarView: void setShowWeekNumber(boolean)>
<android.renderscript.Mesh.Builder: void <init>(RenderScript,int)>
<android.service.persistentdata.PersistentDataBlockManager: boolean getOemUnlockEnabled()>
<android.os.Environment: File maybeTranslateEmulatedPathToInternal(File)>
<android.renderscript.ProgramVertexFixedFunction.Builder: ProgramVertexFixedFunction create()>
<com.android.ims.internal.uce.common.CapInfo: boolean isSharedSketchSupported()>
<android.os.Debug: void resetGlobalClassInitTime()>
<android.app.admin.DeviceAdminReceiver: void onPasswordExpiring(Context,Intent)>
<android.util.proto.ProtoOutputStream: void writePackedFloat(long,float[])>
<android.hardware.location.ContextHubManager: int unregisterCallback(ICallback)>
<android.content.ContextWrapper: void sendStickyBroadcastAsUser(Intent,UserHandle)>
<android.renderscript.Font: Font createFromFile(RenderScript,Resources,File,float)>
<android.app.Notification.BubbleMetadata: PendingIntent getBubbleIntent()>
<android.webkit.Plugin: void setFileName(String)>
<android.view.translation.TranslationCapability: void __metadata()>
<android.media.MediaFile: boolean isDrmFileType(int)>
<android.app.ActivityManager: boolean isRunningInTestHarness()>
<android.view.VelocityTracker: VelocityTracker obtain(String)>
<android.hardware.location.GeofenceHardwareMonitorCallback: void onMonitoringSystemChange(int,boolean,Location)>
<com.android.ims.internal.uce.common.CapInfo: void setFtHttpSupported(boolean)>
<android.telephony.TelephonyManager: boolean isRadioOn()>
<com.android.systemui.keyguard.KeyguardViewMediator: void startKeyguardExitAnimation(long,long)>
<android.media.MediaFile: int getFileTypeForMimeType(String)>
<android.app.prediction.AppTarget: void <init>(AppTargetId,ShortcutInfo,String)>
<android.os.UserManager: void setUserRestrictions(Bundle,UserHandle)>
<android.text.FontConfig.FontFamily: String getLanguages()>
<com.android.uiautomator.core.UiDevice: String getCurrentActivityName()>
<android.view.WindowInsets: int getStableInsetTop()>
<android.location.Location: void removeAccuracy()>
<android.app.Notification.Builder: Builder setChannel(String)>
<android.graphics.BitmapRegionDecoder: BitmapRegionDecoder newInstance(byte[],int,int,boolean)>
<android.view.ViewConfiguration: int getMaximumFlingVelocity()>
<android.os.FileUtils: void closeQuietly(AutoCloseable)>
<android.view.inputmethod.InputMethodManager: void setInputMethod(IBinder,String)>
<android.hardware.input.InputSensorInfo: void __metadata()>
<android.content.pm.overlay.OverlayPaths: void __metadata()>
<com.android.systemui.statusbar.StatusBarStateControllerImpl: void addCallback(StateListener,int)>
<android.view.textclassifier.TextClassification.Builder: Builder setIcon(Drawable)>
<android.os.Debug: void resetThreadExternalAllocCount()>
<android.webkit.WebSettings: void setEnableSmoothTransition(boolean)>
<android.app.Notification.BubbleMetadata.Builder: Builder createShortcutBubble(String)>
<android.location.Location: void removeBearingAccuracy()>
<android.telephony.PhoneNumberUtils: boolean isPotentialEmergencyNumber(String,String)>
<android.util.proto.ProtoOutputStream: void writeSInt32(long,int)>
<android.os.storage.StorageManager: void disableUsbMassStorage()>
<android.webkit.WebSettings: void setTextSize(TextSize)>
<android.net.util.SocketUtils: SocketAddress makePacketSocketAddress(int,byte[])>
<android.text.Html: String toHtml(Spanned)>
<android.database.CursorWindow: boolean isLong(int,int)>
<android.view.translation.TranslationManager: Translator createTranslator(TranslationContext)>
<android.app.ActionBar: void setListNavigationCallbacks(SpinnerAdapter,OnNavigationListener)>
<android.os.Debug: int getGlobalAllocCount()>
<android.content.pm.PackageManager: void addPreferredActivity(IntentFilter,int,ComponentName[],ComponentName)>
<android.view.animation.Animation: int getBackgroundColor()>
<android.os.Debug: int getGlobalExternalAllocSize()>
<android.content.pm.ShortcutInfo.Builder: Builder setTitleResId(int)>
<android.database.AbstractCursor: Object getUpdatedField(int)>
<android.renderscript.Font: Font create(RenderScript,Resources,String,Style,float)>
<android.graphics.Path: boolean isConvex()>
<android.renderscript.RenderScriptGL.SurfaceConfig: void setAlpha(int,int)>
<android.media.AudioManager: void setRouting(int,int,int)>
<android.view.Surface: void transferFrom(Surface)>
<android.security.keystore.KeyGenParameterSpec: int getUid()>
<android.view.View: boolean computeFitSystemWindows(Rect,Rect)>
<android.widget.CalendarView: void setSelectedDateVerticalBar(Drawable)>
<android.location.LocationRequest: LocationRequest createFromDeprecatedProvider(String,long,float,boolean)>
<android.accessibilityservice.AccessibilityServiceInfo: List<CapabilityInfo> getCapabilityInfos()>
<android.webkit.WebViewDatabase: boolean hasFormData()>
<android.view.textclassifier.TextClassifier.EntityConfig: EntityConfig createWithExplicitEntityList(Collection<String>)>
<android.view.ViewDebug: void dump(View,boolean,boolean,OutputStream)>
<android.net.SSLCertificateSocketFactory: void <init>(int)>
<android.location.LocationManager: void flushGnssBatch()>
<android.bluetooth.BluetoothAdapter: boolean startLeScan(LeScanCallback)>
<com.android.server.backup.BackupManagerService: String selectBackupTransport(int,String)>
<android.location.LocationManager: boolean registerGnssBatchedLocationCallback(long,boolean,BatchedLocationCallback,Handler)>
<android.media.MediaFile: boolean isAudioFileType(int)>
<com.android.internal.widget.RecyclerView.ViewHolder: int getPosition()>
<com.android.ims.internal.uce.common.CapInfo: void setSharedMapSupported(boolean)>
<android.webkit.CookieSyncManager: void startSync()>
<android.telephony.PhoneStateListener: void onDataConnectionRealTimeInfoChanged(DataConnectionRealTimeInfo)>
<android.content.pm.PermissionInfo: void <init>()>
<android.bluetooth.BluetoothHealth: boolean unregisterAppConfiguration(BluetoothHealthAppConfiguration)>
<android.util.IndentingPrintWriter: IndentingPrintWriter setIndent(String)>
<android.app.FragmentController: void dispatchPictureInPictureModeChanged(boolean)>
<android.view.ViewGroup: void setPersistentDrawingCache(int)>
<com.android.ims.internal.uce.common.CapInfo: void setChatbotRoleSupported(boolean)>
<android.widget.OverScroller: void <init>(Context,Interpolator,float,float)>
<android.graphics.ImageDecoder: boolean getDecodeAsAlphaMask()>
<com.android.server.wm.WindowContainer: boolean isAnimatingExcluding(int,int)>
<android.webkit.CookieManager: void removeAllCookie()>
<android.view.translation.TranslationManager: PendingIntent getTranslationSettingsActivityIntent()>
<android.nfc.NfcAdapter: void setBeamPushUrisCallback(CreateBeamUrisCallback,Activity)>
<android.hardware.Camera.Parameters: List<Integer> getSupportedPreviewFrameRates()>
<android.app.usage.StorageStatsManager: long getCacheBytes(String)>
<android.widget.ListView: long[] getCheckItemIds()>
<android.app.Notification.MessagingStyle.Message: void <init>(CharSequence,long,CharSequence)>
<android.content.pm.Attribution: void __metadata()>
<junit.runner.BaseTestRunner: TestSuiteLoader getLoader()>
<android.content.ContextWrapper: Drawable getWallpaper()>
<android.renderscript.FileA3D: FileA3D createFromAsset(RenderScript,AssetManager,String)>
<android.security.keystore.KeyInfo: boolean isInsideSecureHardware()>
<android.view.WindowInsets.Builder: Builder setMandatorySystemGestureInsets(Insets)>
<android.net.TrafficStats: void setThreadStatsUidSelf()>
<android.speech.tts.TextToSpeech: Locale getLanguage()>
<com.android.location.provider.ProviderRequestUnbundled: List<LocationRequestUnbundled> getLocationRequests()>
<android.renderscript.ProgramVertexFixedFunction.Builder: Builder setTextureMatrixEnable(boolean)>
<com.android.ims.internal.uce.common.CapInfo: boolean isCdViaPresenceSupported()>
<com.android.ims.internal.uce.common.CapInfo: void setIpVideoSupported(boolean)>
<android.webkit.Plugin: String getDescription()>
<android.location.LocationRequest: LocationRequest setInterval(long)>
<android.net.NetworkScoreManager: void registerNetworkScoreCache(int,INetworkScoreCache)>
<android.app.Notification: String getChannel()>
<com.android.ims.internal.uce.common.CapInfo: boolean isVsSupported()>
<android.media.AudioTrack: void <init>(int,int,int,int,int,int)>
<android.app.Notification: void setLatestEventInfo(Context,CharSequence,CharSequence,PendingIntent)>
<android.media.Ringtone: int getStreamType()>
<android.widget.CalendarView: void setWeekSeparatorLineColor(int)>
<com.android.server.am.ActivityManagerService: IIntentSender getIntentSender(int,String,IBinder,String,int,Intent[],String[],int,Bundle,int)>
<android.renderscript.Mesh.TriangleMeshBuilder: TriangleMeshBuilder setNormal(float,float,float)>
<android.media.MediaRecorder: void setAuxiliaryOutputFile(String)>
<android.security.KeyStore: int[] listUidsOfAuthBoundKeys()>
<android.webkit.UrlInterceptRegistry: boolean registerHandler(UrlInterceptHandler)>
<android.view.accessibility.AccessibilityManager: List<ServiceInfo> getAccessibilityServiceList()>
<com.android.ims.internal.uce.common.CapInfo: boolean isGeoPullFtSupported()>
<com.android.ims.internal.uce.common.CapInfo: boolean isVsDuringCSSupported()>
<android.app.BroadcastOptions: void setTemporaryAppWhitelistDuration(long)>
<android.widget.CalendarView: Drawable getSelectedDateVerticalBar()>
<android.view.View: void buildDrawingCache()>
<android.app.usage.StorageStatsManager: ExternalStorageStats queryExternalStatsForUser(String,UserHandle)>
<android.os.Debug: void resetGlobalFreedCount()>
<android.app.Fragment: void onInflate(AttributeSet,Bundle)>
<android.content.pm.InstantAppResolveInfo: int getVersionCode()>
<android.text.format.DateUtils: String getMonthString(int,int)>
<android.content.pm.parsing.ParsingPackageImpl: List<String> getRequestedPermissions()>
<android.view.translation.TranslationResponse.BaseBuilder: Builder setTranslationStatus(int)>
<android.telephony.TelephonyManager: boolean setPreferredNetworkType(int,int)>
<android.location.LocationManager: void removeGpsMeasurementListener(Listener)>
<android.os.PowerManager: void wakeUp(long)>
<android.util.proto.ProtoOutputStream: void writeRepeatedObject(long,byte[])>
<android.renderscript.ProgramFragmentFixedFunction.Builder: Builder setPointSpriteTexCoordinateReplacement(boolean)>
<com.android.internal.widget.PagerAdapter: void startUpdate(View)>
<android.webkit.PluginData: InputStream getInputStream()>
<android.test.TouchUtils: void dragViewToTop(ActivityInstrumentationTestCase,View,int)>
<android.bluetooth.BluetoothHealthAppConfiguration: String getName()>
<com.android.ims.internal.uce.common.CapInfo: void setVsDuringCSSupported(boolean)>
<android.service.voice.VoiceInteractionSession.PickOptionRequest: CharSequence getPrompt()>
<android.telephony.TelephonyManager: boolean isVisualVoicemailEnabled(PhoneAccountHandle)>
<android.app.Activity: boolean onNavigateUpFromChild(Activity)>
<android.graphics.drawable.Drawable: void setColorFilter(int,Mode)>
<android.os.PowerWhitelistManager: void addToWhitelist(String)>
<android.content.ContentResolver: Drawable getTypeDrawable(String)>
<android.renderscript.FileA3D: FileA3D createFromResource(RenderScript,Resources,int)>
<android.renderscript.RenderScriptGL.SurfaceConfig: void setColor(int,int)>
<android.app.admin.DevicePolicyManager: void setApplicationRestrictionsManagingPackage(ComponentName,String)>
<android.security.keystore2.AndroidKeyStoreSignatureSpiBase: void engineSetParameter(String,Object)>
<android.graphics.Shader: void <init>()>
<android.content.IntentSender: String getTargetPackage()>
<com.android.internal.widget.RecyclerView: void setOnScrollListener(OnScrollListener)>
<android.telephony.TelephonyManager: boolean isOffhook()>
<android.webkit.PluginData: void <init>(InputStream,long,Map<String, String[]>,int)>
<android.net.TrafficStats: long getUidTcpTxSegments(int)>
<android.telephony.SignalStrength: int getEvdoLevel()>
<android.telephony.CellIdentityGsm: int getMcc()>
<android.database.AbstractWindowedCursor: boolean isFloat(int)>
<com.android.internal.app.SimpleIconFactory: Bitmap createUserBadgedIconBitmap(Drawable,UserHandle)>
<android.webkit.WebSettings: String getPluginsPath()>
<android.media.MediaTimestamp: long getAnchorSytemNanoTime()>
<android.telephony.PhoneStateListener: void onUserMobileDataStateChanged(boolean)>
<android.telephony.CellIdentityGsm: int getPsc()>
<android.widget.TimePicker: Integer getCurrentHour()>
<android.os.BatterySaverPolicyConfig.Builder: Builder setDisableSoundTrigger(boolean)>
<android.view.ViewDebug: void stopRecyclerTracing()>
<android.preference.PreferenceActivity: void setPreferenceScreen(PreferenceScreen)>
<android.app.AppOpsManager.OpEntry: long getTime()>
<android.media.AudioManager: void setParameter(String,String)>
<android.app.FragmentController: void dispatchMultiWindowModeChanged(boolean)>
<android.view.inputmethod.InputMethodSubtype: void <init>(int,int,String,String,String,boolean,boolean)>
<android.view.ViewGroup: int getPersistentDrawingCache()>
<android.telephony.SignalStrength: int getGsmSignalStrength()>
<android.webkit.PluginData: Map<String, String[]> getHeaders()>
<android.os.Debug: void resetGlobalAllocSize()>
<android.renderscript.Mesh.Builder: int getCurrentIndexSetIndex()>
<android.webkit.WebViewClient: WebResourceResponse shouldInterceptRequest(WebView,String)>
<android.app.ContextImpl: void setWallpaper(InputStream)>
<android.telephony.PhoneStateListener: void onDisplayInfoChanged(TelephonyDisplayInfo)>
<android.telephony.PhoneStateListener: void onOemHookRawEvent(byte[])>
<android.renderscript.ProgramRaster: boolean isPointSpriteEnabled()>
<android.provider.Contacts.Phones: CharSequence getDisplayLabel(Context,int,CharSequence,CharSequence[])>
<android.telephony.TelephonyManager: String iccTransmitApduBasicChannel(int,int,int,int,int,int,String)>
<android.telephony.TelephonyManager: void answerRingingCall()>
<android.app.Dialog: void <init>(Context,boolean,Message)>
<android.net.SntpClient: boolean requestTime(String,int)>
<android.webkit.WebSettings: void setNavDump(boolean)>
<android.os.UserManager: boolean isLinkedUser()>
<android.os.Debug: void resetGlobalFreedSize()>
<android.view.translation.TranslationRequest.BaseBuilder: Builder addViewTranslationRequest(ViewTranslationRequest)>
<com.android.systemui.Dependency: T get(DependencyKey<T>)>
<android.bluetooth.BluetoothHealthCallback: void onHealthChannelStateChange(BluetoothHealthAppConfiguration,BluetoothDevice,int,int,ParcelFileDescriptor,int)>
<android.app.Activity: boolean showDialog(int,Bundle)>
<android.os.Debug: void changeDebugPort(int)>
<android.renderscript.RSTextureView: void pause()>
<android.hardware.radio.RadioTuner: void setAnalogForced(boolean)>
<android.webkit.Plugin: void setPath(String)>
<android.os.Debug: void resetGlobalExternalAllocCount()>
<android.view.textservice.TextServicesManager: TextServicesManager getInstance()>
<com.android.server.StorageManagerService: void killMediaProvider(List<UserInfo>)>
<android.telephony.SubscriptionInfo: int getMcc()>
<android.view.inputmethod.InputMethodSession: void toggleSoftInput(int,int)>
<android.app.Notification.WearableExtender: WearableExtender clearPages()>
<android.bluetooth.BluetoothAdapter: boolean startLeScan(UUID[],LeScanCallback)>
<android.os.FileUtils: long checksumCrc32(File)>
<android.renderscript.ProgramRaster: ProgramRaster CULL_FRONT(RenderScript)>
<android.provider.Contacts.Intents.Insert: void <init>()>
<android.location.LocationRequest: void setWorkSource(WorkSource)>
<android.app.usage.StorageStatsManager: StorageStats queryStatsForUser(String,UserHandle)>
<android.app.DownloadManager: long addCompletedDownload(String,String,boolean,String,String,long,boolean)>
<android.view.translation.TranslationManager: Translator createOnDeviceTranslator(TranslationContext)>
<android.widget.TimePicker: Integer getCurrentMinute()>
<android.telephony.TelephonyManager: String[] getMergedSubscriberIds()>
<android.view.inputmethod.InputMethodManager: void updateCursor(View,int,int,int,int)>
<android.telephony.PhoneStateListener: void onOutgoingEmergencySms(EmergencyNumber,int)>
<com.android.internal.util.XmlUtils: void writeValueXml(Object,String,XmlSerializer)>
<android.view.InputDevice: Vibrator getVibrator()>
<android.telephony.PhoneStateListener: void onCellInfoChanged(List<CellInfo>)>
<android.webkit.Plugin.DefaultClickHandler: void handleClickEvent(Context)>
<com.android.internal.widget.PagerAdapter: void destroyItem(View,int,Object)>
<android.content.pm.PackageManager: void getPackageSizeInfoAsUser(String,int,IPackageStatsObserver)>
<android.content.pm.UserInfo: void <init>()>
<android.os.Looper: void prepareMainLooper()>
<android.service.voice.VoiceInteractionSession.ConfirmationRequest: CharSequence getPrompt()>
<android.hardware.location.NanoApp: void <init>(int,byte[])>
<android.location.LocationManager: void requestLocationUpdates(LocationRequest,PendingIntent)>
<android.location.GnssMeasurement: void setCarrierCycles(long)>
<android.os.PowerWhitelistManager: long whitelistAppTemporarilyForEvent(String,int,int,String)>
<com.android.server.wm.WindowContainer: WindowContainer getAnimatingContainer()>
<android.view.View: void destroyDrawingCache()>
<android.service.textclassifier.TextClassifierService: void onSelectionEvent(TextClassificationSessionId,SelectionEvent)>
<android.telephony.PhoneStateListener: void onOutgoingEmergencyCall(EmergencyNumber,int)>
<android.os.Vibrator: void vibrate(long[],int,AudioAttributes)>
<com.android.ims.internal.uce.common.CapInfo: void setVsSupported(boolean)>
<com.android.internal.graphics.palette.Palette.Builder: AsyncTask<Bitmap, Void, Palette> generate(PaletteAsyncListener)>
<android.view.translation.TranslationContext: void __metadata()>
<android.app.Activity: boolean isBackgroundVisibleBehind()>
<android.app.Notification.Builder: void <init>(Context)>
<com.android.internal.widget.RecyclerView: ViewHolder findViewHolderForPosition(int)>
<android.view.WindowInsets.Builder: Builder setTappableElementInsets(Insets)>
<android.content.pm.VersionedPackage: int getVersionCode()>
<com.android.server.net.IpConfigStore: SparseArray<IpConfiguration> readIpAndProxyConfigurations(String)>
<android.view.inputmethod.InputMethodManager: void showSoftInputUnchecked(int,ResultReceiver)>
<android.view.WindowManager: Display getDefaultDisplay()>
<android.graphics.BitmapRegionDecoder: BitmapRegionDecoder newInstance(String,boolean)>
<android.app.TaskStackListener: void onTaskRemovalStarted(int)>
<android.telephony.PhoneStateListener: void onBarringInfoChanged(BarringInfo)>
<android.view.inputmethod.InputMethodManager: boolean shouldOfferSwitchingToNextInputMethod(IBinder)>
<android.media.AudioManager: void setWiredHeadsetOn(boolean)>
<android.opengl.GLES30: void glGetTransformFeedbackVarying(int,int,int,IntBuffer,IntBuffer,IntBuffer,byte)>
<android.renderscript.ScriptIntrinsicColorMatrix: ScriptIntrinsicColorMatrix create(RenderScript,Element)>
<android.location.LocationManager: void setLocationControllerExtraPackageEnabled(boolean)>
<android.renderscript.ProgramRaster.Builder: void <init>(RenderScript)>
<com.android.internal.widget.RecyclerView.ItemDecoration: void onDraw(Canvas,RecyclerView)>
<android.app.Fragment: void onMultiWindowModeChanged(boolean)>
<android.app.Notification.Action.WearableExtender: CharSequence getCancelLabel()>
<android.os.Debug: void resetGlobalGcInvocationCount()>
<com.android.internal.app.SimpleIconFactory: void setWrapperBackgroundColor(int)>
<android.app.InstantAppResolverService: void onGetInstantAppResolveInfo(Intent,int[],String,InstantAppResolutionCallback)>
<android.net.TrafficStats: long getUidUdpTxBytes(int)>
<android.view.Display: void getSize(Point)>
<android.widget.TimePicker: void setCurrentHour(Integer)>
<android.webkit.Plugin.DefaultClickHandler: void onClick(DialogInterface,int)>
<android.view.textservice.SpellCheckerSession: void getSuggestions(TextInfo[],int,boolean)>
<android.hardware.hdmi.HdmiControlManager: void powerOffRemoteDevice(HdmiDeviceInfo)>
<android.telephony.SignalStrength: int getEvdoEcio()>
<android.content.pm.parsing.component.ParsedProcess: void __metadata()>
<android.hardware.SensorManager: boolean registerListener(SensorListener,int)>
<android.os.Debug: int getGlobalClassInitCount()>
<android.speech.tts.SynthesisRequest: String getText()>
<android.net.NetworkStatsHistory: void generateRandom(long,long,long)>
<android.renderscript.ProgramFragmentFixedFunction.Builder: Builder setVaryingColor(boolean)>
<android.media.AudioManager: boolean shouldVibrate(int)>
<android.telephony.data.ApnSetting: InetAddress getProxyAddress()>
<android.util.proto.ProtoOutputStream: void writeRepeatedSFixed64(long,long)>
<com.android.ims.internal.uce.common.CapInfo: void setRcsIpVoiceCallSupported(boolean)>
<android.app.search.SearchSession: void destroy()>
<com.android.server.NativeDaemonEvent: String getRawEvent()>
<android.test.mock.MockPackageManager: String getDefaultBrowserPackageName(int)>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: boolean isHeading()>
<android.webkit.PluginList: void addPlugin(Plugin)>
<android.view.ViewDebug: void startHierarchyTracing(String,View)>
<android.nfc.NdefRecord: void <init>(byte[])>
<android.app.Activity: FragmentManager getFragmentManager()>
<android.content.pm.parsing.component.ParsedAttribution: void __metadata()>
<android.telecom.Conference: AudioState getAudioState()>
<android.app.Notification.WearableExtender: WearableExtender setHintShowBackgroundOnly(boolean)>
<android.provider.Contacts.People: void markAsContacted(ContentResolver,long)>
<android.content.ContextWrapper: void removeStickyBroadcast(Intent)>
<android.telephony.TelephonyManager: String iccTransmitApduBasicChannel(int,int,int,int,int,String)>
<com.android.internal.widget.RecyclerView.LayoutManager: void onDetachedFromWindow(RecyclerView)>
<android.provider.ContactsContract.StreamItemPhotos: void <init>()>
<android.content.res.AssetManager: int addOverlayPath(String)>
<android.provider.Contacts.ContactMethods: String encodeCustomImProtocol(String)>
<android.renderscript.ProgramVertexFixedFunction.InternalBuilder: ProgramVertexFixedFunction create()>
<android.view.textclassifier.TextClassification.Builder: Builder setOnClickListener(OnClickListener)>
<android.telephony.TelephonyManager: String iccTransmitApduLogicalChannel(int,int,int,int,int,int,int,String)>
<android.content.Context: void sendStickyBroadcast(Intent,Bundle)>
<android.renderscript.RSTextureView: void onSurfaceTextureAvailable(SurfaceTexture,int,int)>
<android.provider.Contacts.Presence: void setPresenceIcon(ImageView,int)>
<android.renderscript.ScriptGroup: void execute()>
<android.media.MediaFile: boolean isImageFileType(int)>
<android.permission.PermissionControllerService: void onSetRuntimePermissionGrantStateByDeviceAdmin(String,String,String,int,Consumer<Boolean>)>
<android.hardware.display.DisplayManager: void setSaturationLevel(float)>
<android.renderscript.RSSurfaceView: void resume()>
<android.webkit.WebSettings: void setPluginsEnabled(boolean)>
<android.renderscript.RSTextureView: void setRenderScriptGL(RenderScriptGL)>
<android.telephony.PreciseDataConnectionState: int getDataConnectionFailCause()>
<android.media.MediaScanner.MyMediaScannerClient: void scanFile(String,long,long,boolean,boolean)>
<android.graphics.BaseCanvas: void drawBitmap(int[],int,int,int,int,int,int,boolean,Paint)>
<android.telephony.TelephonyManager: void setVoicemailRingtoneUri(PhoneAccountHandle,Uri)>
<android.os.Debug: void resetGlobalAllocCount()>
<android.telephony.SignalStrength: int getDbm()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onScreenTurnedOff()>
<android.location.LocationRequest: LocationRequest setExpireAt(long)>
<android.content.pm.ShortcutInfo.Builder: Builder setTitle(CharSequence)>
<android.renderscript.Mesh.TriangleMeshBuilder: TriangleMeshBuilder setColor(float,float,float,float)>
<android.media.MediaScanner.MyMediaScannerClient: Uri endFile(FileEntry,boolean,boolean,boolean,boolean,boolean,boolean)>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumSymbols(ComponentName)>
<android.security.KeyStoreParameter: boolean isEncryptionRequired()>
<android.bluetooth.BluetoothHealth: ParcelFileDescriptor getMainChannelFd(BluetoothDevice,BluetoothHealthAppConfiguration)>
<android.util.proto.ProtoOutputStream: void writeRepeatedInt64(long,long)>
<android.location.GnssCapabilities: boolean hasGnssAntennaInfo()>
<android.util.proto.ProtoOutputStream: void writeString(long,String)>
<android.view.textservice.SpellCheckerSession: void getSuggestions(TextInfo,int)>
<com.android.location.provider.LocationProviderBase: void onEnable()>
<android.hardware.radio.ProgramSelector: int getProgramType()>
<android.view.inputmethod.InputMethodManager: void showStatusIcon(IBinder,String,int)>
<android.location.LocationRequest: LocationRequest setLowPowerMode(boolean)>
<android.os.UserHandle: boolean isOwner()>
<android.app.ActionBar: void removeAllTabs()>
<android.webkit.CookieSyncManager: void resetSync()>
<android.content.pm.PackageManager: boolean updateIntentVerificationStatusAsUser(String,int,int)>
<android.webkit.PluginList: void clear()>
<android.hardware.display.VirtualDisplayConfig: void __metadata()>
<android.app.admin.DevicePolicyManager: void clearProfileOwner(ComponentName)>
<android.app.Activity: void setProgressBarIndeterminateVisibility(boolean)>
<android.app.KeyguardManager: void exitKeyguardSecurely(OnKeyguardExitResult)>
<android.os.Vibrator: void vibrate(long)>
<android.renderscript.Mesh.AllocationBuilder: int getCurrentVertexTypeIndex()>
<android.transition.TransitionValues: void <init>()>
<android.app.ActionBar: void removeTabAt(int)>
<android.app.ActivityManager.TaskDescription: void <init>(String,Bitmap)>
<android.renderscript.Mesh.AllocationBuilder: int getCurrentIndexSetIndex()>
<android.app.admin.DevicePolicyManager: String getApplicationRestrictionsManagingPackage(ComponentName)>
<android.util.proto.ProtoOutputStream: void writeObject(long,byte[])>
<android.webkit.WebView: void onChildViewAdded(View,View)>
<android.webkit.WebView: boolean overlayHorizontalScrollbar()>
<android.telephony.PhoneNumberUtils: boolean isPotentialEmergencyNumber(String)>
<android.speech.tts.TextToSpeech: int addEarcon(String,String)>
<android.bluetooth.BluetoothHealth: boolean disconnectChannel(BluetoothDevice,BluetoothHealthAppConfiguration,int)>
<android.util.proto.ProtoOutputStream: void writeRepeatedFloat(long,float)>
<android.location.Location: void removeSpeed()>
<android.media.AudioManager: void removeOnPreferredDeviceForStrategyChangedListener(OnPreferredDeviceForStrategyChangedListener)>
<android.hardware.radio.RadioTuner.Callback: void onConfigurationChanged(BandConfig)>
<com.android.server.pm.PackageManagerService: ParceledListSlice<IntentFilterVerificationInfo> getIntentFilterVerifications(String)>
<android.database.sqlite.SQLiteDatabase: void markTableSyncable(String,String)>
<android.app.ActionBar: void addTab(Tab,boolean)>
<android.provider.Contacts.People: Uri addToMyContactsGroup(ContentResolver,long)>
<android.webkit.PluginData: int getStatusCode()>
<android.database.AbstractWindowedCursor: boolean isBlob(int)>
<android.renderscript.RSTextureView: RenderScriptGL getRenderScriptGL()>
<android.view.View: int getSystemUiVisibility()>
<android.graphics.ImageDecoder: boolean getRequireUnpremultiplied()>
<android.telephony.CellInfo: long getTimeStamp()>
<android.telephony.euicc.DownloadableSubscription: void setAccessRules(UiccAccessRule[])>
<android.security.identity.IdentityCredential: void storeStaticAuthenticationData(X509Certificate,byte[])>
<android.os.Environment: File getUserSystemDirectory(int)>
<com.android.ims.internal.uce.common.CapInfo: void setImSupported(boolean)>
<android.telephony.SignalStrength: int getWcdmaAsuLevel()>
<android.view.inputmethod.InputMethodManager: void hideStatusIcon(IBinder)>
<com.android.ims.internal.uce.common.CapInfo: void setGeoSmsSupported(boolean)>
<android.test.TouchUtils: int dragViewBy(ActivityInstrumentationTestCase,View,int,int,int)>
<com.android.internal.util.AnnotationValidations: void validate(Class<? extends Annotation>,Annotation,Object)>
<android.webkit.WebSettings: int getUserAgent()>
<android.content.ContentResolver: void startSync(Uri,Bundle)>
<android.content.ClipboardManager: boolean hasText()>
<android.os.Handler: void <init>()>
<android.view.ViewConfiguration: int getFadingEdgeLength()>
<com.android.internal.view.AppearanceRegion: void __metadata()>
<android.util.proto.ProtoOutputStream: void writeRepeatedSInt64(long,long)>
<android.service.voice.HotwordDetectedResult: void __metadata()>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: Drawable[] getChildren()>
<android.media.ThumbnailUtils: Bitmap createImageThumbnail(String,int)>
<android.view.inputmethod.InputMethodManager: boolean switchToNextInputMethod(IBinder,boolean)>
<android.app.Activity: void onPrepareDialog(int,Dialog)>
<android.telephony.TelephonyManager: long getAllowedNetworkTypes()>
<android.view.Display: int getHeight()>
<android.webkit.WebViewDelegate: void callDrawGlFunction(Canvas,long)>
<android.graphics.BaseRecordingCanvas: void drawBitmap(int[],int,int,float,float,int,int,boolean,Paint)>
<android.graphics.BaseRecordingCanvas: void drawBitmap(int[],int,int,int,int,int,int,boolean,Paint)>
<android.hardware.lights.LightState: void <init>(int)>
<com.android.ims.internal.uce.common.CapInfo: void setSharedSketchSupported(boolean)>
<android.view.KeyEvent: int getKeyboardDevice()>
<com.android.ims.internal.uce.common.CapInfo: boolean isSharedMapSupported()>
<android.media.AudioManager: void registerMediaButtonEventReceiver(PendingIntent)>
<com.android.internal.widget.RecyclerView.ItemDecoration: void getItemOffsets(Rect,int,RecyclerView)>
<android.content.res.Configuration: void makeDefault()>
<android.renderscript.Font: Font createFromFile(RenderScript,Resources,String,float)>
<android.app.Activity: Cursor managedQuery(Uri,String[],String,String[],String)>
<android.content.pm.parsing.PackageLite: void __metadata()>
<com.android.server.am.ContentProviderHelper: String getProviderMimeType(Uri,int)>
<android.webkit.WebView: void setHttpAuthUsernamePassword(String,String,String,String)>
<android.content.ContextWrapper: void removeStickyBroadcastAsUser(Intent,UserHandle)>
<android.util.proto.ProtoOutputStream: void writeRepeatedFixed64(long,long)>
<android.telephony.TelephonyManager: boolean isIdle()>
<android.location.GnssMeasurement: long getCarrierCycles()>
<android.os.WorkSource: WorkSource addReturningNewbs(WorkSource)>
<android.app.Activity: void onAttachFragment(Fragment)>
<android.telecom.StatusHints: ComponentName getPackageName()>
<android.graphics.Canvas: boolean clipPath(Path,Op)>
<com.android.internal.logging.MetricsLogger: void visibility(Context,int,int)>
<android.media.tv.tuner.frontend.DvbcFrontendCapabilities: int getFecCapability()>
<android.webkit.WebSettings: boolean getUseDoubleTree()>
<android.renderscript.RSTextureView: void destroyRenderScriptGL()>
<android.database.ContentObservable: void dispatchChange(boolean)>
<android.security.keystore.KeyGenParameterSpec.Builder: Builder setUserAuthenticationValidityDurationSeconds(int)>
<android.graphics.ImageDecoder: ImageDecoder setResize(int)>
<android.widget.RemoteViews: void setRemoteAdapter(int,ArrayList<RemoteViews>,int)>
<android.text.FontConfig.Font: int getWeight()>
<android.webkit.WebViewFactoryProvider: TokenBindingService getTokenBindingService()>
<android.os.Debug: void resetThreadAllocSize()>
<android.telephony.TelephonyManager: boolean endCall()>
<android.util.proto.ProtoOutputStream: void writeUInt64(long,long)>
<android.app.Activity: void stopManagingCursor(Cursor)>
<android.content.IContentProvider: int update(String,Uri,ContentValues,String,String[])>
<com.android.ims.internal.uce.common.CapInfo: void setFullSnFGroupChatSupported(boolean)>
<android.app.AlertDialog.Builder: Builder setInverseBackgroundForced(boolean)>
<android.location.LocationManager: void removeGpsNavigationMessageListener(Listener)>
<android.location.LocationManager: void requestSingleUpdate(String,PendingIntent)>
<android.renderscript.ProgramVertex: Element getInput(int)>
<android.telephony.ims.ImsUtListener: void onUtConfigurationQueried(int,Bundle)>
<android.os.Bundle: IBinder getIBinder(String)>
<android.telephony.PhoneStateListener: void onPreciseCallStateChanged(PreciseCallState)>
<android.util.proto.ProtoOutputStream: void writePackedBool(long,boolean[])>
<android.telephony.TelephonyManager: String iccTransmitApduLogicalChannelBySlot(int,int,int,int,int,int,int,String)>
<android.animation.LayoutTransition: void hideChild(ViewGroup,View)>
<android.graphics.ImageDecoder: boolean getConserveMemory()>
<android.content.ContentResolver: void notifyChange(Iterable<Uri>,ContentObserver,int)>
<android.util.TrustedTime: boolean forceRefresh()>
<android.widget.RemoteViews: RemoteViews clone()>
<android.util.proto.ProtoOutputStream: void writeRepeatedFixed32(long,int)>
<android.app.InstantAppResolverService: void onGetInstantAppResolveInfo(int[],String,InstantAppResolutionCallback)>
<android.security.KeyPairGeneratorSpec.Builder: Builder setEncryptionRequired()>
<android.media.AudioManager: int requestAudioFocus(OnAudioFocusChangeListener,int,int)>
<android.renderscript.Element: Element MATRIX4X4(RenderScript)>
<android.location.LocationManager: void clearTestProviderEnabled(String)>
<android.webkit.WebView: void setPictureListener(PictureListener)>
<android.webkit.WebView: View getZoomControls()>
<android.media.session.MediaSessionManager: void notifySession2Created(Session2Token)>
<android.view.ViewConfiguration: int getWindowTouchSlop()>
<android.os.storage.StorageManager: void enableUsbMassStorage()>
<android.text.FontConfig.Font: FontVariationAxis[] getAxes()>
<android.webkit.UrlInterceptRegistry: void setUrlInterceptDisabled(boolean)>
<android.view.WindowInsets: void <init>(Rect,Rect,boolean,boolean,DisplayCutout)>
<android.graphics.Paint: Rasterizer getRasterizer()>
<android.view.translation.TranslationRequest.Builder: Builder addTranslationRequestValue(TranslationRequestValue)>
<android.service.translation.TranslationService.OnTranslationResultCallback: void onError()>
<android.location.LocationManager: void requestLocationUpdates(long,float,Criteria,PendingIntent)>
<android.telephony.PhoneStateListener: void onPhoneCapabilityChanged(PhoneCapability)>
<android.media.AudioManager: boolean isBluetoothA2dpOn()>
<com.android.internal.graphics.palette.Palette.Builder: Builder resizeBitmapSize(int)>
<android.app.ContextImpl: void removeStickyBroadcastAsUser(Intent,UserHandle)>
<android.location.Location: void removeVerticalAccuracy()>
<com.android.internal.widget.RecyclerView.LayoutManager: int getChildMeasureSpec(int,int,int,boolean)>
<android.hardware.location.ContextHubManager: int registerCallback(ICallback)>
<android.view.inputmethod.InputMethodManager: void registerSuggestionSpansForNotification(SuggestionSpan[])>
<android.app.ActionBar: void selectTab(Tab)>
<android.app.SyncNotedAppOp: void __metadata()>
<android.media.AudioTrack: void setState(int)>
<android.renderscript.ProgramVertexFixedFunction.InternalBuilder: InternalBuilder addInput(Element)>
<android.renderscript.ProgramRaster.Builder: Builder setPointSpriteEnabled(boolean)>
<com.android.server.pm.Installer: long createAppData(String,String,int,int,int,String,int)>
<android.provider.Contacts.ContactMethods: String encodePredefinedImProtocol(int)>
<android.os.FileObserver: void <init>(String)>
<android.widget.PopupWindow: boolean isClipToScreenEnabled()>
<android.telephony.SmsMessage: SmsMessage createFromPdu(byte[])>
<android.nfc.NfcAdapter: void setNdefPushMessage(NdefMessage,Activity,Activity)>
<com.android.ims.internal.uce.common.CapInfo: void setFtThumbSupported(boolean)>
<android.media.MediaCodec: ByteBuffer[] getOutputBuffers()>
<android.net.Proxy: int getDefaultPort()>
<android.drm.DrmStore.DrmObjectType: void <init>()>
<android.telephony.TelephonyManager: void setDataEnabled(int,boolean)>
<com.android.internal.logging.MetricsLogger: void visibility(Context,int,boolean)>
<android.widget.CalendarView: int getFocusedMonthDateColor()>
<android.speech.tts.UtteranceProgressListener: void onError(String)>
<android.telephony.PhoneStateListener: void onActiveDataSubscriptionIdChanged(int)>
<android.renderscript.FileA3D.IndexEntry: EntryType getEntryType()>
<android.service.carrier.CarrierMessagingService: void onSendDataSms(byte[],int,String,int,ResultCallback<SendSmsResult>)>
<android.net.Proxy: String getHost(Context)>
<android.net.NetworkStatsHistory: void generateRandom(long,long,long,long,long,long,long,Random)>
<android.util.proto.ProtoOutputStream: void writePackedSFixed64(long,long[])>
<android.app.ActivityManagerNative: void broadcastStickyIntent(Intent,String,int)>
<android.database.ContentObserver: void dispatchChange(boolean)>
<com.android.internal.logging.MetricsLogger: void histogram(Context,String,int)>
<android.view.translation.TranslationRequest: void __metadata()>
<android.media.MediaFile: boolean isPlayListFileType(int)>
<android.webkit.WebView: boolean showFindDialog(String,boolean)>
<android.view.textclassifier.TextClassification.Builder: Builder setLabel(String)>
<com.android.server.pm.KeySetManagerService: String encodePublicKey(PublicKey)>
<android.telecom.Phone: AudioState getAudioState()>
<android.app.Notification.Builder: Builder setLights(int,int,int)>
<com.android.ims.internal.uce.common.CapInfo: boolean isIpVoiceSupported()>
<android.content.pm.PackageInstaller: void removeSessionCallback(SessionCallback)>
<android.webkit.WebView: void setMapTrackballToArrowKeys(boolean)>
<android.content.ContentResolver: void cancelSync(Uri)>
<android.telephony.SignalStrength: int getGsmBitErrorRate()>
<android.view.ViewGroup: void setChildrenDrawingCacheEnabled(boolean)>
<android.content.pm.verify.domain.DomainOwner: void __metadata()>
<android.renderscript.RenderScriptGL: int getWidth()>
<android.view.translation.TranslationSpec: String getLanguage()>
<android.telephony.PhoneStateListener: void onCallStateChanged(int,String)>
<android.telecom.Conference: void onAudioStateChanged(AudioState)>
<android.media.AudioManager: void unregisterMediaButtonEventReceiver(PendingIntent)>
<android.provider.ContactsContract.StreamItems.StreamItemPhotos: void <init>()>
<android.renderscript.FileA3D.IndexEntry: BaseObj getObject()>
<android.view.inputmethod.InputMethodManager: void setAdditionalInputMethodSubtypes(String,InputMethodSubtype[])>
<android.widget.DatePicker: void setCalendarViewShown(boolean)>
<android.telephony.PhoneStateListener: void onDataConnectionStateChanged(int,int)>
<com.android.server.SystemServiceManager: File ensureSystemDir()>
<android.renderscript.Mesh: int getVertexAllocationCount()>
<android.content.Context: Context createFeatureContext(String)>
<android.telephony.ims.ImsCallSessionListener: void callSessionHandoverFailed(int,int,ImsReasonInfo)>
<android.renderscript.Mesh.Builder: Builder addIndexSetType(Type,Primitive)>
<android.renderscript.Mesh.AllocationBuilder: AllocationBuilder addIndexSetAllocation(Allocation,Primitive)>
<android.preference.PreferenceActivity: PreferenceManager getPreferenceManager()>
<android.opengl.EGLObjectHandle: int getHandle()>
<android.text.format.DateUtils: String getAMPMString(int)>
<android.os.Environment: File getExternalStoragePublicDirectory(String)>
<com.android.server.pm.parsing.pkg.AndroidPackage: ApplicationInfo toAppInfoWithoutState()>
<android.test.mock.MockCursor: boolean requery()>
<android.telephony.ims.ImsMmTelManager: ImsMmTelManager createForSubscriptionId(int)>
<android.provider.Contacts.People: Uri createPersonInMyContactsGroup(ContentResolver,ContentValues)>
<android.view.WindowInsets.Builder: Builder setStableInsets(Insets)>
<android.renderscript.RenderScriptGL: void bindProgramFragment(ProgramFragment)>
<android.net.wifi.nl80211.WifiNl80211Manager: boolean registerApCallback(String,Executor,SoftApCallback)>
<android.webkit.WebStorage: void setQuotaForOrigin(String,long)>
<android.app.admin.DeviceAdminReceiver: void onReadyForUserInitialization(Context,Intent)>
<android.service.autofill.augmented.FillRequest: void __metadata()>
<android.database.AbstractWindowedCursor: boolean isString(int)>
<android.text.style.SuggestionSpan: String getNotificationTargetClassName()>
<android.os.WorkSource: String getName(int)>
<android.webkit.WebView: void setVerticalScrollbarOverlay(boolean)>
<android.webkit.WebSettings: boolean getNavDump()>
<android.app.Notification.WearableExtender: WearableExtender setGravity(int)>
<android.app.Activity: void onVisibleBehindCanceled()>
<android.hardware.location.ContextHubManager: int[] findNanoAppOnHub(int,NanoAppFilter)>
<android.content.Context: Drawable peekWallpaper()>
<android.os.WorkSource: WorkSource[] setReturningDiffs(WorkSource)>
<android.view.ViewGroup: void invalidateChild(View,Rect)>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumLowerCase(ComponentName,int)>
<android.app.Instrumentation: void stopAllocCounting()>
<android.text.Html: Spanned fromHtml(String)>
<android.provider.Settings: boolean checkAndNoteWriteSettingsOperation(Context,int,String,boolean)>
<android.renderscript.RSTextureView: boolean onSurfaceTextureDestroyed(SurfaceTexture)>
<android.app.job.JobInfo: int getNetworkType()>
<com.android.internal.widget.LockPatternUtils: void setLegacyLockPatternEnabled(int)>
<android.webkit.WebView: String findAddress(String)>
<android.view.inputmethod.InlineSuggestionInfo: void __metadata()>
<android.util.proto.ProtoOutputStream: void writeInt32(long,int)>
<android.content.pm.PackageInstaller: void addSessionCallback(SessionCallback)>
<android.app.ContextImpl: void sendStickyOrderedBroadcast(Intent,BroadcastReceiver,Handler,int,String,Bundle)>
<android.webkit.Plugin: String getFileName()>
<android.view.WindowInsets: boolean hasStableInsets()>
<android.telecom.InCallService: AudioState getAudioState()>
<com.android.server.pm.parsing.pkg.PkgPackageInfo: int getSharedUserLabel()>
<android.view.ViewGroup: void dispatchSystemUiVisibilityChanged(int)>
<com.android.internal.logging.MetricsLogger: void visible(Context,int)>
<android.util.proto.ProtoOutputStream: void writePackedFixed64(long,long[])>
<android.webkit.WebSettings: void setSavePassword(boolean)>
<android.view.Display: void getRealMetrics(DisplayMetrics)>
<android.telephony.PhoneStateListener: void onDataActivationStateChanged(int)>
<android.app.Activity: void showDialog(int)>
<com.android.location.provider.LocationProviderBase: void onDump(FileDescriptor,PrintWriter,String[])>
<android.view.WindowInsets: Rect getSystemWindowInsetsAsRect()>
<android.webkit.WebView: void setCertificate(SslCertificate)>
<android.app.Activity: Dialog onCreateDialog(int)>
<android.telephony.TelephonyManager: void setVoicemailVibrationEnabled(PhoneAccountHandle,boolean)>
<android.app.Activity: void removeDialog(int)>
<android.media.tv.TvInputInfo: TvInputInfo createTvInputInfo(Context,ResolveInfo,HdmiDeviceInfo,String,int,Icon)>
<com.android.server.pm.parsing.pkg.PkgPackageInfo: String getSharedUserId()>
<android.app.job.JobInfo.Builder: Builder setImportantWhileForeground(boolean)>
<android.media.MediaDrm: void releaseAllSecureStops()>
<android.provider.Contacts.Presence: int getPresenceIconResourceId(int)>
<android.media.AudioManager: void addOnPreferredDeviceForStrategyChangedListener(Executor,OnPreferredDeviceForStrategyChangedListener)>
<android.view.WindowInsets: WindowInsets consumeDisplayCutout()>
<android.location.GnssNavigationMessage.Callback: void onStatusChanged(int)>
<android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(String)>
<android.util.RecurrenceRule: boolean isMonthly()>
<android.util.AtomicFile: FileOutputStream startWrite(long)>
<android.location.LocationRequest: long getExpireIn()>
<android.util.TypedValue: float complexToDimensionNoisy(int,DisplayMetrics)>
<android.text.style.SuggestionSpan: String getLocale()>
<android.webkit.CacheManager: CacheResult getCacheFile(String,Map<String, String>)>
<androidx.media.filterfw.CameraStreamer.CameraRunnable: Camera getCamera()>
<android.content.ContextWrapper: void clearWallpaper()>
<android.webkit.Plugin: String toString()>
<android.telephony.PhoneNumberUtils: void ttsSpanAsPhoneNumber(Spannable,int,int)>
<android.app.Notification.InboxStyle: void <init>(Builder)>
<android.database.sqlite.SQLiteCursor: void <init>(SQLiteDatabase,SQLiteCursorDriver,String,SQLiteQuery)>
<android.content.pm.permission.SplitPermissionInfoParcelable: void __metadata()>
<com.android.codegentest.ParcelAllTheThingsDataClass: void __metadata()>
<com.android.location.provider.LocationProviderBase: void setAdditionalProviderPackages(List<String>)>
<android.app.ActionBar: void setNavigationMode(int)>
<android.os.Debug: int getGlobalClassInitTime()>
<android.app.admin.DevicePolicyManager: String getCertInstallerPackage(ComponentName)>
<com.android.internal.app.SimpleIconFactory: void <init>(Context,int,int,int)>
<android.telephony.TelephonyManager: void setSimPowerStateForSlot(int,int)>
<junit.runner.BaseTestRunner: boolean inVAJava()>
<android.app.usage.StorageStatsManager: boolean isQuotaSupported(String)>
<android.app.PendingIntent: String getTargetPackage()>
<android.view.inputmethod.InputMethodManager: void setInputMethodAndSubtype(IBinder,String,InputMethodSubtype)>
<android.app.AppOpsManager: IBinder getToken(IAppOpsService)>
<com.android.internal.widget.RecyclerView: int getChildPosition(View)>
<android.content.om.OverlayableInfo: void __metadata()>
<android.view.InputMonitor: void __metadata()>
<android.telephony.TelephonyManager: boolean getDataEnabled()>
<android.preference.PreferenceActivity: void addPreferencesFromIntent(Intent)>
<com.android.internal.security.VerityUtils: SetupResult generateApkVeritySetupData(String)>
<android.app.Notification.WearableExtender: boolean getHintAmbientBigPicture()>
<com.android.server.testutils.OffsettableClock: long getAsLong()>
<com.android.server.am.ActivityManagerService: void removeContentProviderExternal(String,IBinder)>
<android.app.backup.BackupManager: String selectBackupTransport(String)>
<android.location.LocationRequest: LocationRequest createFromDeprecatedCriteria(Criteria,long,float,boolean)>
<android.drm.DrmSupportInfo: String getDescriprition()>
<android.telecom.Phone.Listener: void onAudioStateChanged(Phone,AudioState)>
<com.android.internal.app.SimpleIconFactory: SimpleIconFactory obtain(Context)>
<android.renderscript.ProgramFragmentFixedFunction.InternalBuilder: void <init>(RenderScript)>
<android.content.Context: void setWallpaper(InputStream)>
<android.webkit.WebSettings: void setPluginState(PluginState)>
<com.android.server.wm.WindowState: boolean hasDrawn()>
<android.telephony.SignalStrength: int getEvdoSnr()>
<android.media.MediaScanner.MyMediaScannerClient: FileEntry beginFile(String,String,long,long,boolean,boolean)>
<android.preference.PreferenceActivity: void addPreferencesFromResource(int)>
<android.os.UserManager: int getUserRestrictionSource(String,UserHandle)>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNonLetter(ComponentName)>
<android.view.WindowInsets: WindowInsets replaceSystemWindowInsets(Rect)>
<android.webkit.WebView: boolean restorePicture(Bundle,File)>
<android.content.res.ColorStateList: ColorStateList createFromXml(Resources,XmlPullParser)>
<android.view.ViewParent: void invalidateChild(View,Rect)>
<android.telecom.Conference: void setConnectionStartElapsedRealTime(long)>
<android.hardware.radio.RadioTuner.Callback: void onError(int)>
<android.drm.DrmStore.Playback: void <init>()>
<android.app.ContextImpl: Drawable getWallpaper()>
<android.database.sqlite.SQLiteDatabase: boolean yieldIfContended()>
<com.android.internal.util.XmlUtils: void writeBitmapAttribute(XmlSerializer,String,Bitmap)>
<android.graphics.ColorFilter: void <init>()>
<android.app.Activity: void onPictureInPictureModeChanged(boolean)>
<android.renderscript.ProgramRaster.Builder: Builder setCullMode(CullMode)>
<android.renderscript.RSSurfaceView: void surfaceCreated(SurfaceHolder)>
<android.telephony.TelephonyManager: void setVisualVoicemailEnabled(PhoneAccountHandle,boolean)>
<android.app.Activity: void startManagingCursor(Cursor)>
<android.renderscript.Mesh.TriangleMeshBuilder: TriangleMeshBuilder setTexture(float,float)>
<android.location.LocationManager: void requestSingleUpdate(Criteria,PendingIntent)>
<android.content.pm.PackageManager: String[] setPackagesSuspended(String[],boolean,PersistableBundle,PersistableBundle,String)>
<com.android.server.locksettings.recoverablekeystore.RecoverableKeyStoreManager: String importKey(String,byte[])>
<android.app.Fragment: void onPictureInPictureModeChanged(boolean)>
<android.telephony.PreciseDataConnectionState: int getDataConnectionApnTypeBitMask()>
<android.webkit.WebView: void disablePlatformNotifications()>
<android.app.Fragment: void performPictureInPictureModeChanged(boolean)>
<android.database.CursorWindow: boolean isNull(int,int)>
<android.os.UserManager: boolean setRestrictionsChallenge(String)>
<android.telephony.SignalStrength: void fillInNotifierBundle(Bundle)>
<android.view.WindowInsets: int getStableInsetLeft()>
<android.renderscript.FileA3D: FileA3D createFromFile(RenderScript,File)>
<android.test.mock.MockContentResolver: void notifyChange(Uri,ContentObserver,boolean)>
<android.content.pm.PermissionGroupInfo: void <init>()>
<com.android.ims.internal.uce.common.CapInfo: void setSmSupported(boolean)>
<android.os.Debug: void stopAllocCounting()>
<android.view.WindowInsets: int getStableInsetBottom()>
<android.app.AppOpsManager: void finishOp(String,int,String)>
<android.util.proto.ProtoOutputStream: void writePackedInt64(long,long[])>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void toggleSoftInput(int,int)>
<android.location.LocationManager: void requestLocationUpdates(LocationRequest,LocationListener,Looper)>
<android.hardware.location.ContextHubManager: ContextHubInfo getContextHubInfo(int)>
<android.telephony.ims.stub.ImsSmsImplBase: void onSmsStatusReportReceived(int,int,String,byte[])>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLength(ComponentName)>
<android.view.Display: int getOrientation()>
<com.android.server.net.NetworkStatsCollection: void readLegacyNetwork(File)>
<android.view.PrivacyIndicatorBounds: void __metadata()>
<com.android.codegentest.SampleWithNestedDataClasses.NestedDataClass2: void __metadata()>
<android.location.LocationManager: boolean isProviderPackage(String)>
<android.media.SoundPool: void <init>(int,int,int)>
<android.location.GnssMeasurement: void resetCarrierPhase()>
<android.app.Notification.Action.WearableExtender: WearableExtender setConfirmLabel(CharSequence)>
<android.telephony.euicc.EuiccManager: void eraseSubscriptions(PendingIntent)>
<android.media.MediaRecorder: void setAuxiliaryOutputFile(FileDescriptor)>
<android.app.Activity: void startActivityFromChild(Activity,Intent,int)>
<android.telephony.ims.ImsSsInfo: String getIcbNum()>
<android.hardware.camera2.CameraDevice: void createCaptureSessionByOutputConfigurations(List<OutputConfiguration>,StateCallback,Handler)>
<android.location.Location: void setIsFromMockProvider(boolean)>
<android.renderscript.FileA3D.IndexEntry: Mesh getMesh()>
<android.media.MediaScanner: Uri scanSingleFile(String,String)>
<com.android.settingslib.NetworkPolicyEditor: void setPolicyCycleDay(NetworkTemplate,int,String)>
<android.content.res.Resources: Drawable getDrawableForDensity(int,int)>
<android.renderscript.ProgramFragment.Builder: void <init>(RenderScript)>
<android.os.Debug: int getThreadExternalAllocSize()>
<com.android.codegentest.HierrarchicalDataClassBase: void __metadata()>
<android.content.ContentProviderClient: boolean release()>
<android.provider.Settings.System: void setShowGTalkServiceStatusForUser(ContentResolver,boolean,int)>
<android.content.pm.PackageInstaller.Session: void setProgress(float)>
<android.app.admin.DeviceAdminReceiver: void onPasswordFailed(Context,Intent)>
<android.view.WindowInsets: Insets getSystemWindowInsets()>
<android.app.AlertDialog: void setButton(CharSequence,Message)>
<android.os.WorkSource: int get(int)>
<android.view.translation.TranslationResponse: void __metadata()>
<android.content.ContentValues: void putStringArrayList(String,ArrayList<String>)>
<android.location.LocationManager: boolean registerGnssNavigationMessageCallback(Callback)>
<android.content.ContentValues: void <init>(HashMap<String, Object>)>
<com.android.ims.internal.uce.common.CapInfo: boolean isFtThumbSupported()>
<android.text.format.Formatter: String formatIpAddress(int)>
<android.app.usage.StorageStatsManager: long getFreeBytes(String)>
<android.webkit.Plugin: String getName()>
<android.telephony.SignalStrength: int getGsmDbm()>
<android.telephony.PhoneNumberUtils: String calledPartyBCDToString(byte[],int,int)>
<android.text.StaticLayout: void <init>(CharSequence,int,int,TextPaint,int,Alignment,float,float,boolean)>
<android.test.mock.MockPackageManager: boolean setDefaultBrowserPackageName(String,int)>
<android.app.ActivityManagerNative: boolean isSystemReady()>
<android.webkit.Plugin: String getPath()>
<android.view.WindowInsets: WindowInsets replaceSystemWindowInsets(int,int,int,int)>
<com.android.internal.logging.MetricsLogger: void action(LogMaker)>
<android.hardware.location.ContextHubManager: int sendMessage(int,int,ContextHubMessage)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onScreenTurnedOn()>
<android.view.ScrollCaptureResponse: void __metadata()>
<android.view.accessibility.AccessibilityNodeInfo: void removeAction(int)>
<android.telephony.PhoneStateListener: void onVoiceActivationStateChanged(int)>
<android.os.PowerWhitelistManager: int[] getWhitelistedAppIds(boolean)>
<android.text.FontConfig.Font: boolean isItalic()>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumNonLetter(ComponentName,int)>
<android.location.GnssMeasurement: boolean hasCarrierPhase()>
<com.android.server.pm.SettingBase: LegacyPermissionState getLegacyPermissionState()>
<android.widget.espresso.DragHandleUtils: void assertNoSelectionHandles()>
<android.renderscript.RenderScriptGL: void <init>(Context,SurfaceConfig)>
<android.util.NtpTrustedTime: long getCachedNtpTimeReference()>
<com.android.systemui.plugins.qs.QSTile: void clearState()>
<com.android.systemui.Dependency: T get(Class<T>)>
<android.bluetooth.BluetoothHealthAppConfiguration: int getRole()>
<android.app.Service: void onStart(Intent,int)>
<android.os.MemoryFile: boolean isPurgingAllowed()>
<android.media.Ringtone: void setStreamType(int)>
<android.printservice.recommendation.RecommendationInfo: void <init>(CharSequence,CharSequence,int,boolean)>
<android.app.ActionBar: void addTab(Tab)>
<com.android.internal.app.MessageSamplingConfig: void __metadata()>
<android.telephony.PhoneStateListener: void onCallForwardingIndicatorChanged(boolean)>
<android.location.LocationListener: void onStatusChanged(String,int,Bundle)>
<com.android.server.net.NetworkStatsCollection: void readLegacyUid(File,boolean)>
<android.os.FileUtils: int getUid(String)>
<android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(String,String)>
<android.view.textclassifier.TextClassification.Builder: Builder setIntent(Intent)>
<android.app.ActivityManager: void restartPackage(String)>
<com.android.systemui.statusbar.phone.UserAvatarView: void setBitmap(Bitmap)>
<android.graphics.Picture: void writeToStream(OutputStream)>
<android.util.proto.ProtoOutputStream: void writeFixed64(long,long)>
<android.telecom.TelecomManager: boolean endCall()>
<android.app.Notification.WearableExtender: WearableExtender setContentIcon(int)>
<android.app.ContextImpl: void setWallpaper(Bitmap)>
<android.os.PowerWhitelistManager: long whitelistAppTemporarilyForEvent(String,int,String)>
<android.widget.CursorAdapter: void init(Context,Cursor,boolean)>
<android.content.pm.verify.domain.DomainVerificationUserState: void __metadata()>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumUpperCase(ComponentName,int)>
<android.widget.DatePicker: boolean getSpinnersShown()>
<android.view.View: void setWillNotCacheDrawing(boolean)>
<android.webkit.WebSettings: void setAppCacheEnabled(boolean)>
<android.net.Proxy: void setHttpProxySystemProperty(ProxyInfo)>
<android.media.AudioManager: void registerMediaButtonEventReceiver(ComponentName)>
<com.android.systemui.statusbar.notification.collection.notifcollection.NotifCollectionListener: void onRankingUpdate(RankingMap)>
<android.telephony.TelephonyManager: IccOpenLogicalChannelResponse iccOpenLogicalChannel(int,String,int)>
<android.view.View: boolean isDrawingCacheEnabled()>
<android.net.http.SslCertificate: void <init>(String,String,String,String)>
<android.app.AppOpsManager: List<PackageOps> getOpsForPackage(int,String,int[])>
<android.content.ContentProvider: String getCallingFeatureId()>
<android.content.pm.PackageManager: List<PackageInfo> getPreferredPackages(int)>
<android.webkit.UrlInterceptHandler: CacheResult service(String,Map<String, String>)>
<android.renderscript.RenderScriptGL: void bindProgramRaster(ProgramRaster)>
<android.app.Notification.WearableExtender: WearableExtender addPage(Notification)>
<android.drm.DrmStore.Action: void <init>()>
<android.content.pm.PackageManager: List<ResolveInfo> queryBroadcastReceivers(Intent,int,int)>
<android.os.MemoryFile: boolean allowPurging(boolean)>
<android.telephony.CellIdentityWcdma: int getMnc()>
<android.hardware.usb.UsbManager: boolean isFunctionEnabled(String)>
<android.telephony.data.DataProfile.Builder: Builder setMtu(int)>
<android.app.ContextImpl: void sendStickyBroadcastAsUser(Intent,UserHandle,Bundle)>
<android.webkit.Plugin: void setClickHandler(PreferencesClickHandler)>
<android.view.ViewTreeObserver: void removeGlobalOnLayoutListener(OnGlobalLayoutListener)>
<android.app.ActivityManagerNative: IActivityManager asInterface(IBinder)>
<com.android.systemui.shared.system.ActivityManagerWrapper: void registerTaskStackListener(TaskStackChangeListener)>
<android.opengl.EGLObjectHandle: void <init>(int)>
<com.android.internal.util.AnnotationValidations: void validate(Class<? extends Annotation>,Annotation,Object,Object)>
<android.text.method.DateKeyListener: void <init>()>
<android.inputmethodservice.InputMethodService: int getInputMethodWindowRecommendedHeight()>
<android.telephony.TelephonyManager: void setSimPowerState(int)>
<android.security.KeyPairGeneratorSpec: boolean isEncryptionRequired()>
<android.os.Debug: int getGlobalFreedSize()>
<android.location.LocationManager: boolean registerGnssMeasurementsCallback(Callback)>
<com.android.server.net.NetworkPolicyManagerService: long getTotalBytes(NetworkTemplate,long,long)>
<android.telephony.TelephonyManager: NetworkScan requestNetworkScan(NetworkScanRequest,NetworkScanCallback)>
<android.telephony.TelephonyManager: int getCallState()>
<android.view.textclassifier.TextClassification: OnClickListener getOnClickListener()>
<android.telephony.PhoneStateListener: void onOutgoingEmergencySms(EmergencyNumber)>
<android.content.ContextWrapper: Drawable peekWallpaper()>
<android.app.Notification.WearableExtender: int getHintScreenTimeout()>
<android.app.Activity: void startActivityFromChild(Activity,Intent,int,Bundle)>
<com.android.ims.internal.uce.common.CapInfo: void setIpVoiceSupported(boolean)>
<android.app.Activity: void finishFromChild(Activity)>
<android.test.TouchUtils: int dragViewToX(ActivityInstrumentationTestCase,View,int,int)>
<android.renderscript.ProgramVertexFixedFunction.Constants: void <init>(RenderScript)>
<android.app.InstantAppResolverService: void onGetInstantAppResolveInfo(Intent,int[],UserHandle,String,InstantAppResolutionCallback)>
<android.app.Notification.Builder: Builder setContentInfo(CharSequence)>
<android.view.translation.UiTranslationManager: void startTranslation(TranslationSpec,TranslationSpec,List<AutofillId>,ActivityId)>
<android.telephony.TelephonyManager: boolean iccCloseLogicalChannel(int,int)>
<com.android.server.pm.parsing.pkg.PackageImpl: String toAppInfoToString()>
<android.telephony.SignalStrength: int getLteRsrp()>
<android.graphics.drawable.BitmapDrawable: void <init>(Bitmap)>
<android.location.LocationManager: boolean registerGnssStatusCallback(Callback)>
<android.telephony.PhoneNumberUtils: void formatNumber(Editable,int)>
<android.content.ContextWrapper: void sendStickyOrderedBroadcast(Intent,BroadcastReceiver,Handler,int,String,Bundle)>
<android.telephony.SignalStrength: int getLteAsuLevel()>
<android.graphics.Picture: Picture createFromStream(InputStream)>
<android.view.ViewGroup: void dispatchWindowSystemUiVisiblityChanged(int)>
<android.content.pm.ShortcutInfo.Builder: Builder setId(String)>
<android.service.autofill.FillEventHistory: Bundle getClientState()>
<android.view.ViewConfiguration: int getMaximumDrawingCacheSize()>
<android.webkit.WebViewClient: void onTooManyRedirects(WebView,Message,Message)>
<android.widget.Magnifier: void <init>(View)>
<android.graphics.Canvas: boolean clipRect(Rect,Op)>
<android.view.inputmethod.InlineSuggestionsResponse: void __metadata()>
<android.content.pm.PackageManager: String getInstallerPackageName(String)>
<android.service.trust.TrustAgentService: void grantTrust(CharSequence,long,boolean)>
<android.renderscript.ProgramFragmentFixedFunction.Builder: Builder setTexture(EnvMode,Format,int)>
<android.telephony.PhoneNumberUtils: boolean isPotentialLocalEmergencyNumber(Context,String)>
<android.database.CursorWindow: void <init>(boolean)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void freeContentViewWhenSafe(int)>
<android.location.LocationRequest: LocationRequest setFastestInterval(long)>
<android.content.pm.parsing.ParsingPackageImpl: ApplicationInfo toAppInfoWithoutState()>
<android.renderscript.Mesh.Builder: Mesh create()>
<android.telephony.TelephonyManager: void listen(PhoneStateListener,int)>
<android.app.ContextImpl: void sendStickyBroadcast(Intent)>
<android.app.Notification.WearableExtender: WearableExtender setHintScreenTimeout(int)>
<android.text.method.TimeKeyListener: TimeKeyListener getInstance()>
<android.webkit.WebViewDatabase: void clearFormData()>
<android.telephony.SubscriptionManager: SubscriptionManager from(Context)>
<android.app.Notification.WearableExtender: WearableExtender addPages(List<Notification>)>
<android.os.PowerWhitelistManager: void addToWhitelist(List<String>)>
<android.media.AudioRecord: void addOnRoutingChangedListener(OnRoutingChangedListener,Handler)>
<android.app.Activity: void dismissDialog(int)>
<android.view.translation.TranslationRequestValue: void __metadata()>
<android.app.Notification.MessagingStyle: CharSequence getUserDisplayName()>
<android.os.Debug: int getGlobalAllocSize()>
<android.content.pm.ShortcutInfo.Builder: Builder setShortLabelResId(int)>
<android.telephony.TelephonyManager: int invokeOemRilRequestRaw(byte[],byte[])>
<android.media.tv.tuner.dvr.DvrPlayback: int attachFilter(Filter)>
<com.android.ims.internal.uce.common.CapInfo: boolean isChatbotRoleSupported()>
<com.android.uiautomator.testrunner.UiAutomatorTestCase: IAutomationSupport getAutomationSupport()>
<android.media.AudioManager: boolean isWiredHeadsetOn()>
<android.hardware.radio.RadioTuner: ProgramInfo> getProgramList(Map<String, String>)>
<android.hardware.soundtrigger.SoundTrigger: SoundTriggerModule attachModule(int,StatusListener,Handler)>
<android.media.session.MediaSession: void setMediaButtonReceiver(PendingIntent)>
<android.telephony.PhoneNumberUtils: boolean isLocalEmergencyNumber(Context,int,String)>
<android.location.LocationManager: boolean addNmeaListener(OnNmeaMessageListener)>
<android.graphics.Canvas: void drawBitmap(int[],int,int,float,float,int,int,boolean,Paint)>
<android.app.AppOpsManager: int noteOpNoThrow(int,int,String)>
<android.app.RuntimeAppOpAccessMessage: void __metadata()>
<android.telephony.TelephonyManager: TelephonyManager getDefault()>
<android.telephony.SubscriptionPlan.Builder: Builder createRecurringMonthly(ZonedDateTime)>
<com.android.ims.internal.uce.common.CapInfo: void setFtSupported(boolean)>
<android.renderscript.RSSurfaceView: void pause()>
<android.speech.tts.TextToSpeech: Set<String> getFeatures(Locale)>
<com.android.server.am.ActivityManagerService: int startActivityAsUser(IApplicationThread,String,Intent,String,IBinder,String,int,int,ProfilerInfo,Bundle,int)>
<android.window.SizeConfigurationBuckets: void __metadata()>
<android.net.vcn.VcnGatewayConnectionConfig: Set<Integer> getAllExposedCapabilities()>
<android.media.AudioManager: int getRouting(int)>
<android.widget.Toast: void setView(View)>
<android.app.AlertDialog: void setButton(CharSequence,OnClickListener)>
<com.android.ims.internal.uce.common.CapInfo: void setGeoPullSupported(boolean)>
<com.android.location.provider.LocationProviderBase: void <init>(String,ProviderPropertiesUnbundled)>
<android.media.AudioManager: void unregisterMediaButtonEventReceiver(ComponentName)>
<android.renderscript.RSTextureView: void resume()>
<android.hardware.radio.RadioTuner.Callback: void onMetadataChanged(RadioMetadata)>
<android.app.AlertDialog: void setButton2(CharSequence,Message)>
<android.content.Context: void removeStickyBroadcast(Intent)>
<android.net.TrafficStats: long getUidTcpTxBytes(int)>
<android.util.proto.ProtoOutputStream: void writeRepeatedBytes(long,byte[])>
<android.security.keystore.recovery.RecoveryController: Key generateKey(String)>
<android.service.rotationresolver.RotationResolutionRequest: void __metadata()>
<android.database.ContentObservable: void notifyChange(boolean)>
<android.view.WindowInsets: WindowInsets consumeStableInsets()>
<android.app.AlertDialog.Builder: Builder setView(View,int,int,int,int)>
<android.webkit.WebChromeClient: void onConsoleMessage(String,int,String)>
<android.graphics.Canvas: void drawPosText(char[],int,int,float[],Paint)>
<android.app.InstantAppResolverService: void onGetInstantAppIntentFilter(int[],String,InstantAppResolutionCallback)>
<android.view.Display: int getPixelFormat()>
<android.view.animation.Animation: void setBackgroundColor(int)>
<android.service.voice.HotwordRejectedResult: void __metadata()>
<com.android.ims.internal.uce.common.CapInfo: boolean isImSupported()>
<android.media.MediaScanner: boolean isDrmEnabled()>
<android.provider.Settings.Secure: void setLocationProviderEnabled(ContentResolver,String,boolean)>
<android.app.admin.DevicePolicyManager: int getOrganizationColor(ComponentName)>
<android.webkit.PluginList: void <init>()>
<android.os.storage.StorageManager: String getVolumeState(String)>
<android.util.AtomicFile: FileOutputStream openAppend()>
<android.app.Notification.Builder: Builder addPerson(String)>
<android.app.Notification.WearableExtender: WearableExtender setCustomSizePreset(int)>
<android.drm.DrmManagerClient: void release()>
<android.hardware.radio.RadioMetadata: Bitmap getBitmap(String)>
<android.renderscript.RenderScriptGL: void bindRootScript(Script)>
<android.app.ActionBar: void addTab(Tab,int)>
<android.hardware.location.ContextHubManager: int registerCallback(Callback,Handler)>
<android.util.proto.ProtoOutputStream: void writeSFixed64(long,long)>
<android.hardware.camera2.TotalCaptureResult: Map<String, CaptureResult> getPhysicalCameraResults()>
<android.webkit.WebSettings: TextSize getTextSize()>
<android.app.Notification.Builder: Builder setContent(RemoteViews)>
<android.os.FileObserver: void <init>(String,int)>
<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>
<android.database.CursorWindow: boolean isFloat(int,int)>
<android.telephony.SubscriptionPlan.Builder: Builder createRecurringDaily(ZonedDateTime)>
<android.net.TrafficStats: long getUidUdpRxBytes(int)>
<android.app.Fragment: void onInflate(Activity,AttributeSet,Bundle)>
<android.app.Notification.WearableExtender: List<Notification> getPages()>
<android.view.contentcapture.DataShareRequest: void __metadata()>
<android.renderscript.FileA3D: FileA3D createFromFile(RenderScript,String)>
<android.widget.PopupWindow: void setWindowLayoutMode(int,int)>
<android.view.KeyEvent: boolean isDown()>
<android.os.FileUtils: boolean copyFile(File,File)>
<android.media.AudioManager: void setVibrateSetting(int,int)>
<android.bluetooth.BluetoothHeadset: boolean setPriority(BluetoothDevice,int)>
<android.telephony.SignalStrength: int getLteRsrq()>
<android.webkit.WebView: void debugDump()>
<android.graphics.drawable.Drawable: Drawable createFromResourceStream(Resources,TypedValue,InputStream,String,Options)>
<android.view.GestureDetector: void <init>(OnGestureListener,Handler)>
<android.renderscript.RSSurfaceView: void destroyRenderScriptGL()>
<android.telephony.PhoneStateListener: void onEmergencyNumberListChanged(Map<Integer, List<EmergencyNumber>>)>
<android.app.ActionBar: void setSelectedNavigationItem(int)>
<android.app.prediction.AppTarget.Builder: void <init>(AppTargetId)>
<android.media.AudioManager: int abandonAudioFocus(OnAudioFocusChangeListener)>
<android.graphics.Typeface: Typeface createFromFamilies(FontFamily[])>
<android.media.AudioManager: void setBluetoothA2dpOn(boolean)>
<android.telephony.TelephonyManager: boolean setAllowedNetworkTypes(long)>
<android.accessibilityservice.AccessibilityService: boolean onGesture(int)>
<android.app.ActionBar: Tab getSelectedTab()>
<android.app.Notification.WearableExtender: PendingIntent getDisplayIntent()>
<android.webkit.PluginList: List getList()>
<android.telephony.PhoneStateListener: void onPreciseDataConnectionStateChanged(PreciseDataConnectionState)>
<android.util.proto.ProtoOutputStream: long startRepeatedObject(long)>
<android.renderscript.ProgramVertex.Builder: Builder addInput(Element)>
<android.app.AppOpsManager: int noteOp(String,int,String)>
<android.app.Notification.WearableExtender: int getContentIcon()>
<android.provider.Contacts.ContactMethods: Object decodeImProtocol(String)>
<android.view.ViewConfiguration: void <init>()>
<android.inputmethodservice.InputMethodService: boolean enableHardwareAcceleration()>
<android.webkit.WebSettings: boolean getSavePassword()>
<android.os.ParcelFileDescriptor: ParcelFileDescriptor fromData(byte[],String)>
<android.provider.ContactsContract.RawContacts.StreamItems: void <init>()>
<android.location.GnssMeasurement: void resetCarrierPhaseUncertainty()>
<android.os.Process: boolean supportsProcesses()>
<android.content.IContentProvider: Uri insert(String,Uri,ContentValues)>
<com.android.ims.internal.uce.common.CapInfo: boolean isSmChatbotSupported()>
<android.app.TaskStackListener: void onActivityLaunchOnSecondaryDisplayFailed()>
<android.graphics.Canvas: void drawPosText(String,float[],Paint)>
<com.android.server.am.ActivityManagerService: int broadcastIntent(IApplicationThread,Intent,String,IIntentReceiver,int,String,Bundle,String[],int,Bundle,boolean,boolean,int)>
<android.telephony.TelephonyManager: boolean isVideoCallingEnabled()>
<android.app.usage.UsageStatsManager: void whitelistAppTemporarily(String,long,UserHandle)>
<android.view.View: void invalidate(Rect)>
<android.location.LocationManager: LocationProvider getProvider(String)>
<com.android.location.provider.LocationProviderBase: void setEnabled(boolean)>
<android.telephony.PreciseDataConnectionState: void <init>(int,int,int,String,LinkProperties,int)>
<android.text.DynamicLayout: void <init>(CharSequence,TextPaint,int,Alignment,float,float,boolean)>
<android.telephony.ims.RegistrationManager.RegistrationCallback: void onRegistered(int)>
<android.view.WindowInsets: Insets getMandatorySystemGestureInsets()>
<android.telecom.TelecomManager: PhoneAccountHandle getSimCallManager(int)>
<android.app.Notification.Builder: Builder setSound(Uri)>
<android.database.CursorWrapper: void deactivate()>
<android.provider.ContactsContract.Contacts.StreamItems: void <init>()>
<android.telephony.PhoneStateListener: void onSignalStrengthChanged(int)>
<android.telecom.Call: int getState()>
<android.content.pm.LauncherApps: int getShortcutIconResId(ShortcutInfo)>
<android.location.LocationRequest: LocationRequest setLocationSettingsIgnored(boolean)>
<android.service.translation.TranslationService: void onCreateTranslationSession(TranslationContext,int)>
<com.android.settingslib.NetworkPolicyEditor: NetworkPolicy buildDefaultPolicy(NetworkTemplate)>
<android.view.WindowInsets: int getSystemWindowInsetBottom()>
<android.util.proto.ProtoOutputStream: void writePackedSInt32(long,int[])>
<android.renderscript.Mesh: Allocation getIndexSetAllocation(int)>
<com.android.server.am.ActivityManagerService: Intent registerReceiver(IApplicationThread,String,IIntentReceiver,IntentFilter,String,int,int)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onStartedGoingToSleep(int)>
<android.app.ActivityManagerNative: IActivityManager getDefault()>
<android.renderscript.Mesh.AllocationBuilder: AllocationBuilder addVertexAllocation(Allocation)>
<android.hardware.hdmi.HdmiControlManager: List<HdmiDeviceInfo> getConnectedDevicesList()>
<android.webkit.WebSettings: void setUserAgent(int)>
<android.graphics.BaseRecordingCanvas: void drawPosText(String,float[],Paint)>
<com.android.ims.internal.uce.common.CapInfo: boolean isGeoPushSupported()>
<android.content.Intent: Object getExtra(String,Object)>
<android.service.displayhash.DisplayHashParams: void __metadata()>
<android.media.AudioManager: void setStreamSolo(int,boolean)>
<android.app.ActivityManager.TaskDescription: Bitmap getIcon()>
<com.android.internal.logging.MetricsLogger: void action(Context,int)>
<android.view.VerifiedKeyEvent: void __metadata()>
<android.widget.OverScroller: void <init>(Context,Interpolator,float,float,boolean)>
<com.android.server.pm.parsing.pkg.AndroidPackage: String toAppInfoToString()>
<android.content.pm.PackageInstaller.SessionInfo: boolean isOpen()>
<android.app.admin.DevicePolicyManager: void clearDeviceOwnerApp(String)>
<android.os.Environment: String getStorageState(File)>
<android.view.KeyEvent: boolean getKeyData(KeyData)>
<android.provider.Browser: String[] getVisitedHistory(ContentResolver)>
<android.telephony.SubscriptionPlan.Builder: Builder createRecurringWeekly(ZonedDateTime)>
<android.speech.tts.TextToSpeech: Locale getDefaultLanguage()>
<com.android.ims.internal.uce.common.CapInfo: void setGeoPushSupported(boolean)>
<android.renderscript.Mesh.Builder: Builder addVertexType(Type)>
<android.app.ActivityManager: List<RunningServiceInfo> getRunningServices(int)>
<android.telephony.ServiceState: void <init>(Parcel)>
<android.media.tv.TvInputInfo: TvInputInfo createTvInputInfo(Context,ResolveInfo,HdmiDeviceInfo,String,String,Uri)>
<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>
<android.app.KeyguardManager: boolean inKeyguardRestrictedInputMode()>
<android.widget.CalendarView: int getShownWeekCount()>
<android.view.displayhash.VerifiedDisplayHash: void __metadata()>
<com.android.ims.internal.uce.common.CapInfo: boolean isMmtelCallComposerSupported()>
<android.app.admin.DevicePolicyManager: int setStorageEncryption(ComponentName,boolean)>
<android.location.LocationRequest: void setHideFromAppOps(boolean)>
<android.os.Debug: int setGlobalAllocationLimit(int)>
<android.renderscript.ScriptGroup: void setInput(KernelID,Allocation)>
<android.view.Display: void getRealSize(Point)>
<android.util.proto.ProtoOutputStream: void writePackedUInt64(long,long[])>
<android.telephony.SubscriptionInfo: boolean canManageSubscription(Context,String)>
<android.app.Instrumentation: void startAllocCounting()>
<com.android.server.pm.PackageSettingBase: SparseArray<PackageUserState> getUserState()>
<android.test.TouchUtils: void longClickView(ActivityInstrumentationTestCase,View)>
<com.android.internal.logging.MetricsLogger: void action(Context,int,String)>
<android.database.sqlite.SQLiteDatabase.OpenParams.Builder: Builder setIdleConnectionTimeout(long)>
<android.media.AudioRecord: void removeOnRoutingChangedListener(OnRoutingChangedListener)>
<android.telephony.PhoneNumberUtils: String calledPartyBCDFragmentToString(byte[],int,int)>
<android.test.TouchUtils: void dragQuarterScreenUp(ActivityInstrumentationTestCase)>
<android.hardware.usb.UsbManager: void setCurrentFunction(String,boolean)>
<com.android.systemui.shared.system.LatencyTrackerCompat: void logToggleRecents(int)>
<android.graphics.drawable.AnimatedImageDrawable: void setLoopCount(int)>
<android.test.TouchUtils: void dragViewToBottom(ActivityInstrumentationTestCase,View)>
<android.webkit.WebSettings: boolean getUseWebViewBackgroundForOverscrollBackground()>
<android.app.AppOpsManager: int noteProxyOp(int,String)>
<android.app.backup.BackupTransport: String dataManagementLabel()>
<android.os.Debug: void resetGlobalExternalFreedSize()>
<android.content.pm.InstantAppRequestInfo: void __metadata()>
<com.android.server.net.IpConfigStore: SparseArray<IpConfiguration> readIpAndProxyConfigurations(InputStream)>
<android.telecom.TelecomManager: void acceptRingingCall(int)>
<android.renderscript.RSSurfaceView: RenderScriptGL getRenderScriptGL()>
<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInParent(Rect)>
<android.text.TextUtils: CharSequence getReverse(CharSequence,int,int)>
<android.database.sqlite.SQLiteClosable: void releaseReferenceFromContainer()>
<android.content.pm.ShortcutInfo.Builder: Builder setText(CharSequence)>
<android.content.Context: void sendStickyBroadcast(Intent)>
<android.media.MediaRecorder: void setCamera(Camera)>
<android.content.ContentValues: ArrayList<String> getStringArrayList(String)>
<android.widget.DatePicker: CalendarView getCalendarView()>
<android.bluetooth.BluetoothHealth: boolean registerSinkAppConfiguration(String,int,BluetoothHealthCallback)>
<android.media.tv.tuner.dvr.DvrPlayback: int detachFilter(Filter)>
<com.android.internal.widget.RecyclerView.ItemDecoration: void onDrawOver(Canvas,RecyclerView)>
<android.net.http.SslCertificate: String getValidNotBefore()>
<android.hardware.SensorManager: void unregisterListener(SensorListener,int)>
<android.provider.Contacts.People: InputStream openContactPhotoInputStream(ContentResolver,Uri)>
<android.location.Location: void removeSpeedAccuracy()>
<android.view.translation.TranslationSpec: void __metadata()>
<android.location.GnssMeasurement: double getCarrierPhase()>
<android.app.Notification.Builder: Builder addAction(int,CharSequence,PendingIntent)>
<android.telephony.PhoneStateListener: void onDataConnectionStateChanged(int)>
<android.service.autofill.ImageTransformation.Builder: void <init>(AutofillId,Pattern,int)>
<android.location.LocationRequest: LocationRequest create()>
<android.graphics.Canvas: Matrix getMatrix()>
<android.os.Debug: void resetAllCounts()>
<android.telecom.Conference: long getConnectTimeMillis()>
<android.renderscript.ProgramVertexFixedFunction.Constants: void setModelview(Matrix4f)>
<com.android.ims.internal.uce.common.CapInfo: void setSmChatbotSupported(boolean)>
<android.os.storage.StorageManager: boolean isUsbMassStorageConnected()>
<android.telephony.CellIdentityGsm: int getMnc()>
<android.content.pm.LauncherApps: List<ShortcutInfo> getShortcutInfo(String,List<String>,UserHandle)>
<android.app.AppOpsManager: int noteProxyOp(String,String)>
<android.os.Debug: int getThreadAllocSize()>
<android.webkit.CacheManager: boolean startCacheTransaction()>
<android.widget.SearchView: boolean isIconfiedByDefault()>
<android.view.VerifiedMotionEvent: void __metadata()>
<android.telephony.SmsManager: SmsManager getSmsManagerForSubscriptionId(int)>
<android.os.Environment: File getProductServicesDirectory()>
<android.hardware.location.ContextHubManager: int unregisterCallback(Callback)>
<android.app.admin.DevicePolicyManager: void setOrganizationColorForUser(int,int)>
<android.renderscript.RenderScriptGL: int getHeight()>
<android.service.notification.StatusBarNotification: int getUserId()>
<android.os.StatFs: int getBlockSize()>
<android.content.Intent: Intent getIntent(String)>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNumeric(ComponentName)>
<android.app.AppOpsManager: int startOpNoThrow(int,int,String,boolean)>
<android.view.inputmethod.InputMethodManager: InputMethodManager getInstance()>
<android.text.method.DateTimeKeyListener: void <init>()>
<android.location.LocationManager: void clearTestProviderStatus(String)>
<com.android.internal.widget.PagerAdapter: Object instantiateItem(View,int)>
<android.database.AbstractWindowedCursor: boolean isLong(int)>
<android.webkit.CacheManager: boolean cacheDisabled()>
<android.telephony.TelephonyManager: String getDeviceId()>
<com.android.ims.internal.uce.common.CapInfo: void setCdViaPresenceSupported(boolean)>
<android.graphics.ImageDecoder: ImageDecoder setRequireUnpremultiplied(boolean)>
<android.telephony.ims.ImsMmTelManager: void registerImsRegistrationCallback(Executor,RegistrationCallback)>
<android.webkit.WebView.PictureListener: void onNewPicture(WebView,Picture)>
<com.android.server.pm.BaseShortcutManagerTest: ShortcutInfo makeShortcutWithTitle(String,String)>
<android.location.GnssMeasurementsEvent.Callback: void onStatusChanged(int)>
<com.android.server.am.ActivityManagerService: int startActivity(IApplicationThread,String,Intent,String,IBinder,String,int,int,ProfilerInfo,Bundle)>
<android.content.pm.PackageManager: void replacePreferredActivityAsUser(IntentFilter,int,ComponentName[],ComponentName,int)>
<android.media.MediaScanner.MyMediaScannerClient: void handleStringTag(String,String)>
<android.telephony.SmsMessage: int getStatusOnSim()>
<android.os.FileUtils: long copyInternalUserspace(FileDescriptor,FileDescriptor,ProgressListener,CancellationSignal,long)>
<android.text.format.Time: int getJulianDay(long,long)>
<com.android.ims.internal.uce.common.CapInfo: boolean isPostCallSupported()>
<android.graphics.Canvas: int save(int)>
<android.content.Context: void sendStickyOrderedBroadcastAsUser(Intent,UserHandle,BroadcastReceiver,Handler,int,String,Bundle)>
<android.telephony.data.ApnSetting: InetAddress getMmsProxyAddress()>
<android.telephony.SubscriptionInfo: int getMnc()>
<android.webkit.WebView: void clearView()>
<android.content.pm.PackageInstaller.SessionInfo: Intent getDetailsIntent()>
<android.app.ActivityManagerNative: void noteAlarmStart(PendingIntent,int,String)>
<android.graphics.ImageDecoder: ImageDecoder setAsAlphaMask(boolean)>
<android.content.pm.PackageParser.Package: void setApplicationInfoResourcePath(String)>
<android.telecom.TelecomManager: ComponentName getDefaultPhoneApp()>
<android.drm.DrmStore: void <init>()>
<android.renderscript.Mesh: int getPrimitiveCount()>
<android.os.Debug: void resetThreadGcInvocationCount()>
<android.net.SSLCertificateSocketFactory: SSLSocketFactory getHttpSocketFactory(int,SSLSessionCache)>
<android.os.PowerWhitelistManager: boolean isWhitelisted(String,boolean)>
<android.view.ViewGroup: void setChildrenDrawnWithCacheEnabled(boolean)>
<android.speech.tts.TextToSpeech: int playSilence(long,int,HashMap<String, String>)>
<android.app.Notification.Builder: Builder setTicker(CharSequence,RemoteViews)>
<android.os.FileUtils: boolean copyToFile(InputStream,File)>
<android.view.WindowInsets: boolean hasSystemWindowInsets()>
<android.view.View: void setBackgroundDrawable(Drawable)>
<android.webkit.WebHistoryItem: int getId()>
<android.webkit.CookieSyncManager: void sync()>
<android.content.IContentProvider: int delete(String,Uri,String,String[])>
<android.telephony.DataSpecificRegistrationInfo: LteVopsSupportInfo getLteVopsSupportInfo()>
<android.location.LocationManager: boolean isProviderPackage(String,String)>
<android.view.WindowInsets: WindowInsets consumeSystemWindowInsets()>
<android.speech.tts.TextToSpeech: int speak(String,int,HashMap<String, String>)>
<android.widget.CalendarView: void setUnfocusedMonthDateColor(int)>
<com.android.codegentest.HierrarchicalDataClassChild: void __metadata()>
<android.webkit.WebViewClient: boolean shouldOverrideUrlLoading(WebView,String)>
<android.content.ContentResolver: void notifyChange(Uri,ContentObserver,boolean)>
<android.renderscript.ProgramRaster.Builder: ProgramRaster create()>
<android.webkit.WebView: void emulateShiftHeld()>
<android.telephony.ims.feature.RcsFeature: void <init>()>
<android.companion.WifiDeviceFilter: void __metadata()>
<android.telephony.TelephonyManager: int getPreferredNetworkType(int)>
<android.webkit.WebView: PrintDocumentAdapter createPrintDocumentAdapter()>
<android.app.admin.DevicePolicyManager: int getOrganizationColorForUser(int)>
<android.view.textclassifier.TextClassification: CharSequence getLabel()>
<android.content.pm.parsing.ParsingPackageRead: int getSharedUserLabel()>
<android.os.Vibrator: void vibrate(long[],int)>
<android.app.Notification.MessagingStyle: void <init>(CharSequence)>
<android.location.GnssMeasurement: boolean hasCarrierCycles()>
<android.graphics.BitmapRegionDecoder: BitmapRegionDecoder newInstance(InputStream,boolean)>
<android.content.ContextWrapper: void sendStickyBroadcast(Intent,Bundle)>
<android.os.Debug: void startAllocCounting()>
<android.os.Debug: void resetGlobalExternalAllocSize()>
<android.location.LocationManager: boolean addGpsMeasurementListener(Listener)>
<android.app.slice.SliceItem: long getTimestamp()>
<android.telephony.SubscriptionInfo: boolean canManageSubscription(Context)>
<com.android.internal.content.PackageHelper: long calculateInstalledSize(PackageLite,boolean,String)>
<android.media.MediaScanner: FileEntry makeEntryFor(String)>
<com.android.systemui.statusbar.SysuiStatusBarStateController: void addCallback(StateListener,int)>
<android.telephony.TelephonyManager: int setAllowedCarriers(int,List<CarrierIdentifier>)>
<android.view.WindowInsets: WindowInsets inset(Rect)>
<android.text.FontConfig: FontFamily[] getFamilies()>
<android.net.http.SslError: void <init>(int,X509Certificate)>
<android.app.Activity: void startActivityFromFragment(Fragment,Intent,int,Bundle)>
<android.location.Location: boolean isFromMockProvider()>
<android.renderscript.ProgramVertex.Builder: ProgramVertex create()>
<android.app.AppOpsManager: int noteProxyOpNoThrow(String,String,int)>
<android.telecom.InCallService: void onPhoneCreated(Phone)>
<android.app.AlertDialog: void setButton3(CharSequence,OnClickListener)>
<com.android.ims.internal.uce.common.CapInfo: boolean isFtSnFSupported()>
<android.renderscript.RSTextureView: void <init>(Context)>
<com.android.server.pm.parsing.pkg.PkgAppInfo: int getVersionCode()>
<android.app.ActivityManager.TaskDescription: void <init>(String,Bitmap,int)>
<android.telephony.ims.ImsSsInfo: void <init>(int,String)>
<android.util.proto.ProtoOutputStream: void writeRepeatedBool(long,boolean)>
<android.app.Activity: void finishActivityFromChild(Activity,int)>
<android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int,int)>
<android.util.proto.ProtoOutputStream: void writePackedEnum(long,int[])>
<android.provider.Contacts.ContactMethods: String lookupProviderNameFromId(int)>
<android.service.autofill.augmented.FillResponse: void __metadata()>
<android.accounts.AccountManager: AccountManagerFuture<Bundle> getAuthToken(Account,String,boolean,AccountManagerCallback<Bundle>,Handler)>
<android.view.translation.ViewTranslationResponse: void __metadata()>
<android.app.slice.Slice.Builder: Builder setSpec(SliceSpec)>
<android.content.ContentResolver: void notifyChange(Uri,ContentObserver,boolean,int)>
<android.location.LocationRequest: long getExpireAt()>
<android.os.TestLooperManager: MessageQueue getQueue()>
<android.renderscript.RenderScriptGL: void bindProgramStore(ProgramStore)>
<android.webkit.WebViewDelegate: void callDrawGlFunction(Canvas,long,Runnable)>
<android.permission.PermissionControllerService: void onRestoreRuntimePermissionsBackup(UserHandle,InputStream,Runnable)>
<android.webkit.WebView: PluginList getPluginList()>
<android.text.TextUtils: boolean isGraphic(char)>
<android.telephony.PhoneNumberUtils: void formatNanpNumber(Editable)>
<com.android.internal.security.VerityUtils: byte[] getVerityRootHash(String)>
<android.webkit.WebView: void setHorizontalScrollbarOverlay(boolean)>
<android.app.admin.DevicePolicyManager: void setAutoTimeRequired(ComponentName,boolean)>
<android.content.ContextWrapper: void setWallpaper(Bitmap)>
<com.android.ims.ImsConfig: String getProvisionedStringValue(int)>
<android.app.backup.BackupManager: int requestRestore(RestoreObserver,BackupManagerMonitor)>
<android.renderscript.FileA3D.IndexEntry: String getName()>
<android.content.ContextWrapper: void sendStickyBroadcast(Intent)>
<com.android.server.pm.parsing.pkg.PkgPackageInfo: int getVersionCode()>
<android.util.proto.ProtoOutputStream: void writeBytes(long,byte[])>
<android.graphics.RenderNode: void end(RecordingCanvas)>
<android.content.pm.PackageManager: int getPreferredActivities(List<IntentFilter>,List<ComponentName>,String)>
<com.android.internal.util.ArrayUtils: int[] convertToIntArray(List<Integer>)>
<com.android.server.wm.WindowContainer: boolean isAnimating(int)>
<android.webkit.WebSettings: ZoomDensity getDefaultZoom()>
<android.os.Debug: int setAllocationLimit(int)>
<android.view.inputmethod.InputMethodManager: void notifySuggestionPicked(SuggestionSpan,String,int)>
<android.webkit.WebChromeClient: void openFileChooser(ValueCallback<Uri>,String,String)>
<android.view.WindowInsets: Insets getStableInsets()>
<android.content.ContentProviderClient: void closeQuietly(ContentProviderClient)>
<android.location.LocationManager: boolean addGpsNavigationMessageListener(Listener)>
<android.graphics.Typeface: Typeface createFromFamiliesWithDefault(FontFamily[],String,int,int)>
<android.telephony.PhoneNumberUtils: CharSequence ttsSpanAsPhoneNumber(CharSequence)>
<android.database.sqlite.SQLiteQueryBuilder: void setProjectionAggregationAllowed(boolean)>
<android.telephony.SignalStrength: int getLteCqi()>
<android.service.notification.StatusBarNotification: void <init>(String,String,int,String,int,int,int,Notification,UserHandle,long)>
<android.widget.inline.InlinePresentationSpec: void __metadata()>
<android.opengl.GLSurfaceView: void surfaceRedrawNeeded(SurfaceHolder)>
<android.telephony.TelephonyManager: byte[] iccExchangeSimIO(int,int,int,int,int,int,String)>
<com.android.systemui.shared.system.ActivityManagerWrapper: void unregisterTaskStackListener(TaskStackChangeListener)>
<android.os.Debug: int getThreadAllocCount()>
<android.os.Handler: void <init>(Callback)>
<androidx.media.filterfw.CameraStreamer: Camera getCamera()>
<android.provider.Contacts.ContactMethods: CharSequence getDisplayLabel(Context,int,int,CharSequence)>
<android.view.translation.TranslationManager: void removeTranslationCapabilityUpdateListener(int,int,PendingIntent)>
<android.app.ActionBar: void removeTab(Tab)>
<com.android.internal.widget.RecyclerView.LayoutParams: int getViewPosition()>
<android.telephony.PhoneStateListener: void onCallAttributesChanged(CallAttributes)>
<android.media.AsyncPlayer: void play(Context,Uri,boolean,int)>
<android.app.Notification.WearableExtender: WearableExtender setHintAvoidBackgroundClipping(boolean)>
<android.telecom.TelecomManager: List<PhoneAccountHandle> getPhoneAccountsForPackage()>
<android.view.translation.TranslationResponseValue: void __metadata()>
<android.media.MediaDrm.SessionException: int getErrorCode()>
<android.content.pm.PackageParser.Package: void setApplicationInfoSplitResourcePaths(String[])>
<android.app.search.SearchTarget: boolean shouldHide()>
<android.app.ActionBar: int getNavigationItemCount()>
<android.webkit.CookieManager: void setAcceptFileSchemeCookies(boolean)>
<android.renderscript.ProgramVertexFixedFunction.Builder: void <init>(RenderScript)>
<android.security.KeyStore: boolean isEmpty()>
<android.service.textclassifier.TextClassifierService: TextClassifier getLocalTextClassifier()>
<android.hardware.usb.UsbAccessory: void <init>(String,String,String,String,String,String)>
<com.android.server.pm.PackageInstallerService: File allocateStageDirLegacy(String,boolean)>
<android.webkit.CacheManager: File getCacheFileBaseDir()>
<android.app.Notification.TvExtender: String getChannel()>
<android.telephony.SmsMessage: int getIndexOnSim()>
<com.android.internal.logging.MetricsLogger: void action(Context,int,int)>
<android.content.ContextWrapper: int getWallpaperDesiredMinimumHeight()>
<android.content.pm.PackageManager: void addPackageToPreferred(String)>
<android.renderscript.ProgramVertexFixedFunction.Constants: void destroy()>
<android.webkit.WebView: String[] getHttpAuthUsernamePassword(String,String)>
<com.android.location.provider.LocationProviderBase: int onGetStatus(Bundle)>
<android.app.AppOpsManager: void checkPackage(int,String)>
<android.webkit.WebSettings: void setAllowUniversalAccessFromFileURLs(boolean)>
<android.view.View: Bitmap getDrawingCache(boolean)>
<android.telephony.SignalStrength: int getLteLevel()>
<android.telephony.TelephonyManager: String iccTransmitApduBasicChannelBySlot(int,int,int,int,int,int,String)>
<android.telecom.InCallService: void onPhoneDestroyed(Phone)>
<com.android.server.pm.PackageSetting: LegacyPermissionState getLegacyPermissionState()>
<android.location.GnssMeasurement: boolean hasCarrierPhaseUncertainty()>
<android.graphics.Canvas: void getMatrix(Matrix)>
<android.transition.Scene: void <init>(ViewGroup,ViewGroup)>
<android.app.admin.DevicePolicyManager: int getPasswordQuality(ComponentName)>
<android.os.Parcel: T[] readTypedArray(Creator<T>)>
<android.content.ContextWrapper: void setWallpaper(InputStream)>
<android.app.AppOpsManager: int startOp(int)>
<android.content.res.StringBlock: CharSequence get(int)>
<com.android.internal.widget.LockPatternUtils: boolean isLegacyLockPatternEnabled(int)>
<com.android.codegentest.SampleWithCustomBuilder: void __metadata()>
<android.content.pm.ShortcutInfo: int getTextResId()>
<android.view.accessibility.AccessibilityNodeInfo: int getActions()>
<android.media.ThumbnailUtils: void closeSilently(ParcelFileDescriptor)>
<android.os.Environment.UserEnvironment: File getExternalStorageDirectory()>
<com.android.ims.internal.uce.common.CapInfo: boolean isRcsIpVideoCallSupported()>
<android.app.Notification.WearableExtender: WearableExtender setHintAmbientBigPicture(boolean)>
<android.companion.Association: void __metadata()>
<android.view.ViewDebug: void trace(View,RecyclerTraceType,int)>
<android.content.pm.PackageManager: void addPreferredActivityAsUser(IntentFilter,int,ComponentName[],ComponentName,int)>
<android.telephony.TelephonyManager: void setDataEnabled(boolean)>
<android.hardware.location.ContextHubManager: int registerCallback(Callback)>
<android.app.ContextImpl: Drawable peekWallpaper()>
<android.hardware.radio.RadioTuner: boolean isAntennaConnected()>
<android.util.proto.ProtoOutputStream: void writeEnum(long,int)>
<android.net.TrafficStats: long getUidTcpRxSegments(int)>
<android.hardware.radio.ProgramSelector: long[] getVendorIds()>
<android.security.keystore.KeyProtection.Builder: Builder setUserAuthenticationValidityDurationSeconds(int)>
<android.location.LocationManager: boolean unregisterGnssBatchedLocationCallback(BatchedLocationCallback)>
<android.content.pm.SharedLibraryInfo: int getVersion()>
<android.webkit.CookieSyncManager: void stopSync()>
<android.telephony.CellIdentityLte: int getMcc()>
<android.media.CamcorderProfile: CamcorderProfile get(int)>
<android.app.DownloadManager.Request: Request setShowRunningNotification(boolean)>
<android.nfc.NfcAdapter: boolean invokeBeam(Activity)>
<android.app.AlertDialog: void setButton3(CharSequence,Message)>
<android.app.Activity: void setProgressBarIndeterminate(boolean)>
<android.telephony.TelephonyManager: String sendEnvelopeWithStatus(String)>
<android.app.Notification.WearableExtender: WearableExtender setBackground(Bitmap)>
<android.view.SurfaceControl: void mergeToGlobalTransaction(Transaction)>
<android.media.MediaScanner: void postscan(String[])>
<android.bluetooth.BluetoothHealthAppConfiguration: int getDataType()>
<android.widget.CalendarView: int getWeekNumberColor()>
<android.app.FragmentController: void restoreAllState(Parcelable,List<Fragment>)>
<android.location.LocationManager: String[] getIgnoreSettingsWhitelist()>
<android.service.euicc.EuiccProfileInfo: void <init>(String,UiccAccessRule[],String)>
<android.telephony.TelephonyManager: String getDeviceId(int)>
<android.media.MediaScanner.MyMediaScannerClient: ContentValues toValues()>
<android.app.ContextImpl: void clearWallpaper()>
<android.webkit.WebView: int getVisibleTitleHeight()>
<android.media.MediaScanner.MyMediaScannerClient: int getFileTypeFromDrm(String)>
<android.content.pm.PackageManager: void clearPackagePreferredActivities(String)>
<android.hardware.soundtrigger.SoundTrigger: int listModules(ArrayList<ModuleProperties>)>
<android.net.http.SslCertificate: String getValidNotAfter()>
<com.android.server.wallpaper.WallpaperManagerService: ParcelFileDescriptor getWallpaper(String,IWallpaperManagerCallback,int,Bundle,int)>
<android.telecom.InCallService: Phone getPhone()>
<android.app.FragmentManager: FragmentTransaction openTransaction()>
<android.text.format.DateUtils: String getDayOfWeekString(int,int)>
<android.telephony.PhoneNumberUtils: boolean isPotentialEmergencyNumber(int,String,String)>
<android.hardware.hdmi.HdmiControlManager: void requestRemoteDeviceToBecomeActiveSource(HdmiDeviceInfo)>
<android.widget.TimePicker: void setCurrentMinute(Integer)>
<android.widget.RemoteViews: void setRemoteAdapter(int,int,Intent)>
<android.app.SearchManager: void onDismiss(DialogInterface)>
<android.text.method.TimeKeyListener: void <init>()>
<android.content.pm.PackageInstaller.SessionParams: void setAutoRevokePermissionsMode(boolean)>
<android.security.KeyChain: boolean isBoundKeyAlgorithm(String)>
<android.telephony.ims.DelegateStateCallback: void onImsConfigurationChanged(SipDelegateImsConfiguration)>
<android.util.proto.ProtoOutputStream: long startObject(long)>
<android.view.animation.Animation: boolean getDetachWallpaper()>
<android.app.AsyncNotedAppOp: void __metadata()>
<android.view.inputmethod.InputMethodManager: void hideSoftInputFromInputMethod(IBinder,int)>
<android.app.slice.SliceProvider: Slice onBindSlice(Uri,List<SliceSpec>)>
<com.android.ims.internal.uce.common.CapInfo: void setRcsIpVideoCallSupported(boolean)>
<android.view.View: void buildDrawingCache(boolean)>
<com.android.internal.widget.RecyclerView.SmoothScroller: void instantScrollToPosition(int)>
<android.app.slice.SliceManager: Slice bindSlice(Uri,List<SliceSpec>)>
<android.webkit.CookieSyncManager: void syncFromRamToFlash()>
<android.view.translation.TranslationManager: void addTranslationCapabilityUpdateListener(int,int,PendingIntent)>
<android.provider.Contacts.Intents: void <init>()>
<android.view.KeyCharacterMap: boolean getKeyData(int,KeyData)>
<android.renderscript.RenderScriptGL: void pause()>
<android.app.DownloadManager: long addCompletedDownload(String,String,boolean,String,String,long,boolean,Uri,Uri)>
<android.renderscript.ScriptGroup: void setOutput(KernelID,Allocation)>
<android.app.admin.DevicePolicyManager: void setProfileOwnerCanAccessDeviceIds(ComponentName)>
<android.webkit.WebSettings: void setDatabasePath(String)>
<android.view.inputmethod.InputMethodManager: boolean setCurrentInputMethodSubtype(InputMethodSubtype)>
<android.hardware.camera2.CameraDevice: void createCustomCaptureSession(InputConfiguration,List<OutputConfiguration>,int,StateCallback,Handler)>
<com.android.internal.logging.MetricsLogger: void count(Context,String,int)>
<android.webkit.WebViewDelegate: void detachDrawGlFunctor(View,long)>
<android.webkit.UrlInterceptRegistry: boolean urlInterceptDisabled()>
<android.webkit.PluginList: void pluginClicked(Context,int)>
<android.service.voice.VoiceInteractionSession: void onHandleAssist(Bundle,AssistStructure,AssistContent)>
<android.media.MediaFile: boolean isVideoFileType(int)>
<android.os.storage.StorageVolume: Intent createAccessIntent(String)>
<android.service.euicc.EuiccService: int onDownloadSubscription(int,DownloadableSubscription,boolean,boolean)>
<android.webkit.Plugin: void setDescription(String)>
<android.graphics.drawable.AnimatedImageDrawable: int getLoopCount(int)>
<android.os.PowerManager: boolean isScreenOn()>
<android.widget.AutoCompleteTextView: OnItemClickListener getItemClickListener()>
<android.app.KeyguardManager: KeyguardLock newKeyguardLock(String)>
<android.media.AudioManager: int getVibrateSetting(int)>
<android.util.proto.ProtoOutputStream: void writeUInt32(long,int)>
<android.content.pm.PackageManager: void replacePreferredActivity(IntentFilter,int,ComponentName[],ComponentName)>
<android.telephony.PhoneNumberUtils: boolean isPotentialLocalEmergencyNumber(Context,int,String)>
<android.content.pm.parsing.ParsingPackageRead: String getSharedUserId()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onFinishedGoingToSleep(int)>
<android.media.AudioManager: boolean registerRemoteController(RemoteController)>
<android.nfc.NfcAdapter: void setOnNdefPushCompleteCallback(OnNdefPushCompleteCallback,Activity,Activity)>
<android.provider.ContactsContract.Contacts: void markAsContacted(ContentResolver,long)>
<android.view.inputmethod.InputMethodManager: boolean isWatchingCursor(View)>
<android.graphics.drawable.NinePatchDrawable: void <init>(Bitmap,byte[],Rect,String)>
<android.app.InstantAppResolverService: void onGetInstantAppIntentFilter(Intent,int[],UserHandle,String,InstantAppResolutionCallback)>
<com.android.internal.policy.PhoneWindow: void setTitleColor(int)>
<android.content.pm.ShortcutInfo.Builder: Builder setLongLabelResId(int)>
<android.test.TouchUtils: int dragViewTo(ActivityInstrumentationTestCase,View,int,int,int)>
<android.app.admin.DeviceAdminReceiver: void onPasswordSucceeded(Context,Intent)>
<android.security.keystore.recovery.RecoveryController: Key importKey(String,byte[])>
<android.test.ActivityInstrumentationTestCase2: void <init>(String,Class<T>)>
<android.media.ThumbnailUtils: int computeSampleSize(Options,int,int)>
<android.content.res.Resources: Drawable getDrawable(int)>
<android.webkit.WebView: void <init>(Context,AttributeSet,int,boolean)>
<android.app.admin.DevicePolicyManager: boolean setActiveProfileOwner(ComponentName,String)>
<android.widget.CalendarView: void setWeekNumberColor(int)>
<android.app.AlertDialog: void setButton2(CharSequence,OnClickListener)>
<android.graphics.BaseRecordingCanvas: void drawPosText(char[],int,int,float[],Paint)>
<android.media.MediaRecorder: void <init>()>
<android.telecom.TelecomManager: void acceptRingingCall()>
<com.android.ims.internal.uce.common.CapInfo: void setIsSupported(boolean)>
<android.renderscript.Mesh.TriangleMeshBuilder: void <init>(RenderScript,int,int)>
<android.telephony.TelephonyManager: String sendEnvelopeWithStatus(int,String)>
<android.location.LocationManager: void getCurrentLocation(LocationRequest,CancellationSignal,Executor,Consumer<Location>)>
<android.graphics.ImageDecoder: ImageDecoder setDecodeAsAlphaMask(boolean)>
<android.telephony.PhoneStateListener: void onServiceStateChanged(ServiceState)>
<android.bluetooth.BluetoothAdapter: BluetoothAdapter getDefaultAdapter()>
<android.widget.CalendarView: int getUnfocusedMonthDateColor()>
<com.android.codegentest.SampleWithNestedDataClasses.NestedDataClass2.NestedDataClass3: void __metadata()>
<android.graphics.Canvas: boolean clipRegion(Region,Op)>
<android.webkit.WebSettings: String getDatabasePath()>
<android.os.FileUtils: void copyFileOrThrow(File,File)>
<android.content.pm.PackageManager: void verifyIntentFilter(int,int,List<String>)>
<android.webkit.WebSettings: void setRenderPriority(RenderPriority)>
<android.app.Notification.WearableExtender: boolean getHintAvoidBackgroundClipping()>
<android.webkit.Plugin: void setName(String)>
<com.android.server.locksettings.recoverablekeystore.RecoverableKeyStoreManager: String generateKey(String)>
<android.database.Cursor: void deactivate()>
<android.media.AudioManager: void unregisterRemoteControlClient(RemoteControlClient)>
<android.content.IContentProvider: Bundle call(String,String,String,Bundle)>
<android.location.GnssAntennaInfo.Builder: void <init>()>
<com.android.systemui.shared.system.WindowManagerWrapper: void setPipVisibility(boolean)>
<android.text.TextUtils: CharSequence commaEllipsize(CharSequence,TextPaint,float,String,String)>
<android.telecom.TelecomManager: void clearAccounts()>
<android.graphics.BitmapFactory.Options: void requestCancelDecode()>
<android.database.sqlite.SQLiteClosable: void onAllReferencesReleasedFromContainer()>
<android.text.FontConfig.FontFamily: Font[] getFonts()>
<android.os.Debug: void resetGlobalClassInitCount()>
<android.util.proto.ProtoOutputStream: void writeBool(long,boolean)>
<android.media.MediaCodecList: MediaCodecInfo getCodecInfoAt(int)>
<android.content.Context: void sendStickyOrderedBroadcast(Intent,BroadcastReceiver,Handler,int,String,Bundle)>
<android.hardware.hdmi.HdmiControlManager: void powerOnRemoteDevice(HdmiDeviceInfo)>
<android.util.proto.ProtoOutputStream: void writeRepeatedEnum(long,int)>
<android.view.SurfaceHolder: void setType(int)>
<android.app.ActionBar: Tab newTab()>
<android.net.NetworkStatsHistory.DataStreamUtils: long[] readFullLongArray(DataInput)>
<android.app.Notification.WearableExtender: Bitmap getBackground()>
<com.android.internal.logging.MetricsLogger: void hidden(Context,int)>
<android.telephony.ims.RegistrationManager.RegistrationCallback: void onRegistering(int)>
<android.media.AudioManager: int requestAudioFocus(OnAudioFocusChangeListener,AudioAttributes,int,int,AudioPolicy)>
<android.telephony.TelephonyManager: int getPhoneCount()>
<android.app.AppOpsManager: int noteOp(int,int,String)>
