(14)<android.widget.RemoteViews: void setRemoteAdapter(int,int,android.content.Intent)>[normal]    ---->    <android.widget.RemoteViews: void setRemoteAdapter(int,android.content.Intent)>[normal]
(16)<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>[normal]    ---->    <android.view.View: void setBackground(android.graphics.drawable.Drawable)>[normal]
(5)<android.telephony.NeighboringCellInfo: void <init>()>[normal]    ---->    <android.telephony.NeighboringCellInfo: void <init>(int,java.lang.String,int)>[normal]
(23)<android.view.ViewGroup: void setChildrenDrawnWithCacheEnabled(boolean)>[normal]    ---->    <android.view.View: void setLayerType(int,android.graphics.Paint)>[normal]
(23)<android.media.AsyncPlayer: void play(android.content.Context,android.net.Uri,boolean,int)>[normal]    ---->    <android.media.AsyncPlayer: void play(android.content.Context,android.net.Uri,boolean,android.media.AudioAttributes)>[normal]
(28)<android.view.View: android.graphics.Bitmap getDrawingCache(boolean)>[normal]    ---->     <android.view.View: void setLayerType(int,android.graphics.Paint)>[normal]
(19)<android.bluetooth.BluetoothGatt: void abortReliableWrite(android.bluetooth.BluetoothDevice)>[normal]    ---->    <android.bluetooth.BluetoothGatt: void abortReliableWrite()>[normal]
(28)<android.view.View: void buildDrawingCache(boolean)>[normal]    ---->    <android.view.View: void setLayerType(int,android.graphics.Paint)>[normal]
(28)<android.view.ViewGroup: int getPersistentDrawingCache()>[normal]    ---->    <android.view.View: void setLayerType(int,android.graphics.Paint)>[normal]
(8)<android.net.http.SslCertificate: java.lang.String getValidNotBefore()>[normal]    ---->    <android.net.http.SslCertificate: java.util.Date getValidNotBeforeDate()>[normal]
(21)<android.telephony.PhoneNumberUtils: void formatNanpNumber(android.text.Editable)>[static]    ---->    <android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String,java.lang.String)>[static]
(28)<android.view.View: void setDrawingCacheEnabled(boolean)>[normal]    ---->    <android.view.View: void setLayerType(int,android.graphics.Paint)>[normal]
(5)<android.content.ContentResolver: void cancelSync(android.net.Uri)>[normal]    ---->    <android.content.ContentResolver: void cancelSync(android.accounts.Account,java.lang.String)>[normal]
(21)<android.opengl.EGLObjectHandle: int getHandle()>[normal]    ---->    <android.opengl.EGLObjectHandle: long getNativeHandle()>[normal]
(28)<android.content.pm.VersionedPackage: int getVersionCode()>[normal]    ---->    <android.content.pm.VersionedPackage: long getLongVersionCode()>[normal]
(28)<android.view.View: boolean isDrawingCacheEnabled()>[normal]    ---->    <android.view.View: void setLayerType(int,android.graphics.Paint)>[normal]
(3)<android.view.ViewConfiguration: int getMaximumDrawingCacheSize()>[static]    ---->    <android.view.ViewConfiguration: int getScaledMaximumDrawingCacheSize()>[normal]
(28)<android.location.GnssMeasurement: long getCarrierCycles()>[normal]    ---->    <android.location.GnssMeasurement: double getAccumulatedDeltaRangeMeters()>[normal]
(5)<android.telephony.NeighboringCellInfo: void <init>(int,int)>[normal]    ---->    <android.telephony.NeighboringCellInfo: void <init>(int,java.lang.String,int)>[normal]
(9)<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,float,float,float,float,int,float,float,int,int)>[static]    ---->    <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,float,float,int,float,float,int,int)>[static]
(16)<android.database.ContentObservable: void dispatchChange(boolean)>[normal]   ---->    <android.database.ContentObservable: void dispatchChange(boolean,android.net.Uri)>[normal]
(16)<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getDescription()>[normal]   ---->   <android.accessibilityservice.AccessibilityServiceInfo: java.lang.String loadDescription(android.content.pm.PackageManager)>[normal]
(28)<android.telephony.CellIdentityGsm: int getMnc()>[normal]    ---->    <android.telephony.CellIdentityGsm: java.lang.String getMncString()>[normal]
(28)<android.view.inputmethod.InputMethodManager: boolean switchToNextInputMethod(android.os.IBinder,boolean)>[normal]    ---->    <android.inputmethodservice.InputMethodService: boolean switchToNextInputMethod(boolean)>[normal]
(28)<android.content.pm.SharedLibraryInfo: int getVersion()>[normal]    ---->    <android.content.pm.SharedLibraryInfo: long getLongVersion()>[normal]
(26)<android.view.ViewGroup: android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect)>[normal]    ---->    <android.view.ViewGroup: void onDescendantInvalidated(android.view.View,android.view.View)>[normal]
(26)<android.graphics.Canvas: int saveLayer(android.graphics.RectF,android.graphics.Paint,int)>[normal]    ---->    <android.graphics.Canvas: int saveLayer(android.graphics.RectF,android.graphics.Paint)>[normal]
(28)<android.app.Fragment: android.app.LoaderManager getLoaderManager()>[normal]    ---->    <android.support.v4.app.Fragment: android.support.v4.app.LoaderManager getLoaderManager()>[normal]
(11)<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildQuery(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>[normal]     ---->    <android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildQuery(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>[normal]
(3)<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorListener,int)>[normal]    ---->    <android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener,android.hardware.Sensor)>[normal]
(21)<android.media.AudioManager: void registerMediaButtonEventReceiver(android.app.PendingIntent)>[normal]    ---->    <android.media.session.MediaSession: void setMediaButtonReceiver(android.app.PendingIntent)>[normal]
(28)<android.view.inputmethod.InputMethodManager: boolean switchToLastInputMethod(android.os.IBinder)>[normal]    ---->    <android.inputmethodservice.InputMethodService: boolean switchToPreviousInputMethod()>[normal]
(11)<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildUnionSubQuery(java.lang.String,java.lang.String[],java.util.Set,int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)>[normal]    ---->    <android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildUnionSubQuery(java.lang.String,java.lang.String[],java.util.Set,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>[normal]
(23)<android.view.ViewGroup: boolean isChildrenDrawnWithCacheEnabled()>[normal]    ---->    <android.view.View: void setLayerType(int,android.graphics.Paint)>[normal]
(26)<android.text.method.DateTimeKeyListener: android.text.method.DateTimeKeyListener getInstance()>[static]   ---->    <android.text.method.DateTimeKeyListener: android.text.method.DateTimeKeyListener getInstance(java.util.Locale)>[static]
(17)<android.webkit.WebView: boolean canZoomOut()>[normal]    ---->    <android.webkit.WebViewClient: void onScaleChanged(android.webkit.WebView,float,float)>[normal]
(16)<android.nfc.NdefRecord: byte[] toByteArray()>[normal]    ---->    <android.nfc.NdefMessage: byte[] toByteArray()>[normal]
(21)<android.graphics.Canvas: void drawBitmap(int[],int,int,float,float,int,int,boolean,android.graphics.Paint)>[normal]   ---->    <android.graphics.Canvas: boolean isHardwareAccelerated()>[normal]
(26)<android.telephony.TelephonyManager: android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannel(java.lang.String)>[normal]    ---->    <android.telephony.TelephonyManager: android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannel(java.lang.String,int)>[normal]
(21)<android.telephony.PhoneNumberUtils: void formatNumber(android.text.Editable,int)>[static]    ---->    <android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String,java.lang.String)>[static]
(22)<android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int)>[normal]    ---->    <android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme)>[normal]
(26)<android.media.tv.TvInputInfo: android.content.Intent createSettingsIntent()>[normal]    ---->    <android.media.tv.TvInputInfo: android.content.Intent createSetupIntent()>[normal]
(18)<android.os.StatFs: int getFreeBlocks()>[normal]    ---->    <android.os.StatFs: long getFreeBlocksLong()>[normal]
(3)<android.database.sqlite.SQLiteDatabase: boolean yieldIfContended()>[normal]     ---->    <android.database.sqlite.SQLiteDatabase: boolean yieldIfContendedSafely()>[normal]
(16)<android.view.ActionProvider: android.view.View onCreateActionView()>  [abstract]  ---->   <android.view.ActionProvider: android.view.View onCreateActionView(android.view.MenuItem)>[abstract]
(26)<android.hardware.usb.UsbRequest: boolean queue(java.nio.ByteBuffer,int)>[normal]    ---->    <android.hardware.usb.UsbRequest: boolean queue(java.nio.ByteBuffer)>[normal]
(21)<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>[normal]    ---->    <android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>[normal]
(8)<android.app.Activity: android.app.Dialog onCreateDialog(int)>[normal]    ---->  <android.app.Activity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>[normal]
(21)<android.os.Environment: java.lang.String getStorageState(java.io.File)>[static]    ---->    <android.os.Environment: java.lang.String getExternalStorageState(java.io.File)>[static]
(8)<android.webkit.WebChromeClient: void onConsoleMessage(java.lang.String,int,java.lang.String)>[normal]    ---->    <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>[normal]
(24)<android.location.LocationManager: void removeNmeaListener(android.location.GpsStatus$NmeaListener)>[normal]    ---->    <android.location.LocationManager: void removeNmeaListener(android.location.OnNmeaMessageListener)>[normal]
(20)<android.view.View: boolean fitSystemWindows(android.graphics.Rect)>[normal]    ---->    <android.view.View: android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets)>[normal]
(28)<android.view.inputmethod.InputMethodManager: void showStatusIcon(android.os.IBinder,java.lang.String,int)>[normal]    ---->    <android.inputmethodservice.InputMethodService: void showStatusIcon(int)>[normal]
(18)<android.os.StatFs: int getBlockCount()>[normal]    ---->    <android.os.StatFs: long getBlockCountLong()>[normal]
(26)<android.app.admin.DeviceAdminReceiver: void onPasswordSucceeded(android.content.Context,android.content.Intent)>[normal]    ---->    <android.app.admin.DeviceAdminReceiver: void onPasswordSucceeded(android.content.Context,android.content.Intent,android.os.UserHandle)>[normal]
(26)<android.telephony.TelephonyManager: java.lang.String getDeviceId(int)>[normal]    ---->     <android.telephony.TelephonyManager: java.lang.String getImei(int)>[normal]
(23)<android.service.carrier.CarrierMessagingService: void onSendTextSms(java.lang.String,int,java.lang.String,android.service.carrier.CarrierMessagingService$ResultCallback)>[abstract]    ---->    <android.service.carrier.CarrierMessagingService: void onSendTextSms(java.lang.String,int,java.lang.String,int,android.service.carrier.CarrierMessagingService$ResultCallback)>[abstract]
(26)<android.os.Vibrator: void vibrate(long)>[normal]    ---->    <android.os.Vibrator: void vibrate(android.os.VibrationEffect)>[normal]
(20)<android.os.PowerManager: boolean isScreenOn()>[normal]    ---->    <android.os.PowerManager: boolean isInteractive()>[normal]
(18)<android.os.StatFs: int getBlockSize()>[normal]    ---->    <android.os.StatFs: long getBlockSizeLong()>[normal]
(5)<android.content.ContentResolver: void startSync(android.net.Uri,android.os.Bundle)>[normal]   ---->    <android.content.ContentResolver: void requestSync(android.accounts.Account,java.lang.String,android.os.Bundle)>[normal]
(24)<android.text.Html: android.text.Spanned fromHtml(java.lang.String,android.text.Html$ImageGetter,android.text.Html$TagHandler)>  [static]  ---->    <android.text.Html: android.text.Spanned fromHtml(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler)>[static]
(23)<android.widget.TimePicker: void setCurrentHour(java.lang.Integer)>[normal]    ---->    <android.widget.TimePicker: void setHour(int)>[normal]
(3)<android.view.ViewConfiguration: int getEdgeSlop()>[static]    ---->    <android.view.ViewConfiguration: int getScaledEdgeSlop()>[normal]
(16)<android.view.textservice.SpellCheckerSession: void getSuggestions(android.view.textservice.TextInfo[],int,boolean)>[normal]    ---->    <android.view.textservice.SpellCheckerSession: void getSentenceSuggestions(android.view.textservice.TextInfo[],int)>[normal]
(21)<android.webkit.CookieSyncManager: void syncFromRamToFlash()>[normal]    ---->   <android.webkit.CookieManager: void flush()>[abstract]
(26)<android.app.admin.DeviceAdminReceiver: void onPasswordExpiring(android.content.Context,android.content.Intent)>[normal]    ---->    <android.app.admin.DeviceAdminReceiver: void onPasswordExpiring(android.content.Context,android.content.Intent,android.os.UserHandle)>[normal]
(26)<android.os.Vibrator: void vibrate(long[],int,android.media.AudioAttributes)>[normal]    ---->    <android.os.Vibrator: void vibrate(android.os.VibrationEffect,android.media.AudioAttributes)>[normal]
(4)<android.content.Intent: android.content.Intent getIntent(java.lang.String)>[static]    ---->    <android.content.Intent: android.content.Intent parseUri(java.lang.String,int)>[static]
(3)<android.view.ViewConfiguration: int getMinimumFlingVelocity()>[static]    ---->    <android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>[normal]
(23)<android.webkit.WebViewClient: void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String)>[normal]    ---->     <android.webkit.WebViewClient: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceError)>[normal]
(26)<android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int,int)>[normal]    ---->    <android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int)>[normal]
(23)<android.media.AudioManager: void setStreamMute(int,boolean)>[normal]    ---->    <android.media.AudioManager: void adjustStreamVolume(int,int,int)>[normal]
(21)<android.graphics.Canvas: void drawBitmap(int[],int,int,int,int,int,int,boolean,android.graphics.Paint)>[normal]   ---->    <android.graphics.Canvas: boolean isHardwareAccelerated()>[normal]
(23)<android.app.Fragment: void onInflate(android.util.AttributeSet,android.os.Bundle)>[normal]    ---->  <android.app.Fragment: void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle)>[normal]
(28)<android.view.View: void buildDrawingCache()>[normal]    ---->    <android.view.View: void setLayerType(int,android.graphics.Paint)>[normal]
(26)<android.app.admin.DeviceAdminReceiver: void onPasswordFailed(android.content.Context,android.content.Intent)>[normal]    ---->    <android.app.admin.DeviceAdminReceiver: void onPasswordFailed(android.content.Context,android.content.Intent,android.os.UserHandle)>[normal]
(28)<android.view.View: android.graphics.Bitmap getDrawingCache()>[normal]    ---->    <android.view.View: void setLayerType(int,android.graphics.Paint)>[normal]
(26)<android.media.AudioManager: int abandonAudioFocus(android.media.AudioManager$OnAudioFocusChangeListener)>[normal]    ---->    <android.media.AudioManager: int abandonAudioFocusRequest(android.media.AudioFocusRequest)>[normal]
(15)<android.speech.tts.TextToSpeech: int setOnUtteranceCompletedListener(android.speech.tts.TextToSpeech$OnUtteranceCompletedListener)>[normal]    ---->    <android.speech.tts.TextToSpeech: int setOnUtteranceProgressListener(android.speech.tts.UtteranceProgressListener)>[normal]
(26)<android.graphics.Canvas: int saveLayerAlpha(android.graphics.RectF,int,int)>[normal]    ---->    <android.graphics.Canvas: int saveLayerAlpha(android.graphics.RectF,int)>[normal]
(19)<android.webkit.WebView: android.graphics.Picture capturePicture()>[normal]    ---->    <android.webkit.WebView: void onDraw(android.graphics.Canvas)>[normal]
(14)<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,int[],android.view.MotionEvent$PointerCoords[],int,float,float,int,int,int,int)>[static]    ---->    <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[],int,int,float,float,int,int,int,int)>[static]
(28)<android.view.View: void setWillNotCacheDrawing(boolean)>[normal]    ---->    <android.view.View: void setLayerType(int,android.graphics.Paint)>[normal]
(28)<android.view.View: int getDrawingCacheQuality()>[normal]    ---->     <android.view.View: void setLayerType(int,android.graphics.Paint)>[normal]
(16)<android.media.AudioManager: int getVibrateSetting(int)>[normal]    ---->    <android.media.AudioManager: int getRingerMode()>[normal]
(28)<android.app.Activity: android.app.LoaderManager getLoaderManager()>[normal]    ---->    <android.support.v4.app.FragmentActivity: android.support.v4.app.LoaderManager getSupportLoaderManager()>[normal]
(28)<android.location.GnssMeasurement: double getCarrierPhaseUncertainty()>[normal]    ---->    <android.location.GnssMeasurement: double getAccumulatedDeltaRangeUncertaintyMeters()>[normal]
(16)<android.media.AudioManager: boolean shouldVibrate(int)>[normal]    ---->    <android.media.AudioManager: int getRingerMode()>[normal]
(26)<android.net.wifi.WifiManager: boolean pingSupplicant()>[normal]    ---->    <android.net.wifi.WifiManager: boolean isWifiEnabled()>[normal]
(27)<android.webkit.CookieSyncManager: void sync()>[normal]    ---->    <android.webkit.CookieManager: void flush()>[abstract]
(28)<android.net.NetworkInfo: java.lang.String getTypeName()>[normal]    ---->    <android.net.NetworkCapabilities: boolean hasTransport(int)>[normal]
(24)<android.drm.DrmManagerClient: void release()>[normal]    ---->    <android.drm.DrmManagerClient: void close()>[normal]
(21)<android.media.Ringtone: void setStreamType(int)>[normal]    ---->    <android.media.Ringtone: void setAudioAttributes(android.media.AudioAttributes)>[normal]
(28)<android.view.ViewGroup: void setPersistentDrawingCache(int)>[normal]    ---->    <android.view.View: void setLayerType(int,android.graphics.Paint)>[normal]
(4)<android.telephony.SmsMessage: int getIndexOnSim()>[normal]    ---->    <android.telephony.SmsMessage: int getIndexOnIcc()>[normal]
(16)<android.drm.DrmSupportInfo: java.lang.String getDescriprition()>[normal]    ---->    <android.drm.DrmSupportInfo: java.lang.String getDescription()>[normal]
(23)<android.widget.TimePicker: java.lang.Integer getCurrentMinute()>[normal]    ---->    <android.widget.TimePicker: int getMinute()>[normal]
(16)<android.widget.ImageView: void setAlpha(int)>[normal]    ---->    <android.widget.ImageView: void setImageAlpha(int)>[normal]
(24)<android.app.FragmentController: java.util.List retainNonConfig()>[normal]    ---->   <android.app.FragmentController: android.app.FragmentManagerNonConfig retainNestedNonConfig()>[normal]
(17)<android.webkit.WebView: float getScale()>[normal]    ---->    <android.webkit.WebViewClient: void onScaleChanged(android.webkit.WebView,float,float)>[normal]
(23)<android.app.Fragment: void onAttach(android.app.Activity)>[normal]    ---->  <android.app.Fragment: void onAttach(android.content.Context)>[normal]
(28)<android.view.View: void setDrawingCacheQuality(int)>[normal]    ---->    <android.view.View: void setLayerType(int,android.graphics.Paint)>[normal]
(28)<android.telephony.CellIdentityLte: int getMnc()>[normal]    ---->    <android.telephony.CellIdentityLte: java.lang.String getMncString()>[normal]
(28)<android.location.GnssMeasurement: boolean hasCarrierCycles()>[normal]    ---->    <android.location.GnssMeasurement: int getAccumulatedDeltaRangeState()>[normal]
(24)<android.location.LocationManager: boolean addNmeaListener(android.location.GpsStatus$NmeaListener)>[normal]    ---->    <android.location.LocationManager: boolean addNmeaListener(android.location.OnNmeaMessageListener)>[normal]
(11)<android.database.CursorWindow: boolean isNull(int,int)>[normal]    ---->    <android.database.CursorWindow: int getType(int,int)>[normal]
(28)<android.location.GnssMeasurement: boolean hasCarrierPhaseUncertainty()>[normal]    ---->    <android.location.GnssMeasurement: int getAccumulatedDeltaRangeState()>[normal]
(4)<android.view.ViewConfiguration: int getMaximumFlingVelocity()>[static]    ---->    <android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>[normal]
(28)<android.view.inputmethod.InputMethodManager: void setInputMethod(android.os.IBinder,java.lang.String)>[normal]    ---->    <android.inputmethodservice.InputMethodService: void switchInputMethod(java.lang.String)>[normal]
(8)<android.app.ActivityManager: void restartPackage(java.lang.String)>[normal]    ----> <android.app.ActivityManager: void killBackgroundProcesses(java.lang.String)>[normal]
(21)<android.webkit.CookieManager: void removeAllCookie()>[abstract]    ---->    <android.webkit.CookieManager: void removeAllCookies(android.webkit.ValueCallback)>[abstract]
(28)<android.view.View: void invalidate(android.graphics.Rect)>[normal]    ---->    <android.view.View: void invalidate()>[normal]
(23)<android.service.carrier.CarrierMessagingService: void onSendMultipartTextSms(java.util.List,int,java.lang.String,android.service.carrier.CarrierMessagingService$ResultCallback)>[abstract]    ---->    <android.service.carrier.CarrierMessagingService: void onSendMultipartTextSms(java.util.List,int,java.lang.String,int,android.service.carrier.CarrierMessagingService$ResultCallback)>[abstract]
(3)<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorListener,int)>[normal]    ---->    <android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int)>[normal]
(5)<android.view.KeyEvent: void <init>(android.view.KeyEvent,long,int)>[normal]   ---->    <android.view.KeyEvent: android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int)>[static]
(21)<android.speech.tts.TextToSpeech: int addEarcon(java.lang.String,java.lang.String)>[normal]    ---->    <android.speech.tts.TextToSpeech: int addEarcon(java.lang.String,java.io.File)>[normal]
(18)<android.accessibilityservice.AccessibilityServiceInfo: boolean getCanRetrieveWindowContent()>[normal]    ---->  <android.accessibilityservice.AccessibilityServiceInfo: int getCapabilities()>[normal]
(26)<android.os.Vibrator: void vibrate(long,android.media.AudioAttributes)>[normal]    ---->    <android.os.Vibrator: void vibrate(android.os.VibrationEffect,android.media.AudioAttributes)>[normal]
(21)<android.media.AudioManager: void registerMediaButtonEventReceiver(android.content.ComponentName)>[normal]    ---->    <android.media.session.MediaSession: void setMediaButtonReceiver(android.app.PendingIntent)>[normal]
(28)<android.view.inputmethod.InputMethodManager: void showSoftInputFromInputMethod(android.os.IBinder,int)>[normal]    ---->     <android.inputmethodservice.InputMethodService: void requestShowSelf(int)>[normal]
(24)<android.app.FragmentController: void restoreAllState(android.os.Parcelable,java.util.List)>[normal]    ---->  <android.app.FragmentController: void restoreAllState(android.os.Parcelable,android.app.FragmentManagerNonConfig)>[normal]
(26)<android.view.ViewParent: void invalidateChild(android.view.View,android.graphics.Rect)>[normal]    ---->    <android.view.ViewParent: void onDescendantInvalidated(android.view.View,android.view.View)>[normal]
(21)<android.speech.tts.TextToSpeech: java.util.Locale getLanguage()>[normal]    ---->   <android.speech.tts.TextToSpeech: android.speech.tts.Voice getVoice()>[normal]
(23)<android.media.AudioManager: void setStreamSolo(int,boolean)>[normal]    ---->    <android.media.AudioManager: int requestAudioFocus(android.media.AudioFocusRequest)>[normal]
(26)<android.app.FragmentController: void dispatchMultiWindowModeChanged(boolean)>[normal]    ----> <android.app.FragmentController: void dispatchMultiWindowModeChanged(boolean,android.content.res.Configuration)>[normal]
(14)<android.media.AudioManager: boolean isWiredHeadsetOn()>[normal]    ---->    <android.media.AudioManager: android.media.AudioDeviceInfo[] getDevices(int)>[normal]
(20)<android.view.View: void requestFitSystemWindows()>[normal]    ---->    <android.view.View: void requestApplyInsets()>[normal]
(19)<android.media.AudioTrack: int getNativeFrameCount()>[normal]    ---->    <android.media.AudioTrack: int getBufferSizeInFrames()>[normal]
(28)<android.telephony.CellIdentityWcdma: int getMnc()>[normal]    ---->    <android.telephony.CellIdentityWcdma: java.lang.String getMncString()>[normal]
(28)<android.view.View: void destroyDrawingCache()>[normal]    ---->    <android.view.View: void setLayerType(int,android.graphics.Paint)>[normal]
(28)<android.view.ViewGroup: void setChildrenDrawingCacheEnabled(boolean)>[normal]    ---->    <android.view.View: void setLayerType(int,android.graphics.Paint)>[normal]
(21)<android.speech.tts.UtteranceProgressListener: void onError(java.lang.String)>[abstract]    ---->    <android.speech.tts.UtteranceProgressListener: void onError(java.lang.String,int)>[abstract]
(26)<android.webkit.WebView: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)>[normal]    ---->    <android.webkit.WebViewDatabase: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)>[abstract]
(28)<android.telephony.CellIdentityLte: int getMcc()>[normal]    ---->    <android.telephony.CellIdentityLte: java.lang.String getMccString()>[normal]
(3)<android.view.ViewConfiguration: int getFadingEdgeLength()>[static]    ---->    <android.view.ViewConfiguration: int getScaledFadingEdgeLength()>[normal]
(23)<android.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)>[normal]    ---->    <android.app.Fragment: void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle)>[normal]
(8)<android.app.Activity: void onPrepareDialog(int,android.app.Dialog)>[normal]    ---->  <android.app.Activity: void onPrepareDialog(int,android.app.Dialog,android.os.Bundle)>[normal]
(28)<android.view.inputmethod.InputMethodManager: void hideSoftInputFromInputMethod(android.os.IBinder,int)>[normal]    ---->    <android.inputmethodservice.InputMethodService: void requestHideSelf(int)>[normal]
(21)<android.media.Ringtone: int getStreamType()>[normal]    ---->    <android.media.Ringtone: void setAudioAttributes(android.media.AudioAttributes)>[normal]
(8)<android.net.http.SslCertificate: java.lang.String getValidNotAfter()>[normal]    ---->    <android.net.http.SslCertificate: java.util.Date getValidNotAfterDate()>[normal]
(23)<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int)>[normal]    ---->    <android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int,android.content.res.Resources$Theme)>[normal]
(24)<android.webkit.WebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)>[normal]    ---->     <android.webkit.WebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)>[normal]
(26)<android.app.admin.DeviceAdminReceiver: void onPasswordChanged(android.content.Context,android.content.Intent)>[normal]    ---->    <android.app.admin.DeviceAdminReceiver: void onPasswordChanged(android.content.Context,android.content.Intent,android.os.UserHandle)>[normal]
(26)<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance()>  [static]    ---->    <android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(java.util.Locale)>[static]
(13)<android.view.Display: int getHeight()>  [normal]  ---->    <android.view.Display: void getSize(android.graphics.Point)>[normal]
(26)<android.view.ViewGroup: void invalidateChild(android.view.View,android.graphics.Rect)>[normal]    ---->    <android.view.ViewGroup: void onDescendantInvalidated(android.view.View,android.view.View)>[normal]
(22)<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>[normal]    ---->    <android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>[normal]
(5)<android.view.KeyEvent: boolean dispatch(android.view.KeyEvent$Callback)>[normal]    ---->    <android.view.KeyEvent: boolean dispatch(android.view.KeyEvent$Callback,android.view.KeyEvent$DispatcherState,java.lang.Object)>[normal]
(24)<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>[normal]    ---->    <android.view.inputmethod.InputMethodSubtype: java.lang.String getLanguageTag()>[normal]
(26)<android.app.admin.DevicePolicyManager: void setApplicationRestrictionsManagingPackage(android.content.ComponentName,java.lang.String)>[normal]    ---->    <android.app.admin.DevicePolicyManager: void setDelegatedScopes(android.content.ComponentName,java.lang.String,java.util.List)>[normal]
(28)<android.media.MediaDrm: void release()>[normal]    ---->    <android.media.MediaDrm: void close()>[normal]
(28)<android.location.GnssMeasurement: boolean hasCarrierPhase()>[normal]    ---->    <android.location.GnssMeasurement: int getAccumulatedDeltaRangeState()>[normal]
(28)<android.view.inputmethod.InputMethodManager: void setInputMethodAndSubtype(android.os.IBinder,java.lang.String,android.view.inputmethod.InputMethodSubtype)>[normal]    ---->    <android.inputmethodservice.InputMethodService: void switchInputMethod(java.lang.String,android.view.inputmethod.InputMethodSubtype)>[normal]
(28)<android.telephony.CellIdentityGsm: int getMcc()>[normal]    ---->    <android.telephony.CellIdentityGsm: java.lang.String getMccString()>[normal]
(11)<android.database.CursorWindow: boolean isLong(int,int)>[normal]   ---->    <android.database.CursorWindow: int getType(int,int)>[normal]
(24)<android.view.textservice.SpellCheckerSubtype: java.lang.String getLocale()>[normal]    ---->    <android.view.textservice.SpellCheckerSubtype: java.lang.String getLanguageTag()>[normal]
(3)<android.view.ViewConfiguration: int getWindowTouchSlop()>[static]    ---->    <android.view.ViewConfiguration: int getScaledWindowTouchSlop()>[normal]
(14)<android.webkit.WebSettings: android.webkit.WebSettings$TextSize getTextSize()>[normal]    ---->    <android.webkit.WebSettings: int getTextZoom()>[abstract]
(28)<android.view.View: boolean willNotCacheDrawing()>[normal]    ---->    <android.view.View: void setLayerType(int,android.graphics.Paint)>[normal]
(14)<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>[normal]    ---->  <android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>[normal]
(28)<android.app.Activity: void startActivityFromFragment(android.app.Fragment,android.content.Intent,int)>[normal]    ---->    <android.support.v4.app.FragmentActivity: void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int)>[normal]
(28)<android.view.inputmethod.InputMethodManager: boolean shouldOfferSwitchingToNextInputMethod(android.os.IBinder)>[normal]    ---->    <android.inputmethodservice.InputMethodService: boolean shouldOfferSwitchingToNextInputMethod()>[normal]
(24)<android.content.ContentProviderClient: boolean release()>[normal]    ---->    <android.content.ContentProviderClient: void close()>[normal]
(28)<android.net.NetworkInfo: int getType()>[normal]    ---->    <android.net.NetworkCapabilities: boolean hasTransport(int)>[normal]
(28)<android.view.View: int getDrawingCacheBackgroundColor()>[normal]    ---->    <android.view.View: void setLayerType(int,android.graphics.Paint)>[normal]
(26)<android.app.Fragment: void onPictureInPictureModeChanged(boolean)>[normal]    ---->    <android.app.Fragment: void onPictureInPictureModeChanged(boolean,android.content.res.Configuration)>[normal]
(24)<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>[static]    ---->   <android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>[static]
(16)<android.media.AudioManager: void setVibrateSetting(int,int)>[normal]    ---->    <android.media.AudioManager: int getRingerMode()>[normal]
(21)<android.media.MediaRecorder: void setCamera(android.hardware.Camera)>[normal]    ---->    <android.media.MediaRecorder: android.view.Surface getSurface()>[normal]
(21)<android.view.inputmethod.InputMethodManager: boolean isWatchingCursor(android.view.View)>[normal]    ---->    <android.view.inputmethod.InputConnection: boolean requestCursorUpdates(int)>[abstract]
(11)<android.database.CursorWindow: boolean isBlob(int,int)>[normal]    ---->    <android.database.CursorWindow: int getType(int,int)>[normal]
(28)<android.location.GnssMeasurement: double getCarrierPhase()>[normal]    ---->    <android.location.GnssMeasurement: double getAccumulatedDeltaRangeMeters()>[normal]
(26)<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)>[normal]   ---->    <android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint)>[normal]
(26)<android.app.admin.DevicePolicyManager: java.lang.String getCertInstallerPackage(android.content.ComponentName)>[normal]    ---->    <android.app.admin.DevicePolicyManager: java.util.List getDelegatePackages(android.content.ComponentName,java.lang.String)>[normal]
(28)<android.telephony.CellIdentityWcdma: int getMcc()>[normal]    ---->    <android.telephony.CellIdentityWcdma: java.lang.String getMccString()>[normal]
(24)<android.text.TextUtils: boolean isGraphic(char)>[static]    ---->    <android.text.TextUtils: boolean isGraphic(java.lang.CharSequence)>[static]
(12)<android.app.Fragment: void onInflate(android.util.AttributeSet,android.os.Bundle)>[normal]    ---->  <android.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)>[normal]
(23)<android.widget.TimePicker: java.lang.Integer getCurrentHour()>[normal]    ---->    <android.widget.TimePicker: int getHour()>[normal]
(3)<android.app.AlertDialog: void setButton3(java.lang.CharSequence,android.os.Message)>[normal]    ---->  <android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.os.Message)>[normal]
(3)<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorListener)>[normal]    ---->    <android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener)>[normal]
(26)<android.text.method.TimeKeyListener: android.text.method.TimeKeyListener getInstance()>[static]    ---->    <android.text.method.TimeKeyListener: android.text.method.TimeKeyListener getInstance(java.util.Locale)>[static]
(3)<android.app.AlertDialog: void setButton(java.lang.CharSequence,android.os.Message)>[normal]    ---->  <android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.os.Message)>[normal]
(21)<android.webkit.WebView: android.print.PrintDocumentAdapter createPrintDocumentAdapter()>[normal]    ---->    <android.webkit.WebView: android.print.PrintDocumentAdapter createPrintDocumentAdapter(java.lang.String)>[normal]
(24)<android.text.style.SuggestionSpan: java.lang.String getLocale()>  [normal]   ---->  <android.text.style.SuggestionSpan: java.util.Locale getLocaleObject()>[normal]
(21)<android.webkit.CookieManager: void removeSessionCookie()>[abstract]    ---->    <android.webkit.CookieManager: void removeSessionCookies(android.webkit.ValueCallback)>[abstract]
(3)<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorListener,int,int)>[normal]    ---->    <android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int)>[normal]
(26)<android.media.AudioManager: boolean isBluetoothA2dpOn()>[normal]    ---->    <android.media.AudioManager: android.media.AudioDeviceInfo[] getDevices(int)>[normal]
(28)<android.telephony.PhoneNumberUtils: byte[] numberToCalledPartyBCD(java.lang.String)>[static]    ---->    <android.telephony.PhoneNumberUtils: byte[] numberToCalledPartyBCD(java.lang.String,int)>[static]
(26)<android.app.admin.DevicePolicyManager: void setCertInstallerPackage(android.content.ComponentName,java.lang.String)>[normal]    ---->    <android.app.admin.DevicePolicyManager: void setDelegatedScopes(android.content.ComponentName,java.lang.String,java.util.List)>[normal]
(28)<android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String)>[static]    ---->    <android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String,java.lang.String)>[static]
(28)<android.view.View: void setDrawingCacheBackgroundColor(int)>[normal]    ---->    <android.view.View: void setLayerType(int,android.graphics.Paint)>[normal]
(26)<android.webkit.WebView: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>[normal]    ---->    <android.webkit.WebViewDatabase: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>[abstract]
(5)<android.app.Service: void onStart(android.content.Intent,int)>[normal]    ---->  <android.app.Service: int onStartCommand(android.content.Intent,int,int)>[normal]
(26)<android.app.Activity: void onMultiWindowModeChanged(boolean)>[normal]    ---->  <android.app.Activity: void onMultiWindowModeChanged(boolean,android.content.res.Configuration)>[normal]
(3)<android.hardware.SensorManager: int getSensors()>[normal]    ---->    <android.hardware.SensorManager: java.util.List getSensorList(int)>[normal]
(11)<android.database.CursorWindow: boolean isFloat(int,int)>[normal]    ---->    <android.database.CursorWindow: int getType(int,int)>[normal]
(28)<android.app.Activity: android.app.FragmentManager getFragmentManager()>[normal]    ---->    <android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>[normal]
(17)<android.content.IntentSender: java.lang.String getTargetPackage()>[normal]    ---->    <android.content.IntentSender: java.lang.String getCreatorPackage()>[normal]
(26)<android.app.Activity: void onPictureInPictureModeChanged(boolean)>[normal]    ---->  <android.app.Activity: void onPictureInPictureModeChanged(boolean,android.content.res.Configuration)>[normal]
(3)<android.view.ViewConfiguration: int getScrollBarSize()>[static]    ---->    <android.view.ViewConfiguration: int getScaledScrollBarSize()>[normal]
(23)<android.app.ActivityManager: boolean isInLockTaskMode()>[normal]    ---->  <android.app.ActivityManager: int getLockTaskModeState()>[normal]
(16)<android.view.textservice.SpellCheckerSession: void getSuggestions(android.view.textservice.TextInfo,int)>[normal]   ---->    <android.view.textservice.SpellCheckerSession: void getSentenceSuggestions(android.view.textservice.TextInfo[],int)>[normal]
(17)<android.app.PendingIntent: java.lang.String getTargetPackage()>[normal]    ---->  <android.app.PendingIntent: java.lang.String getCreatorPackage()>[normal]
(28)<android.app.Activity: void onAttachFragment(android.app.Fragment)>[normal]    ---->  <android.support.v4.app.FragmentActivity: void onAttachFragment(android.support.v4.app.Fragment)>[normal]
(26)<android.app.Activity: boolean requestVisibleBehind(boolean)>[normal]   ----> <android.app.Activity: void onVisibleBehindCanceled()>[normal]
(26)<android.os.Vibrator: void vibrate(long[],int)>[normal]    ---->    <android.os.Vibrator: void vibrate(android.os.VibrationEffect)>[normal]
(4)<android.telephony.SmsMessage: int getStatusOnSim()>[normal]    ---->    <android.telephony.SmsMessage: int getIndexOnIcc()>[normal]
(26)<android.app.Fragment: void onMultiWindowModeChanged(boolean)>[normal]    ---->  <android.app.Fragment: void onMultiWindowModeChanged(boolean,android.content.res.Configuration)>[normal]
(4)<android.content.Intent: java.lang.String toURI()>[normal]    ---->    <android.content.Intent: java.lang.String toUri(int)>[normal]
(3)<android.view.ViewConfiguration: int getTouchSlop()>[static]    ---->    <android.view.ViewConfiguration: int getScaledTouchSlop()>[normal]
(28)<android.view.inputmethod.InputMethodManager: void hideStatusIcon(android.os.IBinder)>[normal]    ---->    <android.inputmethodservice.InputMethodService: void hideStatusIcon()>[normal]
(18)<android.os.StatFs: int getAvailableBlocks()>[normal]    ---->    <android.os.StatFs: long getAvailableBlocksLong()>[normal]
(28)<android.telephony.PhoneNumberUtils: java.lang.String calledPartyBCDFragmentToString(byte[],int,int)>[static]    ---->   <android.telephony.PhoneNumberUtils: java.lang.String calledPartyBCDFragmentToString(byte[],int,int,int)>[static]
(28)<android.view.View: void invalidate(int,int,int,int)>[normal]    ---->    <android.view.View: void invalidate()>[normal]
(21)<android.view.inputmethod.InputMethodManager: void updateCursor(android.view.View,int,int,int,int)>[normal]    ---->    <android.view.inputmethod.InputMethodManager: void updateCursorAnchorInfo(android.view.View,android.view.inputmethod.CursorAnchorInfo)>[normal]
(21)<android.telephony.PhoneNumberUtils: int getFormatTypeForLocale(java.util.Locale)>[static]    ---->    <android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String,java.lang.String)>[static]
(21)<android.view.accessibility.AccessibilityNodeInfo: void removeAction(int)>[normal]    ---->    <android.view.accessibility.AccessibilityNodeInfo: boolean removeAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>[normal]
(16)<android.animation.LayoutTransition: void showChild(android.view.ViewGroup,android.view.View)>[normal]    ---->  <android.animation.LayoutTransition: void showChild(android.view.ViewGroup,android.view.View,int)>[normal]
(26)<android.media.AudioManager: int requestAudioFocus(android.media.AudioManager$OnAudioFocusChangeListener,int,int)>[normal]    ---->    <android.media.AudioManager: int requestAudioFocus(android.media.AudioFocusRequest)>[normal]
(26)<android.telephony.TelephonyManager: java.lang.String getDeviceId()>[normal]    ---->    <android.telephony.TelephonyManager: java.lang.String getImei(int)>[normal]
(21)<android.view.accessibility.AccessibilityNodeInfo: int getActions()>[normal]    ---->    <android.view.accessibility.AccessibilityNodeInfo: java.util.List getActionList()>[normal]
(11)<android.database.CursorWindow: boolean isString(int,int)>[normal]    ---->    <android.database.CursorWindow: int getType(int,int)>[normal]
(16)<android.animation.LayoutTransition: void hideChild(android.view.ViewGroup,android.view.View)>[normal]    ---->  <android.animation.LayoutTransition: void hideChild(android.view.ViewGroup,android.view.View,int)>[normal]
(24)<android.text.Html: java.lang.String toHtml(android.text.Spanned)>[static]   ---->  <android.text.Html: java.lang.String toHtml(android.text.Spanned,int)>[static]
(3)<android.app.AlertDialog: void setButton2(java.lang.CharSequence,android.os.Message)>[normal]    ---->  <android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.os.Message)>[normal]
(14)<android.view.accessibility.AccessibilityManager: java.util.List getAccessibilityServiceList()>[normal]    ---->    <android.view.accessibility.AccessibilityManager: java.util.List getInstalledAccessibilityServiceList()>[normal]
(17)<android.webkit.WebView: boolean canZoomIn()>[normal]    ---->    <android.webkit.WebViewClient: void onScaleChanged(android.webkit.WebView,float,float)>[normal]